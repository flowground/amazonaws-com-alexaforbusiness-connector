{
    "openapi": "3.0.0",
    "servers": [
        {
            "url": "https://a4b.amazonaws.com/"
        },
        {
            "url": "http://a4b.amazonaws.com/"
        }
    ],
    "x-hasEquivalentPaths": true,
    "info": {
        "contact": {
            "email": "mike.ralphson@gmail.com",
            "name": "Mike Ralphson",
            "url": "https://github.com/mermade/aws2openapi",
            "x-twitter": "PermittedSoc"
        },
        "description": "Alexa for Business helps you use Alexa in your organization. Alexa for Business provides you with the tools to manage Alexa devices, enroll your users, and assign skills, at scale. You can build your own context-aware voice skills using the Alexa Skills Kit and the Alexa for Business API operations. You can also make these available as private skills for your organization. Alexa for Business makes it efficient to voice-enable your products and services, thus providing context-aware voice experiences for your customers. Device makers building with the Alexa Voice Service (AVS) can create fully integrated solutions, register their products with Alexa for Business, and manage them as shared devices in their organization. ",
        "license": {
            "name": "Apache 2.0 License",
            "url": "http://www.apache.org/licenses/"
        },
        "termsOfService": "https://aws.amazon.com/service-terms/",
        "title": "Alexa For Business",
        "version": "2017-11-09",
        "x-apiClientRegistration": {
            "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
        },
        "x-apisguru-categories": [
            "cloud"
        ],
        "x-logo": {
            "backgroundColor": "#FFFFFF",
            "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.jpeg"
        },
        "x-origin": [
            {
                "contentType": "application/json",
                "converter": {
                    "url": "https://github.com/mermade/aws2openapi",
                    "version": "1.0.0"
                },
                "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/alexaforbusiness-2017-11-09.normal.json",
                "x-apisguru-direct": true
            }
        ],
        "x-preferred": true,
        "x-providerName": "amazonaws.com",
        "x-release": "v4",
        "x-serviceName": "alexaforbusiness"
    },
    "externalDocs": {
        "description": "Amazon Web Services documentation",
        "url": "https://aws.amazon.com/a4b/"
    },
    "security": [
        {
            "hmac": []
        }
    ],
    "paths": {
        "/": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Associates a skill with the organization under the customer's AWS account. If a skill is private, the user implicitly accepts access to this skill during enablement.",
                "operationId": "ApproveSkill",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "SkillId": {
                                        "description": "The unique identifier of the skill.",
                                        "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SkillId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#AssociateContactWithAddressBook": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Associates a contact with a given address book.",
                "operationId": "AssociateContactWithAddressBook",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "AddressBookArn": {
                                        "description": "The ARN of the address book with which to associate the contact.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    },
                                    "ContactArn": {
                                        "description": "The ARN of the contact to associate with an address book.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ContactArn",
                                    "AddressBookArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#AssociateDeviceWithRoom": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Associates a device with a given room. This applies all the settings from the room profile to the device, and all the skills in any skill groups added to that room. This operation requires the device to be online, or else a manual sync is required. ",
                "operationId": "AssociateDeviceWithRoom",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "DeviceNotRegisteredException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "DeviceArn": {
                                        "description": "The ARN of the device to associate to a room. Required.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    },
                                    "RoomArn": {
                                        "description": "The ARN of the room with which to associate the device. Required.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#AssociateSkillGroupWithRoom": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Associates a skill group with a given room. This enables all skills in the associated skill group on all devices in the room.",
                "operationId": "AssociateSkillGroupWithRoom",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "RoomArn": {
                                        "description": "The ARN of the room with which to associate the skill group. Required.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    },
                                    "SkillGroupArn": {
                                        "description": "The ARN of the skill group to associate with a room. Required.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#AssociateSkillWithSkillGroup": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Associates a skill with a skill group.",
                "operationId": "AssociateSkillWithSkillGroup",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "SkillNotLinkedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "SkillGroupArn": {
                                        "description": "The ARN of the skill group to associate the skill to. Required.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    },
                                    "SkillId": {
                                        "description": "The unique identifier of the skill.",
                                        "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SkillId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#AssociateSkillWithUsers": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Makes a private skill available for enrolled users to enable on their devices.",
                "operationId": "AssociateSkillWithUsers",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "SkillId": {
                                        "description": "The private skill ID you want to make available to enrolled users.",
                                        "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SkillId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CreateAddressBook": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates an address book with the specified details.",
                "operationId": "CreateAddressBook",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "AddressBookArn": {
                                            "description": "The ARN of the newly created address book.",
                                            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AlreadyExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ClientRequestToken": {
                                        "description": "A unique, user-specified identifier for the request that ensures idempotency.",
                                        "maxLength": 150,
                                        "minLength": 10,
                                        "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "The description of the address book.",
                                        "maxLength": 200,
                                        "minLength": 1,
                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The name of the address book.",
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Name"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CreateBusinessReportSchedule": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a recurring schedule for usage reports to deliver to the specified S3 location with a specified daily or weekly interval.",
                "operationId": "CreateBusinessReportSchedule",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ScheduleArn": {
                                            "description": "The ARN of the business report schedule.",
                                            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AlreadyExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ClientRequestToken": {
                                        "description": "The client request token.",
                                        "maxLength": 150,
                                        "minLength": 10,
                                        "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
                                        "type": "string"
                                    },
                                    "ContentRange": {
                                        "description": "The content range of the reports.",
                                        "properties": {
                                            "Interval": {
                                                "description": "The interval of the content range.",
                                                "enum": [
                                                    "ONE_DAY",
                                                    "ONE_WEEK"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Format": {
                                        "description": "The format of the generated report (individual CSV files or zipped files of individual files).",
                                        "enum": [
                                            "CSV",
                                            "CSV_ZIP"
                                        ],
                                        "type": "string"
                                    },
                                    "Recurrence": {
                                        "description": "The recurrence of the reports. If this isn't specified, the report will only be delivered one time when the API is called. ",
                                        "properties": {
                                            "StartDate": {
                                                "description": "The start date.",
                                                "pattern": "^\\d{4}\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01])$",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "S3BucketName": {
                                        "description": "The S3 bucket name of the output reports. If this isn't specified, the report can be retrieved from a download link by calling ListBusinessReportSchedule. ",
                                        "pattern": "[a-z0-9-\\.]{3,63}",
                                        "type": "string"
                                    },
                                    "S3KeyPrefix": {
                                        "description": "The S3 key where the report is delivered.",
                                        "maxLength": 100,
                                        "minLength": 0,
                                        "pattern": "[A-Za-z0-9!_\\-\\.\\*'()/]*",
                                        "type": "string"
                                    },
                                    "ScheduleName": {
                                        "description": "The name identifier of the schedule.",
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Format",
                                    "ContentRange"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CreateConferenceProvider": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Adds a new conference provider under the user's AWS account.",
                "operationId": "CreateConferenceProvider",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ConferenceProviderArn": {
                                            "description": "The ARN of the newly-created conference provider.",
                                            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AlreadyExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ClientRequestToken": {
                                        "description": "The request token of the client.",
                                        "maxLength": 150,
                                        "minLength": 10,
                                        "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
                                        "type": "string"
                                    },
                                    "ConferenceProviderName": {
                                        "description": "The name of the conference provider.",
                                        "maxLength": 50,
                                        "minLength": 1,
                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                        "type": "string"
                                    },
                                    "ConferenceProviderType": {
                                        "description": "Represents a type within a list of predefined types.",
                                        "enum": [
                                            "CHIME",
                                            "BLUEJEANS",
                                            "FUZE",
                                            "GOOGLE_HANGOUTS",
                                            "POLYCOM",
                                            "RINGCENTRAL",
                                            "SKYPE_FOR_BUSINESS",
                                            "WEBEX",
                                            "ZOOM",
                                            "CUSTOM"
                                        ],
                                        "type": "string"
                                    },
                                    "IPDialIn": {
                                        "description": "The IP endpoint and protocol for calling.",
                                        "properties": {
                                            "CommsProtocol": {
                                                "description": "The protocol, including SIP, SIPS, and H323.",
                                                "enum": [
                                                    "SIP",
                                                    "SIPS",
                                                    "H323"
                                                ],
                                                "type": "string"
                                            },
                                            "Endpoint": {
                                                "description": "The IP address.",
                                                "maxLength": 256,
                                                "minLength": 1,
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "Endpoint",
                                            "CommsProtocol"
                                        ],
                                        "type": "object"
                                    },
                                    "MeetingSetting": {
                                        "description": "The meeting settings for the conference provider.",
                                        "properties": {
                                            "RequirePin": {
                                                "description": "The values that indicate whether the pin is always required.",
                                                "enum": [
                                                    "YES",
                                                    "NO",
                                                    "OPTIONAL"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "RequirePin"
                                        ],
                                        "type": "object"
                                    },
                                    "PSTNDialIn": {
                                        "description": "The information for PSTN conferencing.",
                                        "properties": {
                                            "CountryCode": {
                                                "description": "The zip code.",
                                                "pattern": "\\d{1,3}",
                                                "type": "string"
                                            },
                                            "OneClickIdDelay": {
                                                "description": "The delay duration before Alexa enters the conference ID with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.",
                                                "maxLength": 2,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "OneClickPinDelay": {
                                                "description": "The delay duration before Alexa enters the conference pin with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.",
                                                "maxLength": 2,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "PhoneNumber": {
                                                "description": "The phone number to call to join the conference.",
                                                "pattern": "\\d{10}",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "CountryCode",
                                            "PhoneNumber",
                                            "OneClickIdDelay",
                                            "OneClickPinDelay"
                                        ],
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "ConferenceProviderName",
                                    "ConferenceProviderType",
                                    "MeetingSetting"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CreateContact": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a contact with the specified details.",
                "operationId": "CreateContact",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ContactArn": {
                                            "description": "The ARN of the newly created address book.",
                                            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AlreadyExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ClientRequestToken": {
                                        "description": "A unique, user-specified identifier for this request that ensures idempotency.",
                                        "maxLength": 150,
                                        "minLength": 10,
                                        "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
                                        "type": "string"
                                    },
                                    "DisplayName": {
                                        "description": "The name of the contact to display on the console.",
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                        "type": "string"
                                    },
                                    "FirstName": {
                                        "description": "The first name of the contact that is used to call the contact on the device.",
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                        "type": "string"
                                    },
                                    "LastName": {
                                        "description": "The last name of the contact that is used to call the contact on the device.",
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                        "type": "string"
                                    },
                                    "PhoneNumber": {
                                        "description": "The phone number of the contact in E.164 format.",
                                        "format": "password",
                                        "pattern": "^\\+\\d{8,}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "FirstName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CreateProfile": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a new room profile with the specified details.",
                "operationId": "CreateProfile",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ProfileArn": {
                                            "description": "The ARN of the newly created room profile in the response.",
                                            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "AlreadyExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Address": {
                                        "description": "The valid address for the room.",
                                        "maxLength": 500,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "ClientRequestToken": {
                                        "description": "The user-specified token that is used during the creation of a profile.",
                                        "maxLength": 150,
                                        "minLength": 10,
                                        "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
                                        "type": "string"
                                    },
                                    "DistanceUnit": {
                                        "description": "The distance unit to be used by devices in the profile.",
                                        "enum": [
                                            "METRIC",
                                            "IMPERIAL"
                                        ],
                                        "type": "string"
                                    },
                                    "MaxVolumeLimit": {
                                        "description": "The maximum volume limit for a room profile.",
                                        "type": "integer"
                                    },
                                    "PSTNEnabled": {
                                        "description": "Whether PSTN calling is enabled.",
                                        "type": "boolean"
                                    },
                                    "ProfileName": {
                                        "description": "The name of a room profile.",
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                        "type": "string"
                                    },
                                    "SetupModeDisabled": {
                                        "description": "Whether room profile setup is enabled.",
                                        "type": "boolean"
                                    },
                                    "TemperatureUnit": {
                                        "description": "The temperature unit to be used by devices in the profile.",
                                        "enum": [
                                            "FAHRENHEIT",
                                            "CELSIUS"
                                        ],
                                        "type": "string"
                                    },
                                    "Timezone": {
                                        "description": "The time zone used by a room profile.",
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "WakeWord": {
                                        "description": "A wake word for Alexa, Echo, Amazon, or a computer.",
                                        "enum": [
                                            "ALEXA",
                                            "AMAZON",
                                            "ECHO",
                                            "COMPUTER"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ProfileName",
                                    "Timezone",
                                    "Address",
                                    "DistanceUnit",
                                    "TemperatureUnit",
                                    "WakeWord"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CreateRoom": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a room with the specified details.",
                "operationId": "CreateRoom",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "RoomArn": {
                                            "description": "The ARN of the newly created room in the response.",
                                            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AlreadyExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ClientRequestToken": {
                                        "description": "A unique, user-specified identifier for this request that ensures idempotency. ",
                                        "maxLength": 150,
                                        "minLength": 10,
                                        "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "The description for the room.",
                                        "maxLength": 200,
                                        "minLength": 1,
                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                        "type": "string"
                                    },
                                    "ProfileArn": {
                                        "description": "The profile ARN for the room.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    },
                                    "ProviderCalendarId": {
                                        "description": "The calendar ARN for the room.",
                                        "maxLength": 100,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "RoomName": {
                                        "description": "The name for the room.",
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                        "type": "string"
                                    },
                                    "Tags": {
                                        "description": "The tags for the room.",
                                        "items": {
                                            "description": "A key-value pair that can be associated with a resource. ",
                                            "properties": {
                                                "Key": {
                                                    "description": "The key of a tag. Tag keys are case-sensitive. ",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value of a tag. Tag values are case-sensitive and can be null.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Key",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "RoomName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CreateSkillGroup": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a skill group with a specified name and description.",
                "operationId": "CreateSkillGroup",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "SkillGroupArn": {
                                            "description": "The ARN of the newly created skill group in the response.",
                                            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AlreadyExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ClientRequestToken": {
                                        "description": "A unique, user-specified identifier for this request that ensures idempotency. ",
                                        "maxLength": 150,
                                        "minLength": 10,
                                        "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "The description for the skill group.",
                                        "maxLength": 200,
                                        "minLength": 1,
                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                        "type": "string"
                                    },
                                    "SkillGroupName": {
                                        "description": "The name for the skill group.",
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SkillGroupName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CreateUser": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a user.",
                "operationId": "CreateUser",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "UserArn": {
                                            "description": "The ARN of the newly created user in the response.",
                                            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceInUseException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ClientRequestToken": {
                                        "description": "A unique, user-specified identifier for this request that ensures idempotency. ",
                                        "maxLength": 150,
                                        "minLength": 10,
                                        "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
                                        "type": "string"
                                    },
                                    "Email": {
                                        "description": "The email address for the user.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                                        "type": "string"
                                    },
                                    "FirstName": {
                                        "description": "The first name for the user.",
                                        "maxLength": 30,
                                        "minLength": 0,
                                        "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
                                        "type": "string"
                                    },
                                    "LastName": {
                                        "description": "The last name for the user.",
                                        "maxLength": 30,
                                        "minLength": 0,
                                        "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
                                        "type": "string"
                                    },
                                    "Tags": {
                                        "description": "The tags for the user.",
                                        "items": {
                                            "description": "A key-value pair that can be associated with a resource. ",
                                            "properties": {
                                                "Key": {
                                                    "description": "The key of a tag. Tag keys are case-sensitive. ",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value of a tag. Tag values are case-sensitive and can be null.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Key",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "UserId": {
                                        "description": "The ARN for the user.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "[a-zA-Z0-9@_+.-]*",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "UserId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteAddressBook": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Deletes an address book by the address book ARN.",
                "operationId": "DeleteAddressBook",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "AddressBookArn": {
                                        "description": "The ARN of the address book to delete.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "AddressBookArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteBusinessReportSchedule": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Deletes the recurring report delivery schedule with the specified schedule ARN.",
                "operationId": "DeleteBusinessReportSchedule",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ScheduleArn": {
                                        "description": "The ARN of the business report schedule.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ScheduleArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteConferenceProvider": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Deletes a conference provider.",
                "operationId": "DeleteConferenceProvider",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ConferenceProviderArn": {
                                        "description": "The ARN of the conference provider.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ConferenceProviderArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteContact": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Deletes a contact by the contact ARN.",
                "operationId": "DeleteContact",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ContactArn": {
                                        "description": "The ARN of the contact to delete.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ContactArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteDevice": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Removes a device from Alexa For Business.",
                "operationId": "DeleteDevice",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidCertificateAuthorityException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "DeviceArn": {
                                        "description": "The ARN of the device for which to request details.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "DeviceArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteProfile": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Deletes a room profile by the profile ARN.",
                "operationId": "DeleteProfile",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ProfileArn": {
                                        "description": "The ARN of the room profile to delete. Required.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteRoom": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Deletes a room by the room ARN.",
                "operationId": "DeleteRoom",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "RoomArn": {
                                        "description": "The ARN of the room to delete. Required.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteRoomSkillParameter": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Deletes room skill parameter details by room, skill, and parameter key ID.",
                "operationId": "DeleteRoomSkillParameter",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ParameterKey": {
                                        "description": "The room skill parameter key for which to remove details.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "RoomArn": {
                                        "description": "The ARN of the room from which to remove the room skill parameter details.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    },
                                    "SkillId": {
                                        "description": "The ID of the skill from which to remove the room skill parameter details.",
                                        "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SkillId",
                                    "ParameterKey"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteSkillAuthorization": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Unlinks a third-party account from a skill.",
                "operationId": "DeleteSkillAuthorization",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "RoomArn": {
                                        "description": "The room that the skill is authorized for.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    },
                                    "SkillId": {
                                        "description": "The unique identifier of a skill.",
                                        "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SkillId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteSkillGroup": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Deletes a skill group by skill group ARN.",
                "operationId": "DeleteSkillGroup",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "SkillGroupArn": {
                                        "description": "The ARN of the skill group to delete. Required.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteUser": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Deletes a specified user by user ARN and enrollment ARN.",
                "operationId": "DeleteUser",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "EnrollmentId": {
                                        "description": "The ARN of the user's enrollment in the organization. Required.",
                                        "maxLength": 128,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "UserArn": {
                                        "description": "The ARN of the user to delete in the organization. Required.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "EnrollmentId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DisassociateContactFromAddressBook": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Disassociates a contact from a given address book.",
                "operationId": "DisassociateContactFromAddressBook",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "AddressBookArn": {
                                        "description": "The ARN of the address from which to disassociate the contact.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    },
                                    "ContactArn": {
                                        "description": "The ARN of the contact to disassociate from an address book.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ContactArn",
                                    "AddressBookArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DisassociateDeviceFromRoom": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Disassociates a device from its current room. The device continues to be connected to the Wi-Fi network and is still registered to the account. The device settings and skills are removed from the room.",
                "operationId": "DisassociateDeviceFromRoom",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "DeviceNotRegisteredException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "DeviceArn": {
                                        "description": "The ARN of the device to disassociate from a room. Required.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DisassociateSkillFromSkillGroup": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Disassociates a skill from a skill group.",
                "operationId": "DisassociateSkillFromSkillGroup",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "SkillGroupArn": {
                                        "description": "The unique identifier of a skill. Required.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    },
                                    "SkillId": {
                                        "description": "The ARN of a skill group to associate to a skill.",
                                        "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SkillId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DisassociateSkillFromUsers": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Makes a private skill unavailable for enrolled users and prevents them from enabling it on their devices.",
                "operationId": "DisassociateSkillFromUsers",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "SkillId": {
                                        "description": " The private skill ID you want to make unavailable for enrolled users.",
                                        "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SkillId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DisassociateSkillGroupFromRoom": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Disassociates a skill group from a specified room. This disables all skills in the skill group on all devices in the room.",
                "operationId": "DisassociateSkillGroupFromRoom",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "RoomArn": {
                                        "description": "The ARN of the room from which the skill group is to be disassociated. Required.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    },
                                    "SkillGroupArn": {
                                        "description": "The ARN of the skill group to disassociate from a room. Required.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ForgetSmartHomeAppliances": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Forgets smart home appliances associated to a room.",
                "operationId": "ForgetSmartHomeAppliances",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "RoomArn": {
                                        "description": "The room that the appliances are associated with.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "RoomArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetAddressBook": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Gets address the book details by the address book ARN.",
                "operationId": "GetAddressBook",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "AddressBook": {
                                            "description": "The details of the requested address book.",
                                            "properties": {
                                                "AddressBookArn": {
                                                    "description": "The ARN of the address book.",
                                                    "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                                    "type": "string"
                                                },
                                                "Description": {
                                                    "description": "The description of the address book.",
                                                    "maxLength": 200,
                                                    "minLength": 1,
                                                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the address book.",
                                                    "maxLength": 100,
                                                    "minLength": 1,
                                                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "AddressBookArn": {
                                        "description": "The ARN of the address book for which to request details.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "AddressBookArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetConferencePreference": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Retrieves the existing conference preferences.",
                "operationId": "GetConferencePreference",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Preference": {
                                            "description": "The conference preference.",
                                            "properties": {
                                                "DefaultConferenceProviderArn": {
                                                    "description": "The ARN of the default conference provider.",
                                                    "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetConferenceProvider": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Gets details about a specific conference provider.",
                "operationId": "GetConferenceProvider",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ConferenceProvider": {
                                            "description": "The conference provider.",
                                            "properties": {
                                                "Arn": {
                                                    "description": "The ARN of the newly created conference provider.",
                                                    "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                                    "type": "string"
                                                },
                                                "IPDialIn": {
                                                    "description": "The IP endpoint and protocol for calling.",
                                                    "properties": {
                                                        "CommsProtocol": {
                                                            "description": "The protocol, including SIP, SIPS, and H323.",
                                                            "enum": [
                                                                "SIP",
                                                                "SIPS",
                                                                "H323"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "Endpoint": {
                                                            "description": "The IP address.",
                                                            "maxLength": 256,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "Endpoint",
                                                        "CommsProtocol"
                                                    ],
                                                    "type": "object"
                                                },
                                                "MeetingSetting": {
                                                    "description": "The meeting settings for the conference provider.",
                                                    "properties": {
                                                        "RequirePin": {
                                                            "description": "The values that indicate whether the pin is always required.",
                                                            "enum": [
                                                                "YES",
                                                                "NO",
                                                                "OPTIONAL"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "RequirePin"
                                                    ],
                                                    "type": "object"
                                                },
                                                "Name": {
                                                    "description": "The name of the conference provider.",
                                                    "maxLength": 50,
                                                    "minLength": 1,
                                                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                                    "type": "string"
                                                },
                                                "PSTNDialIn": {
                                                    "description": "The information for PSTN conferencing.",
                                                    "properties": {
                                                        "CountryCode": {
                                                            "description": "The zip code.",
                                                            "pattern": "\\d{1,3}",
                                                            "type": "string"
                                                        },
                                                        "OneClickIdDelay": {
                                                            "description": "The delay duration before Alexa enters the conference ID with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.",
                                                            "maxLength": 2,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "OneClickPinDelay": {
                                                            "description": "The delay duration before Alexa enters the conference pin with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.",
                                                            "maxLength": 2,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "PhoneNumber": {
                                                            "description": "The phone number to call to join the conference.",
                                                            "pattern": "\\d{10}",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "CountryCode",
                                                        "PhoneNumber",
                                                        "OneClickIdDelay",
                                                        "OneClickPinDelay"
                                                    ],
                                                    "type": "object"
                                                },
                                                "Type": {
                                                    "description": "The type of conference providers.",
                                                    "enum": [
                                                        "CHIME",
                                                        "BLUEJEANS",
                                                        "FUZE",
                                                        "GOOGLE_HANGOUTS",
                                                        "POLYCOM",
                                                        "RINGCENTRAL",
                                                        "SKYPE_FOR_BUSINESS",
                                                        "WEBEX",
                                                        "ZOOM",
                                                        "CUSTOM"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ConferenceProviderArn": {
                                        "description": "The ARN of the newly created conference provider.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ConferenceProviderArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetContact": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Gets the contact details by the contact ARN.",
                "operationId": "GetContact",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Contact": {
                                            "description": "The details of the requested contact.",
                                            "properties": {
                                                "ContactArn": {
                                                    "description": "The ARN of the contact.",
                                                    "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                                    "type": "string"
                                                },
                                                "DisplayName": {
                                                    "description": "The name of the contact to display on the console.",
                                                    "maxLength": 100,
                                                    "minLength": 1,
                                                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                                    "type": "string"
                                                },
                                                "FirstName": {
                                                    "description": "The first name of the contact, used to call the contact on the device.",
                                                    "maxLength": 100,
                                                    "minLength": 1,
                                                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                                    "type": "string"
                                                },
                                                "LastName": {
                                                    "description": "The last name of the contact, used to call the contact on the device.",
                                                    "maxLength": 100,
                                                    "minLength": 1,
                                                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                                    "type": "string"
                                                },
                                                "PhoneNumber": {
                                                    "description": "The phone number of the contact.",
                                                    "format": "password",
                                                    "pattern": "^\\+\\d{8,}$",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ContactArn": {
                                        "description": "The ARN of the contact for which to request details.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ContactArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetDevice": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Gets the details of a device by device ARN.",
                "operationId": "GetDevice",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Device": {
                                            "description": "The details of the device requested. Required.",
                                            "properties": {
                                                "DeviceArn": {
                                                    "description": "The ARN of a device.",
                                                    "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                                    "type": "string"
                                                },
                                                "DeviceName": {
                                                    "description": "The name of a device.",
                                                    "maxLength": 100,
                                                    "minLength": 2,
                                                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                                    "type": "string"
                                                },
                                                "DeviceSerialNumber": {
                                                    "description": "The serial number of a device.",
                                                    "pattern": "[a-zA-Z0-9]{1,200}",
                                                    "type": "string"
                                                },
                                                "DeviceStatus": {
                                                    "description": "The status of a device. If the status is not READY, check the DeviceStatusInfo value for details.",
                                                    "enum": [
                                                        "READY",
                                                        "PENDING",
                                                        "WAS_OFFLINE",
                                                        "DEREGISTERED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "DeviceStatusInfo": {
                                                    "description": "Detailed information about a device's status.",
                                                    "properties": {
                                                        "ConnectionStatus": {
                                                            "description": "The latest available information about the connection status of a device. ",
                                                            "enum": [
                                                                "ONLINE",
                                                                "OFFLINE"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "DeviceStatusDetails": {
                                                            "description": "One or more device status detail descriptions.",
                                                            "items": {
                                                                "description": "Details of a device’s status.",
                                                                "properties": {
                                                                    "Code": {
                                                                        "description": "The device status detail code.",
                                                                        "enum": [
                                                                            "DEVICE_SOFTWARE_UPDATE_NEEDED",
                                                                            "DEVICE_WAS_OFFLINE"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "DeviceType": {
                                                    "description": "The type of a device.",
                                                    "pattern": "[a-zA-Z0-9]{1,200}",
                                                    "type": "string"
                                                },
                                                "MacAddress": {
                                                    "description": "The MAC address of a device.",
                                                    "type": "string"
                                                },
                                                "RoomArn": {
                                                    "description": "The room ARN of a device.",
                                                    "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                                    "type": "string"
                                                },
                                                "SoftwareVersion": {
                                                    "description": "The software version of a device.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "DeviceArn": {
                                        "description": "The ARN of the device for which to request details. Required.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetInvitationConfiguration": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Retrieves the configured values for the user enrollment invitation email template.",
                "operationId": "GetInvitationConfiguration",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ContactEmail": {
                                            "description": "The email ID of the organization or individual contact that the enrolled user can use. ",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                                            "type": "string"
                                        },
                                        "OrganizationName": {
                                            "description": "The name of the organization sending the enrollment invite to a user.",
                                            "maxLength": 100,
                                            "minLength": 1,
                                            "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
                                            "type": "string"
                                        },
                                        "PrivateSkillIds": {
                                            "description": "The list of private skill IDs that you want to recommend to the user to enable in the invitation.",
                                            "items": {
                                                "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                                                "type": "string"
                                            },
                                            "maxItems": 3,
                                            "minItems": 0,
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetProfile": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Gets the details of a room profile by profile ARN.",
                "operationId": "GetProfile",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Profile": {
                                            "description": "The details of the room profile requested. Required.",
                                            "properties": {
                                                "Address": {
                                                    "description": "The address of a room profile.",
                                                    "maxLength": 500,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "AddressBookArn": {
                                                    "description": "The ARN of the address book.",
                                                    "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                                    "type": "string"
                                                },
                                                "DistanceUnit": {
                                                    "description": "The distance unit of a room profile.",
                                                    "enum": [
                                                        "METRIC",
                                                        "IMPERIAL"
                                                    ],
                                                    "type": "string"
                                                },
                                                "IsDefault": {
                                                    "description": "Retrieves if the profile is default or not.",
                                                    "type": "boolean"
                                                },
                                                "MaxVolumeLimit": {
                                                    "description": "The max volume limit of a room profile.",
                                                    "type": "integer"
                                                },
                                                "PSTNEnabled": {
                                                    "description": "The PSTN setting of a room profile.",
                                                    "type": "boolean"
                                                },
                                                "ProfileArn": {
                                                    "description": "The ARN of a room profile.",
                                                    "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                                    "type": "string"
                                                },
                                                "ProfileName": {
                                                    "description": "The name of a room profile.",
                                                    "maxLength": 100,
                                                    "minLength": 1,
                                                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                                    "type": "string"
                                                },
                                                "SetupModeDisabled": {
                                                    "description": "The setup mode of a room profile.",
                                                    "type": "boolean"
                                                },
                                                "TemperatureUnit": {
                                                    "description": "The temperature unit of a room profile.",
                                                    "enum": [
                                                        "FAHRENHEIT",
                                                        "CELSIUS"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Timezone": {
                                                    "description": "The time zone of a room profile.",
                                                    "maxLength": 100,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "WakeWord": {
                                                    "description": "The wake word of a room profile.",
                                                    "enum": [
                                                        "ALEXA",
                                                        "AMAZON",
                                                        "ECHO",
                                                        "COMPUTER"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ProfileArn": {
                                        "description": "The ARN of the room profile for which to request details. Required.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetRoom": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Gets room details by room ARN.",
                "operationId": "GetRoom",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Room": {
                                            "description": "The details of the room requested.",
                                            "properties": {
                                                "Description": {
                                                    "description": "The description of a room.",
                                                    "maxLength": 200,
                                                    "minLength": 1,
                                                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                                    "type": "string"
                                                },
                                                "ProfileArn": {
                                                    "description": "The profile ARN of a room.",
                                                    "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                                    "type": "string"
                                                },
                                                "ProviderCalendarId": {
                                                    "description": "The provider calendar ARN of a room.",
                                                    "maxLength": 100,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "RoomArn": {
                                                    "description": "The ARN of a room.",
                                                    "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                                    "type": "string"
                                                },
                                                "RoomName": {
                                                    "description": "The name of a room.",
                                                    "maxLength": 100,
                                                    "minLength": 1,
                                                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "RoomArn": {
                                        "description": "The ARN of the room for which to request details. Required.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetRoomSkillParameter": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Gets room skill parameter details by room, skill, and parameter key ARN.",
                "operationId": "GetRoomSkillParameter",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "RoomSkillParameter": {
                                            "description": "The details of the room skill parameter requested. Required.",
                                            "properties": {
                                                "ParameterKey": {
                                                    "description": "The parameter key of a room skill parameter. ParameterKey is an enumerated type that only takes “DEFAULT” or “SCOPE” as valid values.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "ParameterValue": {
                                                    "description": "The parameter value of a room skill parameter.",
                                                    "maxLength": 512,
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "ParameterKey",
                                                "ParameterValue"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ParameterKey": {
                                        "description": "The room skill parameter key for which to get details. Required.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "RoomArn": {
                                        "description": "The ARN of the room from which to get the room skill parameter details. ",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    },
                                    "SkillId": {
                                        "description": "The ARN of the skill from which to get the room skill parameter details. Required.",
                                        "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SkillId",
                                    "ParameterKey"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetSkillGroup": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Gets skill group details by skill group ARN.",
                "operationId": "GetSkillGroup",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "SkillGroup": {
                                            "description": "The details of the skill group requested. Required.",
                                            "properties": {
                                                "Description": {
                                                    "description": "The description of a skill group.",
                                                    "maxLength": 200,
                                                    "minLength": 1,
                                                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                                    "type": "string"
                                                },
                                                "SkillGroupArn": {
                                                    "description": "The ARN of a skill group.",
                                                    "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                                    "type": "string"
                                                },
                                                "SkillGroupName": {
                                                    "description": "The name of a skill group.",
                                                    "maxLength": 100,
                                                    "minLength": 1,
                                                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "SkillGroupArn": {
                                        "description": "The ARN of the skill group for which to get details. Required.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListBusinessReportSchedules": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Lists the details of the schedules that a user configured.",
                "operationId": "ListBusinessReportSchedules",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "BusinessReportSchedules": {
                                            "description": "The schedule of the reports.",
                                            "items": {
                                                "description": "The schedule of the usage report.",
                                                "properties": {
                                                    "ContentRange": {
                                                        "description": "The content range of the reports.",
                                                        "properties": {
                                                            "Interval": {
                                                                "description": "The interval of the content range.",
                                                                "enum": [
                                                                    "ONE_DAY",
                                                                    "ONE_WEEK"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "Format": {
                                                        "description": "The format of the generated report (individual CSV files or zipped files of individual files).",
                                                        "enum": [
                                                            "CSV",
                                                            "CSV_ZIP"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "LastBusinessReport": {
                                                        "description": "The details of the last business report delivery for a specified time interval.",
                                                        "properties": {
                                                            "DeliveryTime": {
                                                                "description": "The time of report delivery.",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "DownloadUrl": {
                                                                "description": "The download link where a user can download the report.",
                                                                "type": "string"
                                                            },
                                                            "FailureCode": {
                                                                "description": "The failure code.",
                                                                "enum": [
                                                                    "ACCESS_DENIED",
                                                                    "NO_SUCH_BUCKET",
                                                                    "INTERNAL_FAILURE"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "S3Location": {
                                                                "description": "The S3 location of the output reports.",
                                                                "properties": {
                                                                    "BucketName": {
                                                                        "description": "The S3 bucket name of the output reports.",
                                                                        "pattern": "[a-z0-9-\\.]{3,63}",
                                                                        "type": "string"
                                                                    },
                                                                    "Path": {
                                                                        "description": "The path of the business report.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "Status": {
                                                                "description": "The status of the report generation execution (RUNNING, SUCCEEDED, or FAILED).",
                                                                "enum": [
                                                                    "RUNNING",
                                                                    "SUCCEEDED",
                                                                    "FAILED"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "Recurrence": {
                                                        "description": "The recurrence of the reports.",
                                                        "properties": {
                                                            "StartDate": {
                                                                "description": "The start date.",
                                                                "pattern": "^\\d{4}\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01])$",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "S3BucketName": {
                                                        "description": "The S3 bucket name of the output reports.",
                                                        "pattern": "[a-z0-9-\\.]{3,63}",
                                                        "type": "string"
                                                    },
                                                    "S3KeyPrefix": {
                                                        "description": "The S3 key where the report is delivered.",
                                                        "maxLength": 100,
                                                        "minLength": 0,
                                                        "pattern": "[A-Za-z0-9!_\\-\\.\\*'()/]*",
                                                        "type": "string"
                                                    },
                                                    "ScheduleArn": {
                                                        "description": "The ARN of the business report schedule.",
                                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                                        "type": "string"
                                                    },
                                                    "ScheduleName": {
                                                        "description": "The name identifier of the schedule.",
                                                        "maxLength": 64,
                                                        "minLength": 0,
                                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "The token used to list the remaining schedules from the previous API call.",
                                            "maxLength": 1000,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "MaxResults": {
                                        "description": "The maximum number of schedules listed in the call.",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "The token used to list the remaining schedules from the previous API call.",
                                        "maxLength": 1000,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListConferenceProviders": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Lists conference providers under a specific AWS account.",
                "operationId": "ListConferenceProviders",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ConferenceProviders": {
                                            "description": "The conference providers.",
                                            "items": {
                                                "description": "An entity that provides a conferencing solution. Alexa for Business acts as the voice interface and mediator that connects users to their preferred conference provider. Examples of conference providers include Amazon Chime, Zoom, Cisco, and Polycom. ",
                                                "properties": {
                                                    "Arn": {
                                                        "description": "The ARN of the newly created conference provider.",
                                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                                        "type": "string"
                                                    },
                                                    "IPDialIn": {
                                                        "description": "The IP endpoint and protocol for calling.",
                                                        "properties": {
                                                            "CommsProtocol": {
                                                                "description": "The protocol, including SIP, SIPS, and H323.",
                                                                "enum": [
                                                                    "SIP",
                                                                    "SIPS",
                                                                    "H323"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "Endpoint": {
                                                                "description": "The IP address.",
                                                                "maxLength": 256,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "Endpoint",
                                                            "CommsProtocol"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "MeetingSetting": {
                                                        "description": "The meeting settings for the conference provider.",
                                                        "properties": {
                                                            "RequirePin": {
                                                                "description": "The values that indicate whether the pin is always required.",
                                                                "enum": [
                                                                    "YES",
                                                                    "NO",
                                                                    "OPTIONAL"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "RequirePin"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the conference provider.",
                                                        "maxLength": 50,
                                                        "minLength": 1,
                                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                                        "type": "string"
                                                    },
                                                    "PSTNDialIn": {
                                                        "description": "The information for PSTN conferencing.",
                                                        "properties": {
                                                            "CountryCode": {
                                                                "description": "The zip code.",
                                                                "pattern": "\\d{1,3}",
                                                                "type": "string"
                                                            },
                                                            "OneClickIdDelay": {
                                                                "description": "The delay duration before Alexa enters the conference ID with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.",
                                                                "maxLength": 2,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "OneClickPinDelay": {
                                                                "description": "The delay duration before Alexa enters the conference pin with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.",
                                                                "maxLength": 2,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "PhoneNumber": {
                                                                "description": "The phone number to call to join the conference.",
                                                                "pattern": "\\d{10}",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "CountryCode",
                                                            "PhoneNumber",
                                                            "OneClickIdDelay",
                                                            "OneClickPinDelay"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "Type": {
                                                        "description": "The type of conference providers.",
                                                        "enum": [
                                                            "CHIME",
                                                            "BLUEJEANS",
                                                            "FUZE",
                                                            "GOOGLE_HANGOUTS",
                                                            "POLYCOM",
                                                            "RINGCENTRAL",
                                                            "SKYPE_FOR_BUSINESS",
                                                            "WEBEX",
                                                            "ZOOM",
                                                            "CUSTOM"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "The tokens used for pagination.",
                                            "maxLength": 1000,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "MaxResults": {
                                        "description": "The maximum number of conference providers to be returned, per paginated calls.",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "The tokens used for pagination.",
                                        "maxLength": 1000,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListDeviceEvents": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Lists the device event history, including device connection status, for up to 30 days.",
                "operationId": "ListDeviceEvents",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeviceEvents": {
                                            "description": "The device events requested for the device ARN.",
                                            "items": {
                                                "description": "The list of device events.",
                                                "properties": {
                                                    "Timestamp": {
                                                        "description": "The time (in epoch) when the event occurred. ",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "description": "The type of device event.",
                                                        "enum": [
                                                            "CONNECTION_STATUS",
                                                            "DEVICE_STATUS"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "The value of the event.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "The token returned to indicate that there is more data available.",
                                            "maxLength": 1000,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "DeviceArn": {
                                        "description": "The ARN of a device.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    },
                                    "EventType": {
                                        "description": "The event type to filter device events. If EventType isn't specified, this returns a list of all device events in reverse chronological order. If EventType is specified, this returns a list of device events for that EventType in reverse chronological order. ",
                                        "enum": [
                                            "CONNECTION_STATUS",
                                            "DEVICE_STATUS"
                                        ],
                                        "type": "string"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of results to include in the response. The default value is 50. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved. ",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response only includes results beyond the token, up to the value specified by MaxResults. When the end of results is reached, the response has a value of null.",
                                        "maxLength": 1000,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "DeviceArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListSkills": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Lists all enabled skills in a specific skill group.",
                "operationId": "ListSkills",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "NextToken": {
                                            "description": "The token returned to indicate that there is more data available.",
                                            "maxLength": 1000,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "SkillSummaries": {
                                            "description": "The list of enabled skills requested. Required.",
                                            "items": {
                                                "description": "The summary of skills.",
                                                "properties": {
                                                    "EnablementType": {
                                                        "description": "Whether the skill is enabled under the user's account, or if it requires linking to be used.",
                                                        "enum": [
                                                            "ENABLED",
                                                            "PENDING"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "SkillId": {
                                                        "description": "The ARN of the skill summary.",
                                                        "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                                                        "type": "string"
                                                    },
                                                    "SkillName": {
                                                        "description": "The name of the skill.",
                                                        "maxLength": 100,
                                                        "minLength": 1,
                                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                                        "type": "string"
                                                    },
                                                    "SkillType": {
                                                        "description": "Whether the skill is publicly available or is a private skill.",
                                                        "enum": [
                                                            "PUBLIC",
                                                            "PRIVATE"
                                                        ],
                                                        "maxLength": 100,
                                                        "minLength": 1,
                                                        "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
                                                        "type": "string"
                                                    },
                                                    "SupportsLinking": {
                                                        "description": "Linking support for a skill.",
                                                        "type": "boolean"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "EnablementType": {
                                        "description": "Whether the skill is enabled under the user's account, or if it requires linking to be used.",
                                        "enum": [
                                            "ENABLED",
                                            "PENDING"
                                        ],
                                        "type": "string"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved. Required.",
                                        "maximum": 10,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>. Required.",
                                        "maxLength": 1000,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "SkillGroupArn": {
                                        "description": "The ARN of the skill group for which to list enabled skills. Required.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    },
                                    "SkillType": {
                                        "description": "Whether the skill is publicly available or is a private skill.",
                                        "enum": [
                                            "PUBLIC",
                                            "PRIVATE",
                                            "ALL"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListSkillsStoreCategories": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Lists all categories in the Alexa skill store.",
                "operationId": "ListSkillsStoreCategories",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "CategoryList": {
                                            "description": "The list of categories.",
                                            "items": {
                                                "description": "The skill store category that is shown. Alexa skills are assigned a specific skill category during creation, such as News, Social, and Sports.",
                                                "properties": {
                                                    "CategoryId": {
                                                        "description": "The ID of the skill store category.",
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "CategoryName": {
                                                        "description": "The name of the skill store category.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "The tokens used for pagination.",
                                            "maxLength": 1000,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "MaxResults": {
                                        "description": "The maximum number of categories returned, per paginated calls.",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "The tokens used for pagination.",
                                        "maxLength": 1000,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListSkillsStoreSkillsByCategory": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Lists all skills in the Alexa skill store by category.",
                "operationId": "ListSkillsStoreSkillsByCategory",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "NextToken": {
                                            "description": "The tokens used for pagination.",
                                            "maxLength": 1000,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "SkillsStoreSkills": {
                                            "description": "The skill store skills.",
                                            "items": {
                                                "description": "The detailed information about an Alexa skill.",
                                                "properties": {
                                                    "IconUrl": {
                                                        "description": "The URL where the skill icon resides.",
                                                        "type": "string"
                                                    },
                                                    "SampleUtterances": {
                                                        "description": "Sample utterances that interact with the skill.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ShortDescription": {
                                                        "description": "Short description about the skill.",
                                                        "type": "string"
                                                    },
                                                    "SkillDetails": {
                                                        "description": "Information about the skill.",
                                                        "properties": {
                                                            "BulletPoints": {
                                                                "description": "The details about what the skill supports organized as bullet points.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "DeveloperInfo": {
                                                                "description": "The details about the developer that published the skill.",
                                                                "properties": {
                                                                    "DeveloperName": {
                                                                        "description": "The name of the developer.",
                                                                        "type": "string"
                                                                    },
                                                                    "Email": {
                                                                        "description": "The email of the developer.",
                                                                        "maxLength": 128,
                                                                        "minLength": 1,
                                                                        "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                                                                        "type": "string"
                                                                    },
                                                                    "PrivacyPolicy": {
                                                                        "description": "The URL of the privacy policy.",
                                                                        "type": "string"
                                                                    },
                                                                    "Url": {
                                                                        "description": "The website of the developer.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "EndUserLicenseAgreement": {
                                                                "description": "The URL of the end user license agreement.",
                                                                "type": "string"
                                                            },
                                                            "GenericKeywords": {
                                                                "description": "The generic keywords associated with the skill that can be used to find a skill.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "InvocationPhrase": {
                                                                "description": "The phrase used to trigger the skill.",
                                                                "type": "string"
                                                            },
                                                            "NewInThisVersionBulletPoints": {
                                                                "description": "The updates added in bullet points.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "ProductDescription": {
                                                                "description": "The description of the product.",
                                                                "type": "string"
                                                            },
                                                            "ReleaseDate": {
                                                                "description": "The date when the skill was released.",
                                                                "type": "string"
                                                            },
                                                            "Reviews": {
                                                                "description": "The list of reviews for the skill, including Key and Value pair.",
                                                                "items": {
                                                                    "properties": {
                                                                        "key": {
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "SkillTypes": {
                                                                "description": "The types of skills.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "SkillId": {
                                                        "description": "The ARN of the skill.",
                                                        "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                                                        "type": "string"
                                                    },
                                                    "SkillName": {
                                                        "description": "The name of the skill.",
                                                        "maxLength": 100,
                                                        "minLength": 1,
                                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                                        "type": "string"
                                                    },
                                                    "SupportsLinking": {
                                                        "description": "Linking support for a skill.",
                                                        "type": "boolean"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "CategoryId": {
                                        "description": "The category ID for which the skills are being retrieved from the skill store.",
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of skills returned per paginated calls.",
                                        "maximum": 10,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "The tokens used for pagination.",
                                        "maxLength": 1000,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "CategoryId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListSmartHomeAppliances": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Lists all of the smart home appliances associated with a room.",
                "operationId": "ListSmartHomeAppliances",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "NextToken": {
                                            "description": "The tokens used for pagination.",
                                            "maxLength": 1000,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "SmartHomeAppliances": {
                                            "description": "The smart home appliances.",
                                            "items": {
                                                "description": "A smart home appliance that can connect to a central system. Any domestic device can be a smart appliance. ",
                                                "properties": {
                                                    "Description": {
                                                        "description": "The description of the smart home appliance.",
                                                        "type": "string"
                                                    },
                                                    "FriendlyName": {
                                                        "description": "The friendly name of the smart home appliance.",
                                                        "type": "string"
                                                    },
                                                    "ManufacturerName": {
                                                        "description": "The name of the manufacturer of the smart home appliance.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "MaxResults": {
                                        "description": "The maximum number of appliances to be returned, per paginated calls.",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "The tokens used for pagination.",
                                        "maxLength": 1000,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "RoomArn": {
                                        "description": "The room that the appliances are associated with.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "RoomArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListTags": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Lists all tags for the specified resource.",
                "operationId": "ListTags",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "NextToken": {
                                            "description": "The token returned to indicate that there is more data available.",
                                            "maxLength": 1000,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "Tags": {
                                            "description": "The tags requested for the specified resource.",
                                            "items": {
                                                "description": "A key-value pair that can be associated with a resource. ",
                                                "properties": {
                                                    "Key": {
                                                        "description": "The key of a tag. Tag keys are case-sensitive. ",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "The value of a tag. Tag values are case-sensitive and can be null.",
                                                        "maxLength": 256,
                                                        "minLength": 0,
                                                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Key",
                                                    "Value"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Arn": {
                                        "description": "The ARN of the specified resource for which to list tags.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>. ",
                                        "maxLength": 1000,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#PutConferencePreference": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Sets the conference preferences on a specific conference provider at the account level.",
                "operationId": "PutConferencePreference",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ConferencePreference": {
                                        "description": "The conference preference of a specific conference provider.",
                                        "properties": {
                                            "DefaultConferenceProviderArn": {
                                                "description": "The ARN of the default conference provider.",
                                                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "ConferencePreference"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#PutInvitationConfiguration": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Configures the email template for the user enrollment invitation with the specified attributes.",
                "operationId": "PutInvitationConfiguration",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ContactEmail": {
                                        "description": "The email ID of the organization or individual contact that the enrolled user can use. ",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                                        "type": "string"
                                    },
                                    "OrganizationName": {
                                        "description": "The name of the organization sending the enrollment invite to a user.",
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
                                        "type": "string"
                                    },
                                    "PrivateSkillIds": {
                                        "description": "The list of private skill IDs that you want to recommend to the user to enable in the invitation.",
                                        "items": {
                                            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                                            "type": "string"
                                        },
                                        "maxItems": 3,
                                        "minItems": 0,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "OrganizationName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#PutRoomSkillParameter": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Updates room skill parameter details by room, skill, and parameter key ID. Not all skills have a room skill parameter.",
                "operationId": "PutRoomSkillParameter",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "RoomArn": {
                                        "description": "The ARN of the room associated with the room skill parameter. Required.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    },
                                    "RoomSkillParameter": {
                                        "description": "The updated room skill parameter. Required.",
                                        "properties": {
                                            "ParameterKey": {
                                                "description": "The parameter key of a room skill parameter. ParameterKey is an enumerated type that only takes “DEFAULT” or “SCOPE” as valid values.",
                                                "maxLength": 256,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "ParameterValue": {
                                                "description": "The parameter value of a room skill parameter.",
                                                "maxLength": 512,
                                                "minLength": 1,
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "ParameterKey",
                                            "ParameterValue"
                                        ],
                                        "type": "object"
                                    },
                                    "SkillId": {
                                        "description": "The ARN of the skill associated with the room skill parameter. Required.",
                                        "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SkillId",
                                    "RoomSkillParameter"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#PutSkillAuthorization": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Links a user's account to a third-party skill provider. If this API operation is called by an assumed IAM role, the skill being linked must be a private skill. Also, the skill must be owned by the AWS account that assumed the IAM role.",
                "operationId": "PutSkillAuthorization",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "AuthorizationResult": {
                                        "description": "The authorization result specific to OAUTH code grant output. \"Code” must be populated in the AuthorizationResult map to establish the authorization.",
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "RoomArn": {
                                        "description": "The room that the skill is authorized for.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    },
                                    "SkillId": {
                                        "description": "The unique identifier of a skill.",
                                        "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "AuthorizationResult",
                                    "SkillId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#RegisterAVSDevice": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Registers an Alexa-enabled device built by an Original Equipment Manufacturer (OEM) using Alexa Voice Service (AVS).",
                "operationId": "RegisterAVSDevice",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DeviceArn": {
                                            "description": "The ARN of the device.",
                                            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidDeviceException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "AmazonId": {
                                        "description": "The device type ID for your AVS device generated by Amazon when the OEM creates a new product on Amazon's Developer Console.",
                                        "pattern": "[a-zA-Z0-9]{1,18}",
                                        "type": "string"
                                    },
                                    "ClientId": {
                                        "description": "The client ID of the OEM used for code-based linking authorization on an AVS device.",
                                        "pattern": "^\\S\\+\\{1,256\\}$",
                                        "type": "string"
                                    },
                                    "DeviceSerialNumber": {
                                        "description": "The key generated by the OEM that uniquely identifies a specified instance of your AVS device.",
                                        "pattern": "^[a-zA-Z0-9]{1,50}$",
                                        "type": "string"
                                    },
                                    "ProductId": {
                                        "description": "The product ID used to identify your AVS device during authorization.",
                                        "pattern": "^[a-zA-Z0-9_]{1,256}$",
                                        "type": "string"
                                    },
                                    "UserCode": {
                                        "description": "The code that is obtained after your AVS device has made a POST request to LWA as a part of the Device Authorization Request component of the OAuth code-based linking specification.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ClientId",
                                    "UserCode",
                                    "ProductId",
                                    "DeviceSerialNumber",
                                    "AmazonId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#RejectSkill": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Disassociates a skill from the organization under a user's AWS account. If the skill is a private skill, it moves to an AcceptStatus of PENDING. Any private or public skill that is rejected can be added later by calling the ApproveSkill API. ",
                "operationId": "RejectSkill",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "SkillId": {
                                        "description": "The unique identifier of the skill.",
                                        "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SkillId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ResolveRoom": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Determines the details for the room from which a skill request was invoked. This operation is used by skill developers.",
                "operationId": "ResolveRoom",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "RoomArn": {
                                            "description": "The ARN of the room from which the skill request was invoked.",
                                            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                            "type": "string"
                                        },
                                        "RoomName": {
                                            "description": "The name of the room from which the skill request was invoked.",
                                            "maxLength": 100,
                                            "minLength": 1,
                                            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                            "type": "string"
                                        },
                                        "RoomSkillParameters": {
                                            "description": "Response to get the room profile request. Required.",
                                            "items": {
                                                "description": "A skill parameter associated with a room.",
                                                "properties": {
                                                    "ParameterKey": {
                                                        "description": "The parameter key of a room skill parameter. ParameterKey is an enumerated type that only takes “DEFAULT” or “SCOPE” as valid values.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "ParameterValue": {
                                                        "description": "The parameter value of a room skill parameter.",
                                                        "maxLength": 512,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "ParameterKey",
                                                    "ParameterValue"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "SkillId": {
                                        "description": "The ARN of the skill that was requested. Required.",
                                        "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                                        "type": "string"
                                    },
                                    "UserId": {
                                        "description": "The ARN of the user. Required.",
                                        "pattern": "amzn1\\.[A-Za-z0-9+-\\/=.]{1,300}",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "UserId",
                                    "SkillId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#RevokeInvitation": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Revokes an invitation and invalidates the enrollment URL.",
                "operationId": "RevokeInvitation",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "EnrollmentId": {
                                        "description": "The ARN of the enrollment invitation to revoke. Required.",
                                        "maxLength": 128,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "UserArn": {
                                        "description": "The ARN of the user for whom to revoke an enrollment invitation. Required.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#SearchAddressBooks": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Searches address books and lists the ones that meet a set of filter and sort criteria.",
                "operationId": "SearchAddressBooks",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "AddressBooks": {
                                            "description": "The address books that meet the specified set of filter criteria, in sort order.",
                                            "items": {
                                                "description": "Information related to an address book.",
                                                "properties": {
                                                    "AddressBookArn": {
                                                        "description": "The ARN of the address book.",
                                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "description": "The description of the address book.",
                                                        "maxLength": 200,
                                                        "minLength": 1,
                                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the address book.",
                                                        "maxLength": 100,
                                                        "minLength": 1,
                                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "The token returned to indicate that there is more data available.",
                                            "maxLength": 1000,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "TotalCount": {
                                            "description": "The total number of address books returned.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Filters": {
                                        "description": "The filters to use to list a specified set of address books. The supported filter key is AddressBookName.",
                                        "items": {
                                            "description": "A filter name and value pair that is used to return a more specific list of results. Filters can be used to match a set of resources by various criteria.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The key of a filter.",
                                                    "maxLength": 500,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The values of a filter.",
                                                    "items": {
                                                        "maxLength": 500,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "maxItems": 5,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Key",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 25,
                                        "type": "array"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of results to include in the response. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response only includes results beyond the token, up to the value specified by MaxResults.",
                                        "maxLength": 1000,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "SortCriteria": {
                                        "description": "The sort order to use in listing the specified set of address books. The supported sort key is AddressBookName.",
                                        "items": {
                                            "description": "An object representing a sort criteria. ",
                                            "properties": {
                                                "Key": {
                                                    "description": "The sort key of a sort object.",
                                                    "maxLength": 500,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The sort value of a sort object.",
                                                    "enum": [
                                                        "ASC",
                                                        "DESC"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Key",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 25,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#SearchContacts": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Searches contacts and lists the ones that meet a set of filter and sort criteria.",
                "operationId": "SearchContacts",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Contacts": {
                                            "description": "The contacts that meet the specified set of filter criteria, in sort order.",
                                            "items": {
                                                "description": "Information related to a contact.",
                                                "properties": {
                                                    "ContactArn": {
                                                        "description": "The ARN of the contact.",
                                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                                        "type": "string"
                                                    },
                                                    "DisplayName": {
                                                        "description": "The name of the contact to display on the console.",
                                                        "maxLength": 100,
                                                        "minLength": 1,
                                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                                        "type": "string"
                                                    },
                                                    "FirstName": {
                                                        "description": "The first name of the contact, used to call the contact on the device.",
                                                        "maxLength": 100,
                                                        "minLength": 1,
                                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                                        "type": "string"
                                                    },
                                                    "LastName": {
                                                        "description": "The last name of the contact, used to call the contact on the device.",
                                                        "maxLength": 100,
                                                        "minLength": 1,
                                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                                        "type": "string"
                                                    },
                                                    "PhoneNumber": {
                                                        "description": "The phone number of the contact.",
                                                        "format": "password",
                                                        "pattern": "^\\+\\d{8,}$",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "The token returned to indicate that there is more data available.",
                                            "maxLength": 1000,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "TotalCount": {
                                            "description": "The total number of contacts returned.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Filters": {
                                        "description": "The filters to use to list a specified set of address books. The supported filter keys are DisplayName, FirstName, LastName, and AddressBookArns.",
                                        "items": {
                                            "description": "A filter name and value pair that is used to return a more specific list of results. Filters can be used to match a set of resources by various criteria.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The key of a filter.",
                                                    "maxLength": 500,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The values of a filter.",
                                                    "items": {
                                                        "maxLength": 500,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "maxItems": 5,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Key",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 25,
                                        "type": "array"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of results to include in the response. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response only includes results beyond the token, up to the value specified by MaxResults.",
                                        "maxLength": 1000,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "SortCriteria": {
                                        "description": "The sort order to use in listing the specified set of contacts. The supported sort keys are DisplayName, FirstName, and LastName.",
                                        "items": {
                                            "description": "An object representing a sort criteria. ",
                                            "properties": {
                                                "Key": {
                                                    "description": "The sort key of a sort object.",
                                                    "maxLength": 500,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The sort value of a sort object.",
                                                    "enum": [
                                                        "ASC",
                                                        "DESC"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Key",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 25,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#SearchDevices": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Searches devices and lists the ones that meet a set of filter criteria.",
                "operationId": "SearchDevices",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Devices": {
                                            "description": "The devices that meet the specified set of filter criteria, in sort order.",
                                            "items": {
                                                "description": "Device attributes.",
                                                "properties": {
                                                    "DeviceArn": {
                                                        "description": "The ARN of a device.",
                                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                                        "type": "string"
                                                    },
                                                    "DeviceName": {
                                                        "description": "The name of a device.",
                                                        "maxLength": 100,
                                                        "minLength": 2,
                                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                                        "type": "string"
                                                    },
                                                    "DeviceSerialNumber": {
                                                        "description": "The serial number of a device.",
                                                        "pattern": "[a-zA-Z0-9]{1,200}",
                                                        "type": "string"
                                                    },
                                                    "DeviceStatus": {
                                                        "description": "The status of a device.",
                                                        "enum": [
                                                            "READY",
                                                            "PENDING",
                                                            "WAS_OFFLINE",
                                                            "DEREGISTERED"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "DeviceStatusInfo": {
                                                        "description": "Detailed information about a device's status.",
                                                        "properties": {
                                                            "ConnectionStatus": {
                                                                "description": "The latest available information about the connection status of a device. ",
                                                                "enum": [
                                                                    "ONLINE",
                                                                    "OFFLINE"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "DeviceStatusDetails": {
                                                                "description": "One or more device status detail descriptions.",
                                                                "items": {
                                                                    "description": "Details of a device’s status.",
                                                                    "properties": {
                                                                        "Code": {
                                                                            "description": "The device status detail code.",
                                                                            "enum": [
                                                                                "DEVICE_SOFTWARE_UPDATE_NEEDED",
                                                                                "DEVICE_WAS_OFFLINE"
                                                                            ],
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "DeviceType": {
                                                        "description": "The type of a device.",
                                                        "pattern": "[a-zA-Z0-9]{1,200}",
                                                        "type": "string"
                                                    },
                                                    "MacAddress": {
                                                        "description": "The MAC address of a device.",
                                                        "type": "string"
                                                    },
                                                    "RoomArn": {
                                                        "description": "The room ARN associated with a device.",
                                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                                        "type": "string"
                                                    },
                                                    "RoomName": {
                                                        "description": "The name of the room associated with a device.",
                                                        "maxLength": 100,
                                                        "minLength": 1,
                                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                                        "type": "string"
                                                    },
                                                    "SoftwareVersion": {
                                                        "description": "The software version of a device.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "The token returned to indicate that there is more data available.",
                                            "maxLength": 1000,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "TotalCount": {
                                            "description": "The total number of devices returned.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Filters": {
                                        "description": "The filters to use to list a specified set of devices. Supported filter keys are DeviceName, DeviceStatus, DeviceStatusDetailCode, RoomName, DeviceType, DeviceSerialNumber, UnassociatedOnly, and ConnectionStatus (ONLINE and OFFLINE).",
                                        "items": {
                                            "description": "A filter name and value pair that is used to return a more specific list of results. Filters can be used to match a set of resources by various criteria.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The key of a filter.",
                                                    "maxLength": 500,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The values of a filter.",
                                                    "items": {
                                                        "maxLength": 500,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "maxItems": 5,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Key",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 25,
                                        "type": "array"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>.",
                                        "maxLength": 1000,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "SortCriteria": {
                                        "description": "The sort order to use in listing the specified set of devices. Supported sort keys are DeviceName, DeviceStatus, RoomName, DeviceType, DeviceSerialNumber, and ConnectionStatus.",
                                        "items": {
                                            "description": "An object representing a sort criteria. ",
                                            "properties": {
                                                "Key": {
                                                    "description": "The sort key of a sort object.",
                                                    "maxLength": 500,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The sort value of a sort object.",
                                                    "enum": [
                                                        "ASC",
                                                        "DESC"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Key",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 25,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#SearchProfiles": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Searches room profiles and lists the ones that meet a set of filter criteria.",
                "operationId": "SearchProfiles",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "NextToken": {
                                            "description": "The token returned to indicate that there is more data available.",
                                            "maxLength": 1000,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "Profiles": {
                                            "description": "The profiles that meet the specified set of filter criteria, in sort order.",
                                            "items": {
                                                "description": "The data of a room profile.",
                                                "properties": {
                                                    "Address": {
                                                        "description": "The address of a room profile.",
                                                        "maxLength": 500,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "DistanceUnit": {
                                                        "description": "The distance unit of a room profile.",
                                                        "enum": [
                                                            "METRIC",
                                                            "IMPERIAL"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "IsDefault": {
                                                        "description": "Retrieves if the profile data is default or not.",
                                                        "type": "boolean"
                                                    },
                                                    "ProfileArn": {
                                                        "description": "The ARN of a room profile.",
                                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                                        "type": "string"
                                                    },
                                                    "ProfileName": {
                                                        "description": "The name of a room profile.",
                                                        "maxLength": 100,
                                                        "minLength": 1,
                                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                                        "type": "string"
                                                    },
                                                    "TemperatureUnit": {
                                                        "description": "The temperature unit of a room profile.",
                                                        "enum": [
                                                            "FAHRENHEIT",
                                                            "CELSIUS"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Timezone": {
                                                        "description": "The timezone of a room profile.",
                                                        "maxLength": 100,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "WakeWord": {
                                                        "description": "The wake word of a room profile.",
                                                        "enum": [
                                                            "ALEXA",
                                                            "AMAZON",
                                                            "ECHO",
                                                            "COMPUTER"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "TotalCount": {
                                            "description": "The total number of room profiles returned.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Filters": {
                                        "description": "The filters to use to list a specified set of room profiles. Supported filter keys are ProfileName and Address. Required. ",
                                        "items": {
                                            "description": "A filter name and value pair that is used to return a more specific list of results. Filters can be used to match a set of resources by various criteria.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The key of a filter.",
                                                    "maxLength": 500,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The values of a filter.",
                                                    "items": {
                                                        "maxLength": 500,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "maxItems": 5,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Key",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 25,
                                        "type": "array"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>.",
                                        "maxLength": 1000,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "SortCriteria": {
                                        "description": "The sort order to use in listing the specified set of room profiles. Supported sort keys are ProfileName and Address.",
                                        "items": {
                                            "description": "An object representing a sort criteria. ",
                                            "properties": {
                                                "Key": {
                                                    "description": "The sort key of a sort object.",
                                                    "maxLength": 500,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The sort value of a sort object.",
                                                    "enum": [
                                                        "ASC",
                                                        "DESC"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Key",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 25,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#SearchRooms": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Searches rooms and lists the ones that meet a set of filter and sort criteria.",
                "operationId": "SearchRooms",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "NextToken": {
                                            "description": "The token returned to indicate that there is more data available.",
                                            "maxLength": 1000,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "Rooms": {
                                            "description": "The rooms that meet the specified set of filter criteria, in sort order.",
                                            "items": {
                                                "description": "The data of a room.",
                                                "properties": {
                                                    "Description": {
                                                        "description": "The description of a room.",
                                                        "maxLength": 200,
                                                        "minLength": 1,
                                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                                        "type": "string"
                                                    },
                                                    "ProfileArn": {
                                                        "description": "The profile ARN of a room.",
                                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                                        "type": "string"
                                                    },
                                                    "ProfileName": {
                                                        "description": "The profile name of a room.",
                                                        "maxLength": 100,
                                                        "minLength": 1,
                                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                                        "type": "string"
                                                    },
                                                    "ProviderCalendarId": {
                                                        "description": "The provider calendar ARN of a room.",
                                                        "maxLength": 100,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "RoomArn": {
                                                        "description": "The ARN of a room.",
                                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                                        "type": "string"
                                                    },
                                                    "RoomName": {
                                                        "description": "The name of a room.",
                                                        "maxLength": 100,
                                                        "minLength": 1,
                                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "TotalCount": {
                                            "description": "The total number of rooms returned.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Filters": {
                                        "description": "The filters to use to list a specified set of rooms. The supported filter keys are RoomName and ProfileName.",
                                        "items": {
                                            "description": "A filter name and value pair that is used to return a more specific list of results. Filters can be used to match a set of resources by various criteria.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The key of a filter.",
                                                    "maxLength": 500,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The values of a filter.",
                                                    "items": {
                                                        "maxLength": 500,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "maxItems": 5,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Key",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 25,
                                        "type": "array"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved. ",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>.",
                                        "maxLength": 1000,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "SortCriteria": {
                                        "description": "The sort order to use in listing the specified set of rooms. The supported sort keys are RoomName and ProfileName.",
                                        "items": {
                                            "description": "An object representing a sort criteria. ",
                                            "properties": {
                                                "Key": {
                                                    "description": "The sort key of a sort object.",
                                                    "maxLength": 500,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The sort value of a sort object.",
                                                    "enum": [
                                                        "ASC",
                                                        "DESC"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Key",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 25,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#SearchSkillGroups": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Searches skill groups and lists the ones that meet a set of filter and sort criteria.",
                "operationId": "SearchSkillGroups",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "NextToken": {
                                            "description": "The token returned to indicate that there is more data available.",
                                            "maxLength": 1000,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "SkillGroups": {
                                            "description": "The skill groups that meet the filter criteria, in sort order.",
                                            "items": {
                                                "description": "The attributes of a skill group.",
                                                "properties": {
                                                    "Description": {
                                                        "description": "The description of a skill group.",
                                                        "maxLength": 200,
                                                        "minLength": 1,
                                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                                        "type": "string"
                                                    },
                                                    "SkillGroupArn": {
                                                        "description": "The skill group ARN of a skill group.",
                                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                                        "type": "string"
                                                    },
                                                    "SkillGroupName": {
                                                        "description": "The skill group name of a skill group.",
                                                        "maxLength": 100,
                                                        "minLength": 1,
                                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "TotalCount": {
                                            "description": "The total number of skill groups returned.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Filters": {
                                        "description": "The filters to use to list a specified set of skill groups. The supported filter key is SkillGroupName. ",
                                        "items": {
                                            "description": "A filter name and value pair that is used to return a more specific list of results. Filters can be used to match a set of resources by various criteria.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The key of a filter.",
                                                    "maxLength": 500,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The values of a filter.",
                                                    "items": {
                                                        "maxLength": 500,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "maxItems": 5,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Key",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 25,
                                        "type": "array"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved. ",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>. Required.",
                                        "maxLength": 1000,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "SortCriteria": {
                                        "description": "The sort order to use in listing the specified set of skill groups. The supported sort key is SkillGroupName. ",
                                        "items": {
                                            "description": "An object representing a sort criteria. ",
                                            "properties": {
                                                "Key": {
                                                    "description": "The sort key of a sort object.",
                                                    "maxLength": 500,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The sort value of a sort object.",
                                                    "enum": [
                                                        "ASC",
                                                        "DESC"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Key",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 25,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#SearchUsers": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Searches users and lists the ones that meet a set of filter and sort criteria.",
                "operationId": "SearchUsers",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "NextToken": {
                                            "description": "The token returned to indicate that there is more data available.",
                                            "maxLength": 1000,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "TotalCount": {
                                            "description": "The total number of users returned.",
                                            "type": "integer"
                                        },
                                        "Users": {
                                            "description": "The users that meet the specified set of filter criteria, in sort order.",
                                            "items": {
                                                "description": "Information related to a user.",
                                                "properties": {
                                                    "Email": {
                                                        "description": "The email of a user.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                                                        "type": "string"
                                                    },
                                                    "EnrollmentId": {
                                                        "description": "The enrollment ARN of a user.",
                                                        "maxLength": 128,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "EnrollmentStatus": {
                                                        "description": "The enrollment status of a user.",
                                                        "enum": [
                                                            "INITIALIZED",
                                                            "PENDING",
                                                            "REGISTERED",
                                                            "DISASSOCIATING",
                                                            "DEREGISTERING"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "FirstName": {
                                                        "description": "The first name of a user.",
                                                        "maxLength": 30,
                                                        "minLength": 0,
                                                        "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
                                                        "type": "string"
                                                    },
                                                    "LastName": {
                                                        "description": "The last name of a user.",
                                                        "maxLength": 30,
                                                        "minLength": 0,
                                                        "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
                                                        "type": "string"
                                                    },
                                                    "UserArn": {
                                                        "description": "The ARN of a user.",
                                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Filters": {
                                        "description": "The filters to use for listing a specific set of users. Required. Supported filter keys are UserId, FirstName, LastName, Email, and EnrollmentStatus.",
                                        "items": {
                                            "description": "A filter name and value pair that is used to return a more specific list of results. Filters can be used to match a set of resources by various criteria.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The key of a filter.",
                                                    "maxLength": 500,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "The values of a filter.",
                                                    "items": {
                                                        "maxLength": 500,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "maxItems": 5,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Key",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 25,
                                        "type": "array"
                                    },
                                    "MaxResults": {
                                        "description": "The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved. Required.",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>. Required.",
                                        "maxLength": 1000,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "SortCriteria": {
                                        "description": "The sort order to use in listing the filtered set of users. Required. Supported sort keys are UserId, FirstName, LastName, Email, and EnrollmentStatus.",
                                        "items": {
                                            "description": "An object representing a sort criteria. ",
                                            "properties": {
                                                "Key": {
                                                    "description": "The sort key of a sort object.",
                                                    "maxLength": 500,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The sort value of a sort object.",
                                                    "enum": [
                                                        "ASC",
                                                        "DESC"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Key",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 25,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#SendInvitation": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Sends an enrollment invitation email with a URL to a user. The URL is valid for 72 hours or until you call this operation again, whichever comes first. ",
                "operationId": "SendInvitation",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidUserStatusException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "UserArn": {
                                        "description": "The ARN of the user to whom to send an invitation. Required.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#StartDeviceSync": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Resets a device and its account to the known default settings, by clearing all information and settings set by previous users.",
                "operationId": "StartDeviceSync",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DeviceNotRegisteredException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "DeviceArn": {
                                        "description": "The ARN of the device to sync. Required.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    },
                                    "Features": {
                                        "description": "Request structure to start the device sync. Required.",
                                        "items": {
                                            "enum": [
                                                "BLUETOOTH",
                                                "VOLUME",
                                                "NOTIFICATIONS",
                                                "LISTS",
                                                "SKILLS",
                                                "ALL"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "RoomArn": {
                                        "description": "The ARN of the room with which the device to sync is associated. Required.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Features"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#StartSmartHomeApplianceDiscovery": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Initiates the discovery of any smart home appliances associated with the room.",
                "operationId": "StartSmartHomeApplianceDiscovery",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "RoomArn": {
                                        "description": "The room where smart home appliance discovery was initiated.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "RoomArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#TagResource": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Adds metadata tags to a specified resource.",
                "operationId": "TagResource",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Arn": {
                                        "description": "The ARN of the resource to which to add metadata tags. Required. ",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    },
                                    "Tags": {
                                        "description": "The tags to be added to the specified resource. Do not provide system tags. Required. ",
                                        "items": {
                                            "description": "A key-value pair that can be associated with a resource. ",
                                            "properties": {
                                                "Key": {
                                                    "description": "The key of a tag. Tag keys are case-sensitive. ",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value of a tag. Tag values are case-sensitive and can be null.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Key",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Arn",
                                    "Tags"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#UntagResource": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Removes metadata tags from a specified resource.",
                "operationId": "UntagResource",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Arn": {
                                        "description": "The ARN of the resource from which to remove metadata tags. Required. ",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    },
                                    "TagKeys": {
                                        "description": "The tags to be removed from the specified resource. Do not provide system tags. Required. ",
                                        "items": {
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Arn",
                                    "TagKeys"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#UpdateAddressBook": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Updates address book details by the address book ARN.",
                "operationId": "UpdateAddressBook",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NameInUseException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "AddressBookArn": {
                                        "description": "The ARN of the room to update.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "The updated description of the room.",
                                        "maxLength": 200,
                                        "minLength": 1,
                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The updated name of the room.",
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "AddressBookArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#UpdateBusinessReportSchedule": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Updates the configuration of the report delivery schedule with the specified schedule ARN.",
                "operationId": "UpdateBusinessReportSchedule",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Format": {
                                        "description": "The format of the generated report (individual CSV files or zipped files of individual files).",
                                        "enum": [
                                            "CSV",
                                            "CSV_ZIP"
                                        ],
                                        "type": "string"
                                    },
                                    "Recurrence": {
                                        "description": "The recurrence of the reports.",
                                        "properties": {
                                            "StartDate": {
                                                "description": "The start date.",
                                                "pattern": "^\\d{4}\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01])$",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "S3BucketName": {
                                        "description": "The S3 location of the output reports.",
                                        "pattern": "[a-z0-9-\\.]{3,63}",
                                        "type": "string"
                                    },
                                    "S3KeyPrefix": {
                                        "description": "The S3 key where the report is delivered.",
                                        "maxLength": 100,
                                        "minLength": 0,
                                        "pattern": "[A-Za-z0-9!_\\-\\.\\*'()/]*",
                                        "type": "string"
                                    },
                                    "ScheduleArn": {
                                        "description": "The ARN of the business report schedule.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    },
                                    "ScheduleName": {
                                        "description": "The name identifier of the schedule.",
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ScheduleArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#UpdateConferenceProvider": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Updates an existing conference provider's settings.",
                "operationId": "UpdateConferenceProvider",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ConferenceProviderArn": {
                                        "description": "The ARN of the conference provider.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    },
                                    "ConferenceProviderType": {
                                        "description": "The type of the conference provider.",
                                        "enum": [
                                            "CHIME",
                                            "BLUEJEANS",
                                            "FUZE",
                                            "GOOGLE_HANGOUTS",
                                            "POLYCOM",
                                            "RINGCENTRAL",
                                            "SKYPE_FOR_BUSINESS",
                                            "WEBEX",
                                            "ZOOM",
                                            "CUSTOM"
                                        ],
                                        "type": "string"
                                    },
                                    "IPDialIn": {
                                        "description": "The IP endpoint and protocol for calling.",
                                        "properties": {
                                            "CommsProtocol": {
                                                "description": "The protocol, including SIP, SIPS, and H323.",
                                                "enum": [
                                                    "SIP",
                                                    "SIPS",
                                                    "H323"
                                                ],
                                                "type": "string"
                                            },
                                            "Endpoint": {
                                                "description": "The IP address.",
                                                "maxLength": 256,
                                                "minLength": 1,
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "Endpoint",
                                            "CommsProtocol"
                                        ],
                                        "type": "object"
                                    },
                                    "MeetingSetting": {
                                        "description": "The meeting settings for the conference provider.",
                                        "properties": {
                                            "RequirePin": {
                                                "description": "The values that indicate whether the pin is always required.",
                                                "enum": [
                                                    "YES",
                                                    "NO",
                                                    "OPTIONAL"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "RequirePin"
                                        ],
                                        "type": "object"
                                    },
                                    "PSTNDialIn": {
                                        "description": "The information for PSTN conferencing.",
                                        "properties": {
                                            "CountryCode": {
                                                "description": "The zip code.",
                                                "pattern": "\\d{1,3}",
                                                "type": "string"
                                            },
                                            "OneClickIdDelay": {
                                                "description": "The delay duration before Alexa enters the conference ID with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.",
                                                "maxLength": 2,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "OneClickPinDelay": {
                                                "description": "The delay duration before Alexa enters the conference pin with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.",
                                                "maxLength": 2,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "PhoneNumber": {
                                                "description": "The phone number to call to join the conference.",
                                                "pattern": "\\d{10}",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "CountryCode",
                                            "PhoneNumber",
                                            "OneClickIdDelay",
                                            "OneClickPinDelay"
                                        ],
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "ConferenceProviderArn",
                                    "ConferenceProviderType",
                                    "MeetingSetting"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#UpdateContact": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Updates the contact details by the contact ARN.",
                "operationId": "UpdateContact",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ContactArn": {
                                        "description": "The ARN of the contact to update.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    },
                                    "DisplayName": {
                                        "description": "The updated display name of the contact.",
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                        "type": "string"
                                    },
                                    "FirstName": {
                                        "description": "The updated first name of the contact.",
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                        "type": "string"
                                    },
                                    "LastName": {
                                        "description": "The updated last name of the contact.",
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                        "type": "string"
                                    },
                                    "PhoneNumber": {
                                        "description": "The updated phone number of the contact.",
                                        "format": "password",
                                        "pattern": "^\\+\\d{8,}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ContactArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#UpdateDevice": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Updates the device name by device ARN.",
                "operationId": "UpdateDevice",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "DeviceNotRegisteredException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "DeviceArn": {
                                        "description": "The ARN of the device to update. Required.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    },
                                    "DeviceName": {
                                        "description": "The updated device name. Required.",
                                        "maxLength": 100,
                                        "minLength": 2,
                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#UpdateProfile": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Updates an existing room profile by room profile ARN.",
                "operationId": "UpdateProfile",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NameInUseException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Address": {
                                        "description": "The updated address for the room profile.",
                                        "maxLength": 500,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "DistanceUnit": {
                                        "description": "The updated distance unit for the room profile.",
                                        "enum": [
                                            "METRIC",
                                            "IMPERIAL"
                                        ],
                                        "type": "string"
                                    },
                                    "IsDefault": {
                                        "description": "Sets the profile as default if selected. If this is missing, no update is done to the default status.",
                                        "type": "boolean"
                                    },
                                    "MaxVolumeLimit": {
                                        "description": "The updated maximum volume limit for the room profile.",
                                        "type": "integer"
                                    },
                                    "PSTNEnabled": {
                                        "description": "Whether the PSTN setting of the room profile is enabled.",
                                        "type": "boolean"
                                    },
                                    "ProfileArn": {
                                        "description": "The ARN of the room profile to update. Required.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    },
                                    "ProfileName": {
                                        "description": "The updated name for the room profile.",
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                        "type": "string"
                                    },
                                    "SetupModeDisabled": {
                                        "description": "Whether the setup mode of the profile is enabled.",
                                        "type": "boolean"
                                    },
                                    "TemperatureUnit": {
                                        "description": "The updated temperature unit for the room profile.",
                                        "enum": [
                                            "FAHRENHEIT",
                                            "CELSIUS"
                                        ],
                                        "type": "string"
                                    },
                                    "Timezone": {
                                        "description": "The updated timezone for the room profile.",
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "WakeWord": {
                                        "description": "The updated wake word for the room profile.",
                                        "enum": [
                                            "ALEXA",
                                            "AMAZON",
                                            "ECHO",
                                            "COMPUTER"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#UpdateRoom": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Updates room details by room ARN.",
                "operationId": "UpdateRoom",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NameInUseException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Description": {
                                        "description": "The updated description for the room.",
                                        "maxLength": 200,
                                        "minLength": 1,
                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                        "type": "string"
                                    },
                                    "ProfileArn": {
                                        "description": "The updated profile ARN for the room.",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    },
                                    "ProviderCalendarId": {
                                        "description": "The updated provider calendar ARN for the room.",
                                        "maxLength": 100,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "RoomArn": {
                                        "description": "The ARN of the room to update. ",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    },
                                    "RoomName": {
                                        "description": "The updated name for the room.",
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#UpdateSkillGroup": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Updates skill group details by skill group ARN.",
                "operationId": "UpdateSkillGroup",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NameInUseException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ConcurrentModificationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Description": {
                                        "description": "The updated description for the skill group.",
                                        "maxLength": 200,
                                        "minLength": 1,
                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                        "type": "string"
                                    },
                                    "SkillGroupArn": {
                                        "description": "The ARN of the skill group to update. ",
                                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                        "type": "string"
                                    },
                                    "SkillGroupName": {
                                        "description": "The updated name for the skill group.",
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Address": {
                "maxLength": 500,
                "minLength": 1,
                "type": "string"
            },
            "AddressBook": {
                "description": "An address book with attributes.",
                "properties": {
                    "AddressBookArn": {
                        "description": "The ARN of the address book.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "Description": {
                        "description": "The description of the address book.",
                        "maxLength": 200,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the address book.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AddressBookData": {
                "description": "Information related to an address book.",
                "properties": {
                    "AddressBookArn": {
                        "description": "The ARN of the address book.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "Description": {
                        "description": "The description of the address book.",
                        "maxLength": 200,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the address book.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AddressBookDataList": {
                "items": {
                    "description": "Information related to an address book.",
                    "properties": {
                        "AddressBookArn": {
                            "description": "The ARN of the address book.",
                            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                            "type": "string"
                        },
                        "Description": {
                            "description": "The description of the address book.",
                            "maxLength": 200,
                            "minLength": 1,
                            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                            "type": "string"
                        },
                        "Name": {
                            "description": "The name of the address book.",
                            "maxLength": 100,
                            "minLength": 1,
                            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "AddressBookDescription": {
                "maxLength": 200,
                "minLength": 1,
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                "type": "string"
            },
            "AddressBookName": {
                "maxLength": 100,
                "minLength": 1,
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                "type": "string"
            },
            "AlreadyExistsException": {},
            "AmazonId": {
                "pattern": "[a-zA-Z0-9]{1,18}",
                "type": "string"
            },
            "ApplianceDescription": {
                "type": "string"
            },
            "ApplianceFriendlyName": {
                "type": "string"
            },
            "ApplianceManufacturerName": {
                "type": "string"
            },
            "ApproveSkillRequest": {
                "properties": {
                    "SkillId": {
                        "description": "The unique identifier of the skill.",
                        "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                        "type": "string"
                    }
                },
                "required": [
                    "SkillId"
                ],
                "type": "object"
            },
            "ApproveSkillResponse": {
                "properties": {},
                "type": "object"
            },
            "Arn": {
                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                "type": "string"
            },
            "AssociateContactWithAddressBookRequest": {
                "properties": {
                    "AddressBookArn": {
                        "description": "The ARN of the address book with which to associate the contact.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "ContactArn": {
                        "description": "The ARN of the contact to associate with an address book.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "required": [
                    "ContactArn",
                    "AddressBookArn"
                ],
                "type": "object"
            },
            "AssociateContactWithAddressBookResponse": {
                "properties": {},
                "type": "object"
            },
            "AssociateDeviceWithRoomRequest": {
                "properties": {
                    "DeviceArn": {
                        "description": "The ARN of the device to associate to a room. Required.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "RoomArn": {
                        "description": "The ARN of the room with which to associate the device. Required.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AssociateDeviceWithRoomResponse": {
                "properties": {},
                "type": "object"
            },
            "AssociateSkillGroupWithRoomRequest": {
                "properties": {
                    "RoomArn": {
                        "description": "The ARN of the room with which to associate the skill group. Required.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "SkillGroupArn": {
                        "description": "The ARN of the skill group to associate with a room. Required.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AssociateSkillGroupWithRoomResponse": {
                "properties": {},
                "type": "object"
            },
            "AssociateSkillWithSkillGroupRequest": {
                "properties": {
                    "SkillGroupArn": {
                        "description": "The ARN of the skill group to associate the skill to. Required.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "SkillId": {
                        "description": "The unique identifier of the skill.",
                        "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                        "type": "string"
                    }
                },
                "required": [
                    "SkillId"
                ],
                "type": "object"
            },
            "AssociateSkillWithSkillGroupResponse": {
                "properties": {},
                "type": "object"
            },
            "AssociateSkillWithUsersRequest": {
                "properties": {
                    "SkillId": {
                        "description": "The private skill ID you want to make available to enrolled users.",
                        "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                        "type": "string"
                    }
                },
                "required": [
                    "SkillId"
                ],
                "type": "object"
            },
            "AssociateSkillWithUsersResponse": {
                "properties": {},
                "type": "object"
            },
            "AuthorizationResult": {
                "items": {
                    "properties": {
                        "key": {
                            "minLength": 1,
                            "type": "string"
                        },
                        "value": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "Boolean": {
                "type": "boolean"
            },
            "BulletPoint": {
                "type": "string"
            },
            "BulletPoints": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "BusinessReport": {
                "description": "Usage report with specified parameters.",
                "properties": {
                    "DeliveryTime": {
                        "description": "The time of report delivery.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "DownloadUrl": {
                        "description": "The download link where a user can download the report.",
                        "type": "string"
                    },
                    "FailureCode": {
                        "description": "The failure code.",
                        "enum": [
                            "ACCESS_DENIED",
                            "NO_SUCH_BUCKET",
                            "INTERNAL_FAILURE"
                        ],
                        "type": "string"
                    },
                    "S3Location": {
                        "description": "The S3 location of the output reports.",
                        "properties": {
                            "BucketName": {
                                "description": "The S3 bucket name of the output reports.",
                                "pattern": "[a-z0-9-\\.]{3,63}",
                                "type": "string"
                            },
                            "Path": {
                                "description": "The path of the business report.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "Status": {
                        "description": "The status of the report generation execution (RUNNING, SUCCEEDED, or FAILED).",
                        "enum": [
                            "RUNNING",
                            "SUCCEEDED",
                            "FAILED"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BusinessReportContentRange": {
                "description": "The content range of the report.",
                "properties": {
                    "Interval": {
                        "description": "The interval of the content range.",
                        "enum": [
                            "ONE_DAY",
                            "ONE_WEEK"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BusinessReportDownloadUrl": {
                "type": "string"
            },
            "BusinessReportFailureCode": {
                "enum": [
                    "ACCESS_DENIED",
                    "NO_SUCH_BUCKET",
                    "INTERNAL_FAILURE"
                ],
                "type": "string"
            },
            "BusinessReportFormat": {
                "enum": [
                    "CSV",
                    "CSV_ZIP"
                ],
                "type": "string"
            },
            "BusinessReportInterval": {
                "enum": [
                    "ONE_DAY",
                    "ONE_WEEK"
                ],
                "type": "string"
            },
            "BusinessReportRecurrence": {
                "description": "The recurrence of the reports.",
                "properties": {
                    "StartDate": {
                        "description": "The start date.",
                        "pattern": "^\\d{4}\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01])$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BusinessReportS3Location": {
                "description": "The S3 location of the output reports.",
                "properties": {
                    "BucketName": {
                        "description": "The S3 bucket name of the output reports.",
                        "pattern": "[a-z0-9-\\.]{3,63}",
                        "type": "string"
                    },
                    "Path": {
                        "description": "The path of the business report.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BusinessReportS3Path": {
                "type": "string"
            },
            "BusinessReportSchedule": {
                "description": "The schedule of the usage report.",
                "properties": {
                    "ContentRange": {
                        "description": "The content range of the reports.",
                        "properties": {
                            "Interval": {
                                "description": "The interval of the content range.",
                                "enum": [
                                    "ONE_DAY",
                                    "ONE_WEEK"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "Format": {
                        "description": "The format of the generated report (individual CSV files or zipped files of individual files).",
                        "enum": [
                            "CSV",
                            "CSV_ZIP"
                        ],
                        "type": "string"
                    },
                    "LastBusinessReport": {
                        "description": "The details of the last business report delivery for a specified time interval.",
                        "properties": {
                            "DeliveryTime": {
                                "description": "The time of report delivery.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "DownloadUrl": {
                                "description": "The download link where a user can download the report.",
                                "type": "string"
                            },
                            "FailureCode": {
                                "description": "The failure code.",
                                "enum": [
                                    "ACCESS_DENIED",
                                    "NO_SUCH_BUCKET",
                                    "INTERNAL_FAILURE"
                                ],
                                "type": "string"
                            },
                            "S3Location": {
                                "description": "The S3 location of the output reports.",
                                "properties": {
                                    "BucketName": {
                                        "description": "The S3 bucket name of the output reports.",
                                        "pattern": "[a-z0-9-\\.]{3,63}",
                                        "type": "string"
                                    },
                                    "Path": {
                                        "description": "The path of the business report.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "Status": {
                                "description": "The status of the report generation execution (RUNNING, SUCCEEDED, or FAILED).",
                                "enum": [
                                    "RUNNING",
                                    "SUCCEEDED",
                                    "FAILED"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "Recurrence": {
                        "description": "The recurrence of the reports.",
                        "properties": {
                            "StartDate": {
                                "description": "The start date.",
                                "pattern": "^\\d{4}\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01])$",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "S3BucketName": {
                        "description": "The S3 bucket name of the output reports.",
                        "pattern": "[a-z0-9-\\.]{3,63}",
                        "type": "string"
                    },
                    "S3KeyPrefix": {
                        "description": "The S3 key where the report is delivered.",
                        "maxLength": 100,
                        "minLength": 0,
                        "pattern": "[A-Za-z0-9!_\\-\\.\\*'()/]*",
                        "type": "string"
                    },
                    "ScheduleArn": {
                        "description": "The ARN of the business report schedule.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "ScheduleName": {
                        "description": "The name identifier of the schedule.",
                        "maxLength": 64,
                        "minLength": 0,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BusinessReportScheduleList": {
                "items": {
                    "description": "The schedule of the usage report.",
                    "properties": {
                        "ContentRange": {
                            "description": "The content range of the reports.",
                            "properties": {
                                "Interval": {
                                    "description": "The interval of the content range.",
                                    "enum": [
                                        "ONE_DAY",
                                        "ONE_WEEK"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "Format": {
                            "description": "The format of the generated report (individual CSV files or zipped files of individual files).",
                            "enum": [
                                "CSV",
                                "CSV_ZIP"
                            ],
                            "type": "string"
                        },
                        "LastBusinessReport": {
                            "description": "The details of the last business report delivery for a specified time interval.",
                            "properties": {
                                "DeliveryTime": {
                                    "description": "The time of report delivery.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "DownloadUrl": {
                                    "description": "The download link where a user can download the report.",
                                    "type": "string"
                                },
                                "FailureCode": {
                                    "description": "The failure code.",
                                    "enum": [
                                        "ACCESS_DENIED",
                                        "NO_SUCH_BUCKET",
                                        "INTERNAL_FAILURE"
                                    ],
                                    "type": "string"
                                },
                                "S3Location": {
                                    "description": "The S3 location of the output reports.",
                                    "properties": {
                                        "BucketName": {
                                            "description": "The S3 bucket name of the output reports.",
                                            "pattern": "[a-z0-9-\\.]{3,63}",
                                            "type": "string"
                                        },
                                        "Path": {
                                            "description": "The path of the business report.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Status": {
                                    "description": "The status of the report generation execution (RUNNING, SUCCEEDED, or FAILED).",
                                    "enum": [
                                        "RUNNING",
                                        "SUCCEEDED",
                                        "FAILED"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "Recurrence": {
                            "description": "The recurrence of the reports.",
                            "properties": {
                                "StartDate": {
                                    "description": "The start date.",
                                    "pattern": "^\\d{4}\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01])$",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "S3BucketName": {
                            "description": "The S3 bucket name of the output reports.",
                            "pattern": "[a-z0-9-\\.]{3,63}",
                            "type": "string"
                        },
                        "S3KeyPrefix": {
                            "description": "The S3 key where the report is delivered.",
                            "maxLength": 100,
                            "minLength": 0,
                            "pattern": "[A-Za-z0-9!_\\-\\.\\*'()/]*",
                            "type": "string"
                        },
                        "ScheduleArn": {
                            "description": "The ARN of the business report schedule.",
                            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                            "type": "string"
                        },
                        "ScheduleName": {
                            "description": "The name identifier of the schedule.",
                            "maxLength": 64,
                            "minLength": 0,
                            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "BusinessReportScheduleName": {
                "maxLength": 64,
                "minLength": 0,
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                "type": "string"
            },
            "BusinessReportStatus": {
                "enum": [
                    "RUNNING",
                    "SUCCEEDED",
                    "FAILED"
                ],
                "type": "string"
            },
            "Category": {
                "description": "The skill store category that is shown. Alexa skills are assigned a specific skill category during creation, such as News, Social, and Sports.",
                "properties": {
                    "CategoryId": {
                        "description": "The ID of the skill store category.",
                        "minimum": 1,
                        "type": "integer"
                    },
                    "CategoryName": {
                        "description": "The name of the skill store category.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CategoryId": {
                "minimum": 1,
                "type": "integer"
            },
            "CategoryList": {
                "items": {
                    "description": "The skill store category that is shown. Alexa skills are assigned a specific skill category during creation, such as News, Social, and Sports.",
                    "properties": {
                        "CategoryId": {
                            "description": "The ID of the skill store category.",
                            "minimum": 1,
                            "type": "integer"
                        },
                        "CategoryName": {
                            "description": "The name of the skill store category.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "CategoryName": {
                "type": "string"
            },
            "ClientId": {
                "pattern": "^\\S\\+\\{1,256\\}$",
                "type": "string"
            },
            "ClientRequestToken": {
                "maxLength": 150,
                "minLength": 10,
                "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
                "type": "string"
            },
            "CommsProtocol": {
                "enum": [
                    "SIP",
                    "SIPS",
                    "H323"
                ],
                "type": "string"
            },
            "ConcurrentModificationException": {},
            "ConferencePreference": {
                "description": "The default conference provider that is used if no other scheduled meetings are detected.",
                "properties": {
                    "DefaultConferenceProviderArn": {
                        "description": "The ARN of the default conference provider.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ConferenceProvider": {
                "description": "An entity that provides a conferencing solution. Alexa for Business acts as the voice interface and mediator that connects users to their preferred conference provider. Examples of conference providers include Amazon Chime, Zoom, Cisco, and Polycom. ",
                "properties": {
                    "Arn": {
                        "description": "The ARN of the newly created conference provider.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "IPDialIn": {
                        "description": "The IP endpoint and protocol for calling.",
                        "properties": {
                            "CommsProtocol": {
                                "description": "The protocol, including SIP, SIPS, and H323.",
                                "enum": [
                                    "SIP",
                                    "SIPS",
                                    "H323"
                                ],
                                "type": "string"
                            },
                            "Endpoint": {
                                "description": "The IP address.",
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "required": [
                            "Endpoint",
                            "CommsProtocol"
                        ],
                        "type": "object"
                    },
                    "MeetingSetting": {
                        "description": "The meeting settings for the conference provider.",
                        "properties": {
                            "RequirePin": {
                                "description": "The values that indicate whether the pin is always required.",
                                "enum": [
                                    "YES",
                                    "NO",
                                    "OPTIONAL"
                                ],
                                "type": "string"
                            }
                        },
                        "required": [
                            "RequirePin"
                        ],
                        "type": "object"
                    },
                    "Name": {
                        "description": "The name of the conference provider.",
                        "maxLength": 50,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "PSTNDialIn": {
                        "description": "The information for PSTN conferencing.",
                        "properties": {
                            "CountryCode": {
                                "description": "The zip code.",
                                "pattern": "\\d{1,3}",
                                "type": "string"
                            },
                            "OneClickIdDelay": {
                                "description": "The delay duration before Alexa enters the conference ID with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.",
                                "maxLength": 2,
                                "minLength": 1,
                                "type": "string"
                            },
                            "OneClickPinDelay": {
                                "description": "The delay duration before Alexa enters the conference pin with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.",
                                "maxLength": 2,
                                "minLength": 1,
                                "type": "string"
                            },
                            "PhoneNumber": {
                                "description": "The phone number to call to join the conference.",
                                "pattern": "\\d{10}",
                                "type": "string"
                            }
                        },
                        "required": [
                            "CountryCode",
                            "PhoneNumber",
                            "OneClickIdDelay",
                            "OneClickPinDelay"
                        ],
                        "type": "object"
                    },
                    "Type": {
                        "description": "The type of conference providers.",
                        "enum": [
                            "CHIME",
                            "BLUEJEANS",
                            "FUZE",
                            "GOOGLE_HANGOUTS",
                            "POLYCOM",
                            "RINGCENTRAL",
                            "SKYPE_FOR_BUSINESS",
                            "WEBEX",
                            "ZOOM",
                            "CUSTOM"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ConferenceProviderName": {
                "maxLength": 50,
                "minLength": 1,
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                "type": "string"
            },
            "ConferenceProviderType": {
                "enum": [
                    "CHIME",
                    "BLUEJEANS",
                    "FUZE",
                    "GOOGLE_HANGOUTS",
                    "POLYCOM",
                    "RINGCENTRAL",
                    "SKYPE_FOR_BUSINESS",
                    "WEBEX",
                    "ZOOM",
                    "CUSTOM"
                ],
                "type": "string"
            },
            "ConferenceProvidersList": {
                "items": {
                    "description": "An entity that provides a conferencing solution. Alexa for Business acts as the voice interface and mediator that connects users to their preferred conference provider. Examples of conference providers include Amazon Chime, Zoom, Cisco, and Polycom. ",
                    "properties": {
                        "Arn": {
                            "description": "The ARN of the newly created conference provider.",
                            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                            "type": "string"
                        },
                        "IPDialIn": {
                            "description": "The IP endpoint and protocol for calling.",
                            "properties": {
                                "CommsProtocol": {
                                    "description": "The protocol, including SIP, SIPS, and H323.",
                                    "enum": [
                                        "SIP",
                                        "SIPS",
                                        "H323"
                                    ],
                                    "type": "string"
                                },
                                "Endpoint": {
                                    "description": "The IP address.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Endpoint",
                                "CommsProtocol"
                            ],
                            "type": "object"
                        },
                        "MeetingSetting": {
                            "description": "The meeting settings for the conference provider.",
                            "properties": {
                                "RequirePin": {
                                    "description": "The values that indicate whether the pin is always required.",
                                    "enum": [
                                        "YES",
                                        "NO",
                                        "OPTIONAL"
                                    ],
                                    "type": "string"
                                }
                            },
                            "required": [
                                "RequirePin"
                            ],
                            "type": "object"
                        },
                        "Name": {
                            "description": "The name of the conference provider.",
                            "maxLength": 50,
                            "minLength": 1,
                            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                            "type": "string"
                        },
                        "PSTNDialIn": {
                            "description": "The information for PSTN conferencing.",
                            "properties": {
                                "CountryCode": {
                                    "description": "The zip code.",
                                    "pattern": "\\d{1,3}",
                                    "type": "string"
                                },
                                "OneClickIdDelay": {
                                    "description": "The delay duration before Alexa enters the conference ID with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.",
                                    "maxLength": 2,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "OneClickPinDelay": {
                                    "description": "The delay duration before Alexa enters the conference pin with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.",
                                    "maxLength": 2,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "PhoneNumber": {
                                    "description": "The phone number to call to join the conference.",
                                    "pattern": "\\d{10}",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "CountryCode",
                                "PhoneNumber",
                                "OneClickIdDelay",
                                "OneClickPinDelay"
                            ],
                            "type": "object"
                        },
                        "Type": {
                            "description": "The type of conference providers.",
                            "enum": [
                                "CHIME",
                                "BLUEJEANS",
                                "FUZE",
                                "GOOGLE_HANGOUTS",
                                "POLYCOM",
                                "RINGCENTRAL",
                                "SKYPE_FOR_BUSINESS",
                                "WEBEX",
                                "ZOOM",
                                "CUSTOM"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "ConnectionStatus": {
                "enum": [
                    "ONLINE",
                    "OFFLINE"
                ],
                "type": "string"
            },
            "Contact": {
                "description": "A contact with attributes.",
                "properties": {
                    "ContactArn": {
                        "description": "The ARN of the contact.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "DisplayName": {
                        "description": "The name of the contact to display on the console.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "FirstName": {
                        "description": "The first name of the contact, used to call the contact on the device.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "LastName": {
                        "description": "The last name of the contact, used to call the contact on the device.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "PhoneNumber": {
                        "description": "The phone number of the contact.",
                        "format": "password",
                        "pattern": "^\\+\\d{8,}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ContactData": {
                "description": "Information related to a contact.",
                "properties": {
                    "ContactArn": {
                        "description": "The ARN of the contact.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "DisplayName": {
                        "description": "The name of the contact to display on the console.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "FirstName": {
                        "description": "The first name of the contact, used to call the contact on the device.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "LastName": {
                        "description": "The last name of the contact, used to call the contact on the device.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "PhoneNumber": {
                        "description": "The phone number of the contact.",
                        "format": "password",
                        "pattern": "^\\+\\d{8,}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ContactDataList": {
                "items": {
                    "description": "Information related to a contact.",
                    "properties": {
                        "ContactArn": {
                            "description": "The ARN of the contact.",
                            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                            "type": "string"
                        },
                        "DisplayName": {
                            "description": "The name of the contact to display on the console.",
                            "maxLength": 100,
                            "minLength": 1,
                            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                            "type": "string"
                        },
                        "FirstName": {
                            "description": "The first name of the contact, used to call the contact on the device.",
                            "maxLength": 100,
                            "minLength": 1,
                            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                            "type": "string"
                        },
                        "LastName": {
                            "description": "The last name of the contact, used to call the contact on the device.",
                            "maxLength": 100,
                            "minLength": 1,
                            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                            "type": "string"
                        },
                        "PhoneNumber": {
                            "description": "The phone number of the contact.",
                            "format": "password",
                            "pattern": "^\\+\\d{8,}$",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "ContactName": {
                "maxLength": 100,
                "minLength": 1,
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                "type": "string"
            },
            "CountryCode": {
                "pattern": "\\d{1,3}",
                "type": "string"
            },
            "CreateAddressBookRequest": {
                "properties": {
                    "ClientRequestToken": {
                        "description": "A unique, user-specified identifier for the request that ensures idempotency.",
                        "maxLength": 150,
                        "minLength": 10,
                        "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
                        "type": "string"
                    },
                    "Description": {
                        "description": "The description of the address book.",
                        "maxLength": 200,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the address book.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    }
                },
                "required": [
                    "Name"
                ],
                "type": "object"
            },
            "CreateAddressBookResponse": {
                "properties": {
                    "AddressBookArn": {
                        "description": "The ARN of the newly created address book.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateBusinessReportScheduleRequest": {
                "properties": {
                    "ClientRequestToken": {
                        "description": "The client request token.",
                        "maxLength": 150,
                        "minLength": 10,
                        "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
                        "type": "string"
                    },
                    "ContentRange": {
                        "description": "The content range of the reports.",
                        "properties": {
                            "Interval": {
                                "description": "The interval of the content range.",
                                "enum": [
                                    "ONE_DAY",
                                    "ONE_WEEK"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "Format": {
                        "description": "The format of the generated report (individual CSV files or zipped files of individual files).",
                        "enum": [
                            "CSV",
                            "CSV_ZIP"
                        ],
                        "type": "string"
                    },
                    "Recurrence": {
                        "description": "The recurrence of the reports. If this isn't specified, the report will only be delivered one time when the API is called. ",
                        "properties": {
                            "StartDate": {
                                "description": "The start date.",
                                "pattern": "^\\d{4}\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01])$",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "S3BucketName": {
                        "description": "The S3 bucket name of the output reports. If this isn't specified, the report can be retrieved from a download link by calling ListBusinessReportSchedule. ",
                        "pattern": "[a-z0-9-\\.]{3,63}",
                        "type": "string"
                    },
                    "S3KeyPrefix": {
                        "description": "The S3 key where the report is delivered.",
                        "maxLength": 100,
                        "minLength": 0,
                        "pattern": "[A-Za-z0-9!_\\-\\.\\*'()/]*",
                        "type": "string"
                    },
                    "ScheduleName": {
                        "description": "The name identifier of the schedule.",
                        "maxLength": 64,
                        "minLength": 0,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    }
                },
                "required": [
                    "Format",
                    "ContentRange"
                ],
                "type": "object"
            },
            "CreateBusinessReportScheduleResponse": {
                "properties": {
                    "ScheduleArn": {
                        "description": "The ARN of the business report schedule.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateConferenceProviderRequest": {
                "properties": {
                    "ClientRequestToken": {
                        "description": "The request token of the client.",
                        "maxLength": 150,
                        "minLength": 10,
                        "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
                        "type": "string"
                    },
                    "ConferenceProviderName": {
                        "description": "The name of the conference provider.",
                        "maxLength": 50,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "ConferenceProviderType": {
                        "description": "Represents a type within a list of predefined types.",
                        "enum": [
                            "CHIME",
                            "BLUEJEANS",
                            "FUZE",
                            "GOOGLE_HANGOUTS",
                            "POLYCOM",
                            "RINGCENTRAL",
                            "SKYPE_FOR_BUSINESS",
                            "WEBEX",
                            "ZOOM",
                            "CUSTOM"
                        ],
                        "type": "string"
                    },
                    "IPDialIn": {
                        "description": "The IP endpoint and protocol for calling.",
                        "properties": {
                            "CommsProtocol": {
                                "description": "The protocol, including SIP, SIPS, and H323.",
                                "enum": [
                                    "SIP",
                                    "SIPS",
                                    "H323"
                                ],
                                "type": "string"
                            },
                            "Endpoint": {
                                "description": "The IP address.",
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "required": [
                            "Endpoint",
                            "CommsProtocol"
                        ],
                        "type": "object"
                    },
                    "MeetingSetting": {
                        "description": "The meeting settings for the conference provider.",
                        "properties": {
                            "RequirePin": {
                                "description": "The values that indicate whether the pin is always required.",
                                "enum": [
                                    "YES",
                                    "NO",
                                    "OPTIONAL"
                                ],
                                "type": "string"
                            }
                        },
                        "required": [
                            "RequirePin"
                        ],
                        "type": "object"
                    },
                    "PSTNDialIn": {
                        "description": "The information for PSTN conferencing.",
                        "properties": {
                            "CountryCode": {
                                "description": "The zip code.",
                                "pattern": "\\d{1,3}",
                                "type": "string"
                            },
                            "OneClickIdDelay": {
                                "description": "The delay duration before Alexa enters the conference ID with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.",
                                "maxLength": 2,
                                "minLength": 1,
                                "type": "string"
                            },
                            "OneClickPinDelay": {
                                "description": "The delay duration before Alexa enters the conference pin with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.",
                                "maxLength": 2,
                                "minLength": 1,
                                "type": "string"
                            },
                            "PhoneNumber": {
                                "description": "The phone number to call to join the conference.",
                                "pattern": "\\d{10}",
                                "type": "string"
                            }
                        },
                        "required": [
                            "CountryCode",
                            "PhoneNumber",
                            "OneClickIdDelay",
                            "OneClickPinDelay"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "ConferenceProviderName",
                    "ConferenceProviderType",
                    "MeetingSetting"
                ],
                "type": "object"
            },
            "CreateConferenceProviderResponse": {
                "properties": {
                    "ConferenceProviderArn": {
                        "description": "The ARN of the newly-created conference provider.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateContactRequest": {
                "properties": {
                    "ClientRequestToken": {
                        "description": "A unique, user-specified identifier for this request that ensures idempotency.",
                        "maxLength": 150,
                        "minLength": 10,
                        "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
                        "type": "string"
                    },
                    "DisplayName": {
                        "description": "The name of the contact to display on the console.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "FirstName": {
                        "description": "The first name of the contact that is used to call the contact on the device.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "LastName": {
                        "description": "The last name of the contact that is used to call the contact on the device.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "PhoneNumber": {
                        "description": "The phone number of the contact in E.164 format.",
                        "format": "password",
                        "pattern": "^\\+\\d{8,}$",
                        "type": "string"
                    }
                },
                "required": [
                    "FirstName"
                ],
                "type": "object"
            },
            "CreateContactResponse": {
                "properties": {
                    "ContactArn": {
                        "description": "The ARN of the newly created address book.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateProfileRequest": {
                "properties": {
                    "Address": {
                        "description": "The valid address for the room.",
                        "maxLength": 500,
                        "minLength": 1,
                        "type": "string"
                    },
                    "ClientRequestToken": {
                        "description": "The user-specified token that is used during the creation of a profile.",
                        "maxLength": 150,
                        "minLength": 10,
                        "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
                        "type": "string"
                    },
                    "DistanceUnit": {
                        "description": "The distance unit to be used by devices in the profile.",
                        "enum": [
                            "METRIC",
                            "IMPERIAL"
                        ],
                        "type": "string"
                    },
                    "MaxVolumeLimit": {
                        "description": "The maximum volume limit for a room profile.",
                        "type": "integer"
                    },
                    "PSTNEnabled": {
                        "description": "Whether PSTN calling is enabled.",
                        "type": "boolean"
                    },
                    "ProfileName": {
                        "description": "The name of a room profile.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "SetupModeDisabled": {
                        "description": "Whether room profile setup is enabled.",
                        "type": "boolean"
                    },
                    "TemperatureUnit": {
                        "description": "The temperature unit to be used by devices in the profile.",
                        "enum": [
                            "FAHRENHEIT",
                            "CELSIUS"
                        ],
                        "type": "string"
                    },
                    "Timezone": {
                        "description": "The time zone used by a room profile.",
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string"
                    },
                    "WakeWord": {
                        "description": "A wake word for Alexa, Echo, Amazon, or a computer.",
                        "enum": [
                            "ALEXA",
                            "AMAZON",
                            "ECHO",
                            "COMPUTER"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "ProfileName",
                    "Timezone",
                    "Address",
                    "DistanceUnit",
                    "TemperatureUnit",
                    "WakeWord"
                ],
                "type": "object"
            },
            "CreateProfileResponse": {
                "properties": {
                    "ProfileArn": {
                        "description": "The ARN of the newly created room profile in the response.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateRoomRequest": {
                "properties": {
                    "ClientRequestToken": {
                        "description": "A unique, user-specified identifier for this request that ensures idempotency. ",
                        "maxLength": 150,
                        "minLength": 10,
                        "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
                        "type": "string"
                    },
                    "Description": {
                        "description": "The description for the room.",
                        "maxLength": 200,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "ProfileArn": {
                        "description": "The profile ARN for the room.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "ProviderCalendarId": {
                        "description": "The calendar ARN for the room.",
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string"
                    },
                    "RoomName": {
                        "description": "The name for the room.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "Tags": {
                        "description": "The tags for the room.",
                        "items": {
                            "description": "A key-value pair that can be associated with a resource. ",
                            "properties": {
                                "Key": {
                                    "description": "The key of a tag. Tag keys are case-sensitive. ",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The value of a tag. Tag values are case-sensitive and can be null.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Key",
                                "Value"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "RoomName"
                ],
                "type": "object"
            },
            "CreateRoomResponse": {
                "properties": {
                    "RoomArn": {
                        "description": "The ARN of the newly created room in the response.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateSkillGroupRequest": {
                "properties": {
                    "ClientRequestToken": {
                        "description": "A unique, user-specified identifier for this request that ensures idempotency. ",
                        "maxLength": 150,
                        "minLength": 10,
                        "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
                        "type": "string"
                    },
                    "Description": {
                        "description": "The description for the skill group.",
                        "maxLength": 200,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "SkillGroupName": {
                        "description": "The name for the skill group.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    }
                },
                "required": [
                    "SkillGroupName"
                ],
                "type": "object"
            },
            "CreateSkillGroupResponse": {
                "properties": {
                    "SkillGroupArn": {
                        "description": "The ARN of the newly created skill group in the response.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateUserRequest": {
                "properties": {
                    "ClientRequestToken": {
                        "description": "A unique, user-specified identifier for this request that ensures idempotency. ",
                        "maxLength": 150,
                        "minLength": 10,
                        "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
                        "type": "string"
                    },
                    "Email": {
                        "description": "The email address for the user.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                        "type": "string"
                    },
                    "FirstName": {
                        "description": "The first name for the user.",
                        "maxLength": 30,
                        "minLength": 0,
                        "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
                        "type": "string"
                    },
                    "LastName": {
                        "description": "The last name for the user.",
                        "maxLength": 30,
                        "minLength": 0,
                        "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
                        "type": "string"
                    },
                    "Tags": {
                        "description": "The tags for the user.",
                        "items": {
                            "description": "A key-value pair that can be associated with a resource. ",
                            "properties": {
                                "Key": {
                                    "description": "The key of a tag. Tag keys are case-sensitive. ",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The value of a tag. Tag values are case-sensitive and can be null.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Key",
                                "Value"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "UserId": {
                        "description": "The ARN for the user.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[a-zA-Z0-9@_+.-]*",
                        "type": "string"
                    }
                },
                "required": [
                    "UserId"
                ],
                "type": "object"
            },
            "CreateUserResponse": {
                "properties": {
                    "UserArn": {
                        "description": "The ARN of the newly created user in the response.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CustomerS3BucketName": {
                "pattern": "[a-z0-9-\\.]{3,63}",
                "type": "string"
            },
            "Date": {
                "pattern": "^\\d{4}\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01])$",
                "type": "string"
            },
            "DeleteAddressBookRequest": {
                "properties": {
                    "AddressBookArn": {
                        "description": "The ARN of the address book to delete.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "required": [
                    "AddressBookArn"
                ],
                "type": "object"
            },
            "DeleteAddressBookResponse": {
                "properties": {},
                "type": "object"
            },
            "DeleteBusinessReportScheduleRequest": {
                "properties": {
                    "ScheduleArn": {
                        "description": "The ARN of the business report schedule.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "required": [
                    "ScheduleArn"
                ],
                "type": "object"
            },
            "DeleteBusinessReportScheduleResponse": {
                "properties": {},
                "type": "object"
            },
            "DeleteConferenceProviderRequest": {
                "properties": {
                    "ConferenceProviderArn": {
                        "description": "The ARN of the conference provider.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "required": [
                    "ConferenceProviderArn"
                ],
                "type": "object"
            },
            "DeleteConferenceProviderResponse": {
                "properties": {},
                "type": "object"
            },
            "DeleteContactRequest": {
                "properties": {
                    "ContactArn": {
                        "description": "The ARN of the contact to delete.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "required": [
                    "ContactArn"
                ],
                "type": "object"
            },
            "DeleteContactResponse": {
                "properties": {},
                "type": "object"
            },
            "DeleteDeviceRequest": {
                "properties": {
                    "DeviceArn": {
                        "description": "The ARN of the device for which to request details.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "required": [
                    "DeviceArn"
                ],
                "type": "object"
            },
            "DeleteDeviceResponse": {
                "properties": {},
                "type": "object"
            },
            "DeleteProfileRequest": {
                "properties": {
                    "ProfileArn": {
                        "description": "The ARN of the room profile to delete. Required.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DeleteProfileResponse": {
                "properties": {},
                "type": "object"
            },
            "DeleteRoomRequest": {
                "properties": {
                    "RoomArn": {
                        "description": "The ARN of the room to delete. Required.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DeleteRoomResponse": {
                "properties": {},
                "type": "object"
            },
            "DeleteRoomSkillParameterRequest": {
                "properties": {
                    "ParameterKey": {
                        "description": "The room skill parameter key for which to remove details.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "RoomArn": {
                        "description": "The ARN of the room from which to remove the room skill parameter details.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "SkillId": {
                        "description": "The ID of the skill from which to remove the room skill parameter details.",
                        "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                        "type": "string"
                    }
                },
                "required": [
                    "SkillId",
                    "ParameterKey"
                ],
                "type": "object"
            },
            "DeleteRoomSkillParameterResponse": {
                "properties": {},
                "type": "object"
            },
            "DeleteSkillAuthorizationRequest": {
                "properties": {
                    "RoomArn": {
                        "description": "The room that the skill is authorized for.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "SkillId": {
                        "description": "The unique identifier of a skill.",
                        "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                        "type": "string"
                    }
                },
                "required": [
                    "SkillId"
                ],
                "type": "object"
            },
            "DeleteSkillAuthorizationResponse": {
                "properties": {},
                "type": "object"
            },
            "DeleteSkillGroupRequest": {
                "properties": {
                    "SkillGroupArn": {
                        "description": "The ARN of the skill group to delete. Required.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DeleteSkillGroupResponse": {
                "properties": {},
                "type": "object"
            },
            "DeleteUserRequest": {
                "properties": {
                    "EnrollmentId": {
                        "description": "The ARN of the user's enrollment in the organization. Required.",
                        "maxLength": 128,
                        "minLength": 0,
                        "type": "string"
                    },
                    "UserArn": {
                        "description": "The ARN of the user to delete in the organization. Required.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "required": [
                    "EnrollmentId"
                ],
                "type": "object"
            },
            "DeleteUserResponse": {
                "properties": {},
                "type": "object"
            },
            "DeveloperInfo": {
                "description": "The details about the developer that published the skill.",
                "properties": {
                    "DeveloperName": {
                        "description": "The name of the developer.",
                        "type": "string"
                    },
                    "Email": {
                        "description": "The email of the developer.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                        "type": "string"
                    },
                    "PrivacyPolicy": {
                        "description": "The URL of the privacy policy.",
                        "type": "string"
                    },
                    "Url": {
                        "description": "The website of the developer.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DeveloperName": {
                "type": "string"
            },
            "Device": {
                "description": "A device with attributes.",
                "properties": {
                    "DeviceArn": {
                        "description": "The ARN of a device.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "DeviceName": {
                        "description": "The name of a device.",
                        "maxLength": 100,
                        "minLength": 2,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "DeviceSerialNumber": {
                        "description": "The serial number of a device.",
                        "pattern": "[a-zA-Z0-9]{1,200}",
                        "type": "string"
                    },
                    "DeviceStatus": {
                        "description": "The status of a device. If the status is not READY, check the DeviceStatusInfo value for details.",
                        "enum": [
                            "READY",
                            "PENDING",
                            "WAS_OFFLINE",
                            "DEREGISTERED"
                        ],
                        "type": "string"
                    },
                    "DeviceStatusInfo": {
                        "description": "Detailed information about a device's status.",
                        "properties": {
                            "ConnectionStatus": {
                                "description": "The latest available information about the connection status of a device. ",
                                "enum": [
                                    "ONLINE",
                                    "OFFLINE"
                                ],
                                "type": "string"
                            },
                            "DeviceStatusDetails": {
                                "description": "One or more device status detail descriptions.",
                                "items": {
                                    "description": "Details of a device’s status.",
                                    "properties": {
                                        "Code": {
                                            "description": "The device status detail code.",
                                            "enum": [
                                                "DEVICE_SOFTWARE_UPDATE_NEEDED",
                                                "DEVICE_WAS_OFFLINE"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    "DeviceType": {
                        "description": "The type of a device.",
                        "pattern": "[a-zA-Z0-9]{1,200}",
                        "type": "string"
                    },
                    "MacAddress": {
                        "description": "The MAC address of a device.",
                        "type": "string"
                    },
                    "RoomArn": {
                        "description": "The room ARN of a device.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "SoftwareVersion": {
                        "description": "The software version of a device.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DeviceData": {
                "description": "Device attributes.",
                "properties": {
                    "DeviceArn": {
                        "description": "The ARN of a device.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "DeviceName": {
                        "description": "The name of a device.",
                        "maxLength": 100,
                        "minLength": 2,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "DeviceSerialNumber": {
                        "description": "The serial number of a device.",
                        "pattern": "[a-zA-Z0-9]{1,200}",
                        "type": "string"
                    },
                    "DeviceStatus": {
                        "description": "The status of a device.",
                        "enum": [
                            "READY",
                            "PENDING",
                            "WAS_OFFLINE",
                            "DEREGISTERED"
                        ],
                        "type": "string"
                    },
                    "DeviceStatusInfo": {
                        "description": "Detailed information about a device's status.",
                        "properties": {
                            "ConnectionStatus": {
                                "description": "The latest available information about the connection status of a device. ",
                                "enum": [
                                    "ONLINE",
                                    "OFFLINE"
                                ],
                                "type": "string"
                            },
                            "DeviceStatusDetails": {
                                "description": "One or more device status detail descriptions.",
                                "items": {
                                    "description": "Details of a device’s status.",
                                    "properties": {
                                        "Code": {
                                            "description": "The device status detail code.",
                                            "enum": [
                                                "DEVICE_SOFTWARE_UPDATE_NEEDED",
                                                "DEVICE_WAS_OFFLINE"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    "DeviceType": {
                        "description": "The type of a device.",
                        "pattern": "[a-zA-Z0-9]{1,200}",
                        "type": "string"
                    },
                    "MacAddress": {
                        "description": "The MAC address of a device.",
                        "type": "string"
                    },
                    "RoomArn": {
                        "description": "The room ARN associated with a device.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "RoomName": {
                        "description": "The name of the room associated with a device.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "SoftwareVersion": {
                        "description": "The software version of a device.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DeviceDataList": {
                "items": {
                    "description": "Device attributes.",
                    "properties": {
                        "DeviceArn": {
                            "description": "The ARN of a device.",
                            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                            "type": "string"
                        },
                        "DeviceName": {
                            "description": "The name of a device.",
                            "maxLength": 100,
                            "minLength": 2,
                            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                            "type": "string"
                        },
                        "DeviceSerialNumber": {
                            "description": "The serial number of a device.",
                            "pattern": "[a-zA-Z0-9]{1,200}",
                            "type": "string"
                        },
                        "DeviceStatus": {
                            "description": "The status of a device.",
                            "enum": [
                                "READY",
                                "PENDING",
                                "WAS_OFFLINE",
                                "DEREGISTERED"
                            ],
                            "type": "string"
                        },
                        "DeviceStatusInfo": {
                            "description": "Detailed information about a device's status.",
                            "properties": {
                                "ConnectionStatus": {
                                    "description": "The latest available information about the connection status of a device. ",
                                    "enum": [
                                        "ONLINE",
                                        "OFFLINE"
                                    ],
                                    "type": "string"
                                },
                                "DeviceStatusDetails": {
                                    "description": "One or more device status detail descriptions.",
                                    "items": {
                                        "description": "Details of a device’s status.",
                                        "properties": {
                                            "Code": {
                                                "description": "The device status detail code.",
                                                "enum": [
                                                    "DEVICE_SOFTWARE_UPDATE_NEEDED",
                                                    "DEVICE_WAS_OFFLINE"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "DeviceType": {
                            "description": "The type of a device.",
                            "pattern": "[a-zA-Z0-9]{1,200}",
                            "type": "string"
                        },
                        "MacAddress": {
                            "description": "The MAC address of a device.",
                            "type": "string"
                        },
                        "RoomArn": {
                            "description": "The room ARN associated with a device.",
                            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                            "type": "string"
                        },
                        "RoomName": {
                            "description": "The name of the room associated with a device.",
                            "maxLength": 100,
                            "minLength": 1,
                            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                            "type": "string"
                        },
                        "SoftwareVersion": {
                            "description": "The software version of a device.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "DeviceEvent": {
                "description": "The list of device events.",
                "properties": {
                    "Timestamp": {
                        "description": "The time (in epoch) when the event occurred. ",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Type": {
                        "description": "The type of device event.",
                        "enum": [
                            "CONNECTION_STATUS",
                            "DEVICE_STATUS"
                        ],
                        "type": "string"
                    },
                    "Value": {
                        "description": "The value of the event.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DeviceEventList": {
                "items": {
                    "description": "The list of device events.",
                    "properties": {
                        "Timestamp": {
                            "description": "The time (in epoch) when the event occurred. ",
                            "format": "date-time",
                            "type": "string"
                        },
                        "Type": {
                            "description": "The type of device event.",
                            "enum": [
                                "CONNECTION_STATUS",
                                "DEVICE_STATUS"
                            ],
                            "type": "string"
                        },
                        "Value": {
                            "description": "The value of the event.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "DeviceEventType": {
                "enum": [
                    "CONNECTION_STATUS",
                    "DEVICE_STATUS"
                ],
                "type": "string"
            },
            "DeviceEventValue": {
                "type": "string"
            },
            "DeviceName": {
                "maxLength": 100,
                "minLength": 2,
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                "type": "string"
            },
            "DeviceNotRegisteredException": {},
            "DeviceSerialNumber": {
                "pattern": "[a-zA-Z0-9]{1,200}",
                "type": "string"
            },
            "DeviceSerialNumberForAVS": {
                "pattern": "^[a-zA-Z0-9]{1,50}$",
                "type": "string"
            },
            "DeviceStatus": {
                "enum": [
                    "READY",
                    "PENDING",
                    "WAS_OFFLINE",
                    "DEREGISTERED"
                ],
                "type": "string"
            },
            "DeviceStatusDetail": {
                "description": "Details of a device’s status.",
                "properties": {
                    "Code": {
                        "description": "The device status detail code.",
                        "enum": [
                            "DEVICE_SOFTWARE_UPDATE_NEEDED",
                            "DEVICE_WAS_OFFLINE"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DeviceStatusDetailCode": {
                "enum": [
                    "DEVICE_SOFTWARE_UPDATE_NEEDED",
                    "DEVICE_WAS_OFFLINE"
                ],
                "type": "string"
            },
            "DeviceStatusDetails": {
                "items": {
                    "description": "Details of a device’s status.",
                    "properties": {
                        "Code": {
                            "description": "The device status detail code.",
                            "enum": [
                                "DEVICE_SOFTWARE_UPDATE_NEEDED",
                                "DEVICE_WAS_OFFLINE"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "DeviceStatusInfo": {
                "description": "Detailed information about a device's status.",
                "properties": {
                    "ConnectionStatus": {
                        "description": "The latest available information about the connection status of a device. ",
                        "enum": [
                            "ONLINE",
                            "OFFLINE"
                        ],
                        "type": "string"
                    },
                    "DeviceStatusDetails": {
                        "description": "One or more device status detail descriptions.",
                        "items": {
                            "description": "Details of a device’s status.",
                            "properties": {
                                "Code": {
                                    "description": "The device status detail code.",
                                    "enum": [
                                        "DEVICE_SOFTWARE_UPDATE_NEEDED",
                                        "DEVICE_WAS_OFFLINE"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DeviceType": {
                "pattern": "[a-zA-Z0-9]{1,200}",
                "type": "string"
            },
            "DisassociateContactFromAddressBookRequest": {
                "properties": {
                    "AddressBookArn": {
                        "description": "The ARN of the address from which to disassociate the contact.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "ContactArn": {
                        "description": "The ARN of the contact to disassociate from an address book.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "required": [
                    "ContactArn",
                    "AddressBookArn"
                ],
                "type": "object"
            },
            "DisassociateContactFromAddressBookResponse": {
                "properties": {},
                "type": "object"
            },
            "DisassociateDeviceFromRoomRequest": {
                "properties": {
                    "DeviceArn": {
                        "description": "The ARN of the device to disassociate from a room. Required.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DisassociateDeviceFromRoomResponse": {
                "properties": {},
                "type": "object"
            },
            "DisassociateSkillFromSkillGroupRequest": {
                "properties": {
                    "SkillGroupArn": {
                        "description": "The unique identifier of a skill. Required.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "SkillId": {
                        "description": "The ARN of a skill group to associate to a skill.",
                        "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                        "type": "string"
                    }
                },
                "required": [
                    "SkillId"
                ],
                "type": "object"
            },
            "DisassociateSkillFromSkillGroupResponse": {
                "properties": {},
                "type": "object"
            },
            "DisassociateSkillFromUsersRequest": {
                "properties": {
                    "SkillId": {
                        "description": " The private skill ID you want to make unavailable for enrolled users.",
                        "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                        "type": "string"
                    }
                },
                "required": [
                    "SkillId"
                ],
                "type": "object"
            },
            "DisassociateSkillFromUsersResponse": {
                "properties": {},
                "type": "object"
            },
            "DisassociateSkillGroupFromRoomRequest": {
                "properties": {
                    "RoomArn": {
                        "description": "The ARN of the room from which the skill group is to be disassociated. Required.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "SkillGroupArn": {
                        "description": "The ARN of the skill group to disassociate from a room. Required.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DisassociateSkillGroupFromRoomResponse": {
                "properties": {},
                "type": "object"
            },
            "DistanceUnit": {
                "enum": [
                    "METRIC",
                    "IMPERIAL"
                ],
                "type": "string"
            },
            "E164PhoneNumber": {
                "format": "password",
                "pattern": "^\\+\\d{8,}$",
                "type": "string"
            },
            "Email": {
                "maxLength": 128,
                "minLength": 1,
                "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                "type": "string"
            },
            "EnablementType": {
                "enum": [
                    "ENABLED",
                    "PENDING"
                ],
                "type": "string"
            },
            "EnablementTypeFilter": {
                "enum": [
                    "ENABLED",
                    "PENDING"
                ],
                "type": "string"
            },
            "EndUserLicenseAgreement": {
                "type": "string"
            },
            "Endpoint": {
                "maxLength": 256,
                "minLength": 1,
                "type": "string"
            },
            "EnrollmentId": {
                "maxLength": 128,
                "minLength": 0,
                "type": "string"
            },
            "EnrollmentStatus": {
                "enum": [
                    "INITIALIZED",
                    "PENDING",
                    "REGISTERED",
                    "DISASSOCIATING",
                    "DEREGISTERING"
                ],
                "type": "string"
            },
            "Feature": {
                "enum": [
                    "BLUETOOTH",
                    "VOLUME",
                    "NOTIFICATIONS",
                    "LISTS",
                    "SKILLS",
                    "ALL"
                ],
                "type": "string"
            },
            "Features": {
                "items": {
                    "enum": [
                        "BLUETOOTH",
                        "VOLUME",
                        "NOTIFICATIONS",
                        "LISTS",
                        "SKILLS",
                        "ALL"
                    ],
                    "type": "string"
                },
                "type": "array"
            },
            "Filter": {
                "description": "A filter name and value pair that is used to return a more specific list of results. Filters can be used to match a set of resources by various criteria.",
                "properties": {
                    "Key": {
                        "description": "The key of a filter.",
                        "maxLength": 500,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Values": {
                        "description": "The values of a filter.",
                        "items": {
                            "maxLength": 500,
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 5,
                        "type": "array"
                    }
                },
                "required": [
                    "Key",
                    "Values"
                ],
                "type": "object"
            },
            "FilterKey": {
                "maxLength": 500,
                "minLength": 1,
                "type": "string"
            },
            "FilterList": {
                "items": {
                    "description": "A filter name and value pair that is used to return a more specific list of results. Filters can be used to match a set of resources by various criteria.",
                    "properties": {
                        "Key": {
                            "description": "The key of a filter.",
                            "maxLength": 500,
                            "minLength": 1,
                            "type": "string"
                        },
                        "Values": {
                            "description": "The values of a filter.",
                            "items": {
                                "maxLength": 500,
                                "minLength": 1,
                                "type": "string"
                            },
                            "maxItems": 5,
                            "type": "array"
                        }
                    },
                    "required": [
                        "Key",
                        "Values"
                    ],
                    "type": "object"
                },
                "maxItems": 25,
                "type": "array"
            },
            "FilterValue": {
                "maxLength": 500,
                "minLength": 1,
                "type": "string"
            },
            "FilterValueList": {
                "items": {
                    "maxLength": 500,
                    "minLength": 1,
                    "type": "string"
                },
                "maxItems": 5,
                "type": "array"
            },
            "ForgetSmartHomeAppliancesRequest": {
                "properties": {
                    "RoomArn": {
                        "description": "The room that the appliances are associated with.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "required": [
                    "RoomArn"
                ],
                "type": "object"
            },
            "ForgetSmartHomeAppliancesResponse": {
                "properties": {},
                "type": "object"
            },
            "GenericKeyword": {
                "type": "string"
            },
            "GenericKeywords": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "GetAddressBookRequest": {
                "properties": {
                    "AddressBookArn": {
                        "description": "The ARN of the address book for which to request details.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "required": [
                    "AddressBookArn"
                ],
                "type": "object"
            },
            "GetAddressBookResponse": {
                "properties": {
                    "AddressBook": {
                        "description": "The details of the requested address book.",
                        "properties": {
                            "AddressBookArn": {
                                "description": "The ARN of the address book.",
                                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                "type": "string"
                            },
                            "Description": {
                                "description": "The description of the address book.",
                                "maxLength": 200,
                                "minLength": 1,
                                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                "type": "string"
                            },
                            "Name": {
                                "description": "The name of the address book.",
                                "maxLength": 100,
                                "minLength": 1,
                                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetConferencePreferenceRequest": {
                "properties": {},
                "type": "object"
            },
            "GetConferencePreferenceResponse": {
                "properties": {
                    "Preference": {
                        "description": "The conference preference.",
                        "properties": {
                            "DefaultConferenceProviderArn": {
                                "description": "The ARN of the default conference provider.",
                                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetConferenceProviderRequest": {
                "properties": {
                    "ConferenceProviderArn": {
                        "description": "The ARN of the newly created conference provider.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "required": [
                    "ConferenceProviderArn"
                ],
                "type": "object"
            },
            "GetConferenceProviderResponse": {
                "properties": {
                    "ConferenceProvider": {
                        "description": "The conference provider.",
                        "properties": {
                            "Arn": {
                                "description": "The ARN of the newly created conference provider.",
                                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                "type": "string"
                            },
                            "IPDialIn": {
                                "description": "The IP endpoint and protocol for calling.",
                                "properties": {
                                    "CommsProtocol": {
                                        "description": "The protocol, including SIP, SIPS, and H323.",
                                        "enum": [
                                            "SIP",
                                            "SIPS",
                                            "H323"
                                        ],
                                        "type": "string"
                                    },
                                    "Endpoint": {
                                        "description": "The IP address.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Endpoint",
                                    "CommsProtocol"
                                ],
                                "type": "object"
                            },
                            "MeetingSetting": {
                                "description": "The meeting settings for the conference provider.",
                                "properties": {
                                    "RequirePin": {
                                        "description": "The values that indicate whether the pin is always required.",
                                        "enum": [
                                            "YES",
                                            "NO",
                                            "OPTIONAL"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "RequirePin"
                                ],
                                "type": "object"
                            },
                            "Name": {
                                "description": "The name of the conference provider.",
                                "maxLength": 50,
                                "minLength": 1,
                                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                "type": "string"
                            },
                            "PSTNDialIn": {
                                "description": "The information for PSTN conferencing.",
                                "properties": {
                                    "CountryCode": {
                                        "description": "The zip code.",
                                        "pattern": "\\d{1,3}",
                                        "type": "string"
                                    },
                                    "OneClickIdDelay": {
                                        "description": "The delay duration before Alexa enters the conference ID with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.",
                                        "maxLength": 2,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "OneClickPinDelay": {
                                        "description": "The delay duration before Alexa enters the conference pin with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.",
                                        "maxLength": 2,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "PhoneNumber": {
                                        "description": "The phone number to call to join the conference.",
                                        "pattern": "\\d{10}",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "CountryCode",
                                    "PhoneNumber",
                                    "OneClickIdDelay",
                                    "OneClickPinDelay"
                                ],
                                "type": "object"
                            },
                            "Type": {
                                "description": "The type of conference providers.",
                                "enum": [
                                    "CHIME",
                                    "BLUEJEANS",
                                    "FUZE",
                                    "GOOGLE_HANGOUTS",
                                    "POLYCOM",
                                    "RINGCENTRAL",
                                    "SKYPE_FOR_BUSINESS",
                                    "WEBEX",
                                    "ZOOM",
                                    "CUSTOM"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetContactRequest": {
                "properties": {
                    "ContactArn": {
                        "description": "The ARN of the contact for which to request details.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "required": [
                    "ContactArn"
                ],
                "type": "object"
            },
            "GetContactResponse": {
                "properties": {
                    "Contact": {
                        "description": "The details of the requested contact.",
                        "properties": {
                            "ContactArn": {
                                "description": "The ARN of the contact.",
                                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                "type": "string"
                            },
                            "DisplayName": {
                                "description": "The name of the contact to display on the console.",
                                "maxLength": 100,
                                "minLength": 1,
                                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                "type": "string"
                            },
                            "FirstName": {
                                "description": "The first name of the contact, used to call the contact on the device.",
                                "maxLength": 100,
                                "minLength": 1,
                                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                "type": "string"
                            },
                            "LastName": {
                                "description": "The last name of the contact, used to call the contact on the device.",
                                "maxLength": 100,
                                "minLength": 1,
                                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                "type": "string"
                            },
                            "PhoneNumber": {
                                "description": "The phone number of the contact.",
                                "format": "password",
                                "pattern": "^\\+\\d{8,}$",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetDeviceRequest": {
                "properties": {
                    "DeviceArn": {
                        "description": "The ARN of the device for which to request details. Required.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GetDeviceResponse": {
                "properties": {
                    "Device": {
                        "description": "The details of the device requested. Required.",
                        "properties": {
                            "DeviceArn": {
                                "description": "The ARN of a device.",
                                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                "type": "string"
                            },
                            "DeviceName": {
                                "description": "The name of a device.",
                                "maxLength": 100,
                                "minLength": 2,
                                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                "type": "string"
                            },
                            "DeviceSerialNumber": {
                                "description": "The serial number of a device.",
                                "pattern": "[a-zA-Z0-9]{1,200}",
                                "type": "string"
                            },
                            "DeviceStatus": {
                                "description": "The status of a device. If the status is not READY, check the DeviceStatusInfo value for details.",
                                "enum": [
                                    "READY",
                                    "PENDING",
                                    "WAS_OFFLINE",
                                    "DEREGISTERED"
                                ],
                                "type": "string"
                            },
                            "DeviceStatusInfo": {
                                "description": "Detailed information about a device's status.",
                                "properties": {
                                    "ConnectionStatus": {
                                        "description": "The latest available information about the connection status of a device. ",
                                        "enum": [
                                            "ONLINE",
                                            "OFFLINE"
                                        ],
                                        "type": "string"
                                    },
                                    "DeviceStatusDetails": {
                                        "description": "One or more device status detail descriptions.",
                                        "items": {
                                            "description": "Details of a device’s status.",
                                            "properties": {
                                                "Code": {
                                                    "description": "The device status detail code.",
                                                    "enum": [
                                                        "DEVICE_SOFTWARE_UPDATE_NEEDED",
                                                        "DEVICE_WAS_OFFLINE"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "DeviceType": {
                                "description": "The type of a device.",
                                "pattern": "[a-zA-Z0-9]{1,200}",
                                "type": "string"
                            },
                            "MacAddress": {
                                "description": "The MAC address of a device.",
                                "type": "string"
                            },
                            "RoomArn": {
                                "description": "The room ARN of a device.",
                                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                "type": "string"
                            },
                            "SoftwareVersion": {
                                "description": "The software version of a device.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetInvitationConfigurationRequest": {
                "properties": {},
                "type": "object"
            },
            "GetInvitationConfigurationResponse": {
                "properties": {
                    "ContactEmail": {
                        "description": "The email ID of the organization or individual contact that the enrolled user can use. ",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                        "type": "string"
                    },
                    "OrganizationName": {
                        "description": "The name of the organization sending the enrollment invite to a user.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
                        "type": "string"
                    },
                    "PrivateSkillIds": {
                        "description": "The list of private skill IDs that you want to recommend to the user to enable in the invitation.",
                        "items": {
                            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                            "type": "string"
                        },
                        "maxItems": 3,
                        "minItems": 0,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "GetProfileRequest": {
                "properties": {
                    "ProfileArn": {
                        "description": "The ARN of the room profile for which to request details. Required.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GetProfileResponse": {
                "properties": {
                    "Profile": {
                        "description": "The details of the room profile requested. Required.",
                        "properties": {
                            "Address": {
                                "description": "The address of a room profile.",
                                "maxLength": 500,
                                "minLength": 1,
                                "type": "string"
                            },
                            "AddressBookArn": {
                                "description": "The ARN of the address book.",
                                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                "type": "string"
                            },
                            "DistanceUnit": {
                                "description": "The distance unit of a room profile.",
                                "enum": [
                                    "METRIC",
                                    "IMPERIAL"
                                ],
                                "type": "string"
                            },
                            "IsDefault": {
                                "description": "Retrieves if the profile is default or not.",
                                "type": "boolean"
                            },
                            "MaxVolumeLimit": {
                                "description": "The max volume limit of a room profile.",
                                "type": "integer"
                            },
                            "PSTNEnabled": {
                                "description": "The PSTN setting of a room profile.",
                                "type": "boolean"
                            },
                            "ProfileArn": {
                                "description": "The ARN of a room profile.",
                                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                "type": "string"
                            },
                            "ProfileName": {
                                "description": "The name of a room profile.",
                                "maxLength": 100,
                                "minLength": 1,
                                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                "type": "string"
                            },
                            "SetupModeDisabled": {
                                "description": "The setup mode of a room profile.",
                                "type": "boolean"
                            },
                            "TemperatureUnit": {
                                "description": "The temperature unit of a room profile.",
                                "enum": [
                                    "FAHRENHEIT",
                                    "CELSIUS"
                                ],
                                "type": "string"
                            },
                            "Timezone": {
                                "description": "The time zone of a room profile.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "WakeWord": {
                                "description": "The wake word of a room profile.",
                                "enum": [
                                    "ALEXA",
                                    "AMAZON",
                                    "ECHO",
                                    "COMPUTER"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetRoomRequest": {
                "properties": {
                    "RoomArn": {
                        "description": "The ARN of the room for which to request details. Required.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GetRoomResponse": {
                "properties": {
                    "Room": {
                        "description": "The details of the room requested.",
                        "properties": {
                            "Description": {
                                "description": "The description of a room.",
                                "maxLength": 200,
                                "minLength": 1,
                                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                "type": "string"
                            },
                            "ProfileArn": {
                                "description": "The profile ARN of a room.",
                                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                "type": "string"
                            },
                            "ProviderCalendarId": {
                                "description": "The provider calendar ARN of a room.",
                                "maxLength": 100,
                                "minLength": 0,
                                "type": "string"
                            },
                            "RoomArn": {
                                "description": "The ARN of a room.",
                                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                "type": "string"
                            },
                            "RoomName": {
                                "description": "The name of a room.",
                                "maxLength": 100,
                                "minLength": 1,
                                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetRoomSkillParameterRequest": {
                "properties": {
                    "ParameterKey": {
                        "description": "The room skill parameter key for which to get details. Required.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "RoomArn": {
                        "description": "The ARN of the room from which to get the room skill parameter details. ",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "SkillId": {
                        "description": "The ARN of the skill from which to get the room skill parameter details. Required.",
                        "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                        "type": "string"
                    }
                },
                "required": [
                    "SkillId",
                    "ParameterKey"
                ],
                "type": "object"
            },
            "GetRoomSkillParameterResponse": {
                "properties": {
                    "RoomSkillParameter": {
                        "description": "The details of the room skill parameter requested. Required.",
                        "properties": {
                            "ParameterKey": {
                                "description": "The parameter key of a room skill parameter. ParameterKey is an enumerated type that only takes “DEFAULT” or “SCOPE” as valid values.",
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            },
                            "ParameterValue": {
                                "description": "The parameter value of a room skill parameter.",
                                "maxLength": 512,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "required": [
                            "ParameterKey",
                            "ParameterValue"
                        ],
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetSkillGroupRequest": {
                "properties": {
                    "SkillGroupArn": {
                        "description": "The ARN of the skill group for which to get details. Required.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GetSkillGroupResponse": {
                "properties": {
                    "SkillGroup": {
                        "description": "The details of the skill group requested. Required.",
                        "properties": {
                            "Description": {
                                "description": "The description of a skill group.",
                                "maxLength": 200,
                                "minLength": 1,
                                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                "type": "string"
                            },
                            "SkillGroupArn": {
                                "description": "The ARN of a skill group.",
                                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                "type": "string"
                            },
                            "SkillGroupName": {
                                "description": "The name of a skill group.",
                                "maxLength": 100,
                                "minLength": 1,
                                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "IPDialIn": {
                "description": "The IP endpoint and protocol for calling.",
                "properties": {
                    "CommsProtocol": {
                        "description": "The protocol, including SIP, SIPS, and H323.",
                        "enum": [
                            "SIP",
                            "SIPS",
                            "H323"
                        ],
                        "type": "string"
                    },
                    "Endpoint": {
                        "description": "The IP address.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "Endpoint",
                    "CommsProtocol"
                ],
                "type": "object"
            },
            "IconUrl": {
                "type": "string"
            },
            "InvalidCertificateAuthorityException": {},
            "InvalidDeviceException": {},
            "InvalidUserStatusException": {},
            "InvocationPhrase": {
                "type": "string"
            },
            "Key": {
                "minLength": 1,
                "type": "string"
            },
            "LimitExceededException": {},
            "ListBusinessReportSchedulesRequest": {
                "properties": {
                    "MaxResults": {
                        "description": "The maximum number of schedules listed in the call.",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The token used to list the remaining schedules from the previous API call.",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListBusinessReportSchedulesResponse": {
                "properties": {
                    "BusinessReportSchedules": {
                        "description": "The schedule of the reports.",
                        "items": {
                            "description": "The schedule of the usage report.",
                            "properties": {
                                "ContentRange": {
                                    "description": "The content range of the reports.",
                                    "properties": {
                                        "Interval": {
                                            "description": "The interval of the content range.",
                                            "enum": [
                                                "ONE_DAY",
                                                "ONE_WEEK"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Format": {
                                    "description": "The format of the generated report (individual CSV files or zipped files of individual files).",
                                    "enum": [
                                        "CSV",
                                        "CSV_ZIP"
                                    ],
                                    "type": "string"
                                },
                                "LastBusinessReport": {
                                    "description": "The details of the last business report delivery for a specified time interval.",
                                    "properties": {
                                        "DeliveryTime": {
                                            "description": "The time of report delivery.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "DownloadUrl": {
                                            "description": "The download link where a user can download the report.",
                                            "type": "string"
                                        },
                                        "FailureCode": {
                                            "description": "The failure code.",
                                            "enum": [
                                                "ACCESS_DENIED",
                                                "NO_SUCH_BUCKET",
                                                "INTERNAL_FAILURE"
                                            ],
                                            "type": "string"
                                        },
                                        "S3Location": {
                                            "description": "The S3 location of the output reports.",
                                            "properties": {
                                                "BucketName": {
                                                    "description": "The S3 bucket name of the output reports.",
                                                    "pattern": "[a-z0-9-\\.]{3,63}",
                                                    "type": "string"
                                                },
                                                "Path": {
                                                    "description": "The path of the business report.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "Status": {
                                            "description": "The status of the report generation execution (RUNNING, SUCCEEDED, or FAILED).",
                                            "enum": [
                                                "RUNNING",
                                                "SUCCEEDED",
                                                "FAILED"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Recurrence": {
                                    "description": "The recurrence of the reports.",
                                    "properties": {
                                        "StartDate": {
                                            "description": "The start date.",
                                            "pattern": "^\\d{4}\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01])$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "S3BucketName": {
                                    "description": "The S3 bucket name of the output reports.",
                                    "pattern": "[a-z0-9-\\.]{3,63}",
                                    "type": "string"
                                },
                                "S3KeyPrefix": {
                                    "description": "The S3 key where the report is delivered.",
                                    "maxLength": 100,
                                    "minLength": 0,
                                    "pattern": "[A-Za-z0-9!_\\-\\.\\*'()/]*",
                                    "type": "string"
                                },
                                "ScheduleArn": {
                                    "description": "The ARN of the business report schedule.",
                                    "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                    "type": "string"
                                },
                                "ScheduleName": {
                                    "description": "The name identifier of the schedule.",
                                    "maxLength": 64,
                                    "minLength": 0,
                                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "The token used to list the remaining schedules from the previous API call.",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListConferenceProvidersRequest": {
                "properties": {
                    "MaxResults": {
                        "description": "The maximum number of conference providers to be returned, per paginated calls.",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The tokens used for pagination.",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListConferenceProvidersResponse": {
                "properties": {
                    "ConferenceProviders": {
                        "description": "The conference providers.",
                        "items": {
                            "description": "An entity that provides a conferencing solution. Alexa for Business acts as the voice interface and mediator that connects users to their preferred conference provider. Examples of conference providers include Amazon Chime, Zoom, Cisco, and Polycom. ",
                            "properties": {
                                "Arn": {
                                    "description": "The ARN of the newly created conference provider.",
                                    "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                    "type": "string"
                                },
                                "IPDialIn": {
                                    "description": "The IP endpoint and protocol for calling.",
                                    "properties": {
                                        "CommsProtocol": {
                                            "description": "The protocol, including SIP, SIPS, and H323.",
                                            "enum": [
                                                "SIP",
                                                "SIPS",
                                                "H323"
                                            ],
                                            "type": "string"
                                        },
                                        "Endpoint": {
                                            "description": "The IP address.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Endpoint",
                                        "CommsProtocol"
                                    ],
                                    "type": "object"
                                },
                                "MeetingSetting": {
                                    "description": "The meeting settings for the conference provider.",
                                    "properties": {
                                        "RequirePin": {
                                            "description": "The values that indicate whether the pin is always required.",
                                            "enum": [
                                                "YES",
                                                "NO",
                                                "OPTIONAL"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "RequirePin"
                                    ],
                                    "type": "object"
                                },
                                "Name": {
                                    "description": "The name of the conference provider.",
                                    "maxLength": 50,
                                    "minLength": 1,
                                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                    "type": "string"
                                },
                                "PSTNDialIn": {
                                    "description": "The information for PSTN conferencing.",
                                    "properties": {
                                        "CountryCode": {
                                            "description": "The zip code.",
                                            "pattern": "\\d{1,3}",
                                            "type": "string"
                                        },
                                        "OneClickIdDelay": {
                                            "description": "The delay duration before Alexa enters the conference ID with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.",
                                            "maxLength": 2,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "OneClickPinDelay": {
                                            "description": "The delay duration before Alexa enters the conference pin with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.",
                                            "maxLength": 2,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "PhoneNumber": {
                                            "description": "The phone number to call to join the conference.",
                                            "pattern": "\\d{10}",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "CountryCode",
                                        "PhoneNumber",
                                        "OneClickIdDelay",
                                        "OneClickPinDelay"
                                    ],
                                    "type": "object"
                                },
                                "Type": {
                                    "description": "The type of conference providers.",
                                    "enum": [
                                        "CHIME",
                                        "BLUEJEANS",
                                        "FUZE",
                                        "GOOGLE_HANGOUTS",
                                        "POLYCOM",
                                        "RINGCENTRAL",
                                        "SKYPE_FOR_BUSINESS",
                                        "WEBEX",
                                        "ZOOM",
                                        "CUSTOM"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "The tokens used for pagination.",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListDeviceEventsRequest": {
                "properties": {
                    "DeviceArn": {
                        "description": "The ARN of a device.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "EventType": {
                        "description": "The event type to filter device events. If EventType isn't specified, this returns a list of all device events in reverse chronological order. If EventType is specified, this returns a list of device events for that EventType in reverse chronological order. ",
                        "enum": [
                            "CONNECTION_STATUS",
                            "DEVICE_STATUS"
                        ],
                        "type": "string"
                    },
                    "MaxResults": {
                        "description": "The maximum number of results to include in the response. The default value is 50. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved. ",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response only includes results beyond the token, up to the value specified by MaxResults. When the end of results is reached, the response has a value of null.",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "DeviceArn"
                ],
                "type": "object"
            },
            "ListDeviceEventsResponse": {
                "properties": {
                    "DeviceEvents": {
                        "description": "The device events requested for the device ARN.",
                        "items": {
                            "description": "The list of device events.",
                            "properties": {
                                "Timestamp": {
                                    "description": "The time (in epoch) when the event occurred. ",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Type": {
                                    "description": "The type of device event.",
                                    "enum": [
                                        "CONNECTION_STATUS",
                                        "DEVICE_STATUS"
                                    ],
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The value of the event.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "The token returned to indicate that there is more data available.",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListSkillsRequest": {
                "properties": {
                    "EnablementType": {
                        "description": "Whether the skill is enabled under the user's account, or if it requires linking to be used.",
                        "enum": [
                            "ENABLED",
                            "PENDING"
                        ],
                        "type": "string"
                    },
                    "MaxResults": {
                        "description": "The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved. Required.",
                        "maximum": 10,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>. Required.",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string"
                    },
                    "SkillGroupArn": {
                        "description": "The ARN of the skill group for which to list enabled skills. Required.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "SkillType": {
                        "description": "Whether the skill is publicly available or is a private skill.",
                        "enum": [
                            "PUBLIC",
                            "PRIVATE",
                            "ALL"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListSkillsResponse": {
                "properties": {
                    "NextToken": {
                        "description": "The token returned to indicate that there is more data available.",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string"
                    },
                    "SkillSummaries": {
                        "description": "The list of enabled skills requested. Required.",
                        "items": {
                            "description": "The summary of skills.",
                            "properties": {
                                "EnablementType": {
                                    "description": "Whether the skill is enabled under the user's account, or if it requires linking to be used.",
                                    "enum": [
                                        "ENABLED",
                                        "PENDING"
                                    ],
                                    "type": "string"
                                },
                                "SkillId": {
                                    "description": "The ARN of the skill summary.",
                                    "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                                    "type": "string"
                                },
                                "SkillName": {
                                    "description": "The name of the skill.",
                                    "maxLength": 100,
                                    "minLength": 1,
                                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                    "type": "string"
                                },
                                "SkillType": {
                                    "description": "Whether the skill is publicly available or is a private skill.",
                                    "enum": [
                                        "PUBLIC",
                                        "PRIVATE"
                                    ],
                                    "maxLength": 100,
                                    "minLength": 1,
                                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
                                    "type": "string"
                                },
                                "SupportsLinking": {
                                    "description": "Linking support for a skill.",
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ListSkillsStoreCategoriesRequest": {
                "properties": {
                    "MaxResults": {
                        "description": "The maximum number of categories returned, per paginated calls.",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The tokens used for pagination.",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListSkillsStoreCategoriesResponse": {
                "properties": {
                    "CategoryList": {
                        "description": "The list of categories.",
                        "items": {
                            "description": "The skill store category that is shown. Alexa skills are assigned a specific skill category during creation, such as News, Social, and Sports.",
                            "properties": {
                                "CategoryId": {
                                    "description": "The ID of the skill store category.",
                                    "minimum": 1,
                                    "type": "integer"
                                },
                                "CategoryName": {
                                    "description": "The name of the skill store category.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "The tokens used for pagination.",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListSkillsStoreSkillsByCategoryRequest": {
                "properties": {
                    "CategoryId": {
                        "description": "The category ID for which the skills are being retrieved from the skill store.",
                        "minimum": 1,
                        "type": "integer"
                    },
                    "MaxResults": {
                        "description": "The maximum number of skills returned per paginated calls.",
                        "maximum": 10,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The tokens used for pagination.",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "CategoryId"
                ],
                "type": "object"
            },
            "ListSkillsStoreSkillsByCategoryResponse": {
                "properties": {
                    "NextToken": {
                        "description": "The tokens used for pagination.",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string"
                    },
                    "SkillsStoreSkills": {
                        "description": "The skill store skills.",
                        "items": {
                            "description": "The detailed information about an Alexa skill.",
                            "properties": {
                                "IconUrl": {
                                    "description": "The URL where the skill icon resides.",
                                    "type": "string"
                                },
                                "SampleUtterances": {
                                    "description": "Sample utterances that interact with the skill.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "ShortDescription": {
                                    "description": "Short description about the skill.",
                                    "type": "string"
                                },
                                "SkillDetails": {
                                    "description": "Information about the skill.",
                                    "properties": {
                                        "BulletPoints": {
                                            "description": "The details about what the skill supports organized as bullet points.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "DeveloperInfo": {
                                            "description": "The details about the developer that published the skill.",
                                            "properties": {
                                                "DeveloperName": {
                                                    "description": "The name of the developer.",
                                                    "type": "string"
                                                },
                                                "Email": {
                                                    "description": "The email of the developer.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                                                    "type": "string"
                                                },
                                                "PrivacyPolicy": {
                                                    "description": "The URL of the privacy policy.",
                                                    "type": "string"
                                                },
                                                "Url": {
                                                    "description": "The website of the developer.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "EndUserLicenseAgreement": {
                                            "description": "The URL of the end user license agreement.",
                                            "type": "string"
                                        },
                                        "GenericKeywords": {
                                            "description": "The generic keywords associated with the skill that can be used to find a skill.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "InvocationPhrase": {
                                            "description": "The phrase used to trigger the skill.",
                                            "type": "string"
                                        },
                                        "NewInThisVersionBulletPoints": {
                                            "description": "The updates added in bullet points.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "ProductDescription": {
                                            "description": "The description of the product.",
                                            "type": "string"
                                        },
                                        "ReleaseDate": {
                                            "description": "The date when the skill was released.",
                                            "type": "string"
                                        },
                                        "Reviews": {
                                            "description": "The list of reviews for the skill, including Key and Value pair.",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "SkillTypes": {
                                            "description": "The types of skills.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "SkillId": {
                                    "description": "The ARN of the skill.",
                                    "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                                    "type": "string"
                                },
                                "SkillName": {
                                    "description": "The name of the skill.",
                                    "maxLength": 100,
                                    "minLength": 1,
                                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                    "type": "string"
                                },
                                "SupportsLinking": {
                                    "description": "Linking support for a skill.",
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ListSmartHomeAppliancesRequest": {
                "properties": {
                    "MaxResults": {
                        "description": "The maximum number of appliances to be returned, per paginated calls.",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The tokens used for pagination.",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string"
                    },
                    "RoomArn": {
                        "description": "The room that the appliances are associated with.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "required": [
                    "RoomArn"
                ],
                "type": "object"
            },
            "ListSmartHomeAppliancesResponse": {
                "properties": {
                    "NextToken": {
                        "description": "The tokens used for pagination.",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string"
                    },
                    "SmartHomeAppliances": {
                        "description": "The smart home appliances.",
                        "items": {
                            "description": "A smart home appliance that can connect to a central system. Any domestic device can be a smart appliance. ",
                            "properties": {
                                "Description": {
                                    "description": "The description of the smart home appliance.",
                                    "type": "string"
                                },
                                "FriendlyName": {
                                    "description": "The friendly name of the smart home appliance.",
                                    "type": "string"
                                },
                                "ManufacturerName": {
                                    "description": "The name of the manufacturer of the smart home appliance.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ListTagsRequest": {
                "properties": {
                    "Arn": {
                        "description": "The ARN of the specified resource for which to list tags.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "MaxResults": {
                        "description": "The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>. ",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "Arn"
                ],
                "type": "object"
            },
            "ListTagsResponse": {
                "properties": {
                    "NextToken": {
                        "description": "The token returned to indicate that there is more data available.",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Tags": {
                        "description": "The tags requested for the specified resource.",
                        "items": {
                            "description": "A key-value pair that can be associated with a resource. ",
                            "properties": {
                                "Key": {
                                    "description": "The key of a tag. Tag keys are case-sensitive. ",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The value of a tag. Tag values are case-sensitive and can be null.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Key",
                                "Value"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "MacAddress": {
                "type": "string"
            },
            "MaxResults": {
                "maximum": 50,
                "minimum": 1,
                "type": "integer"
            },
            "MaxVolumeLimit": {
                "type": "integer"
            },
            "MeetingSetting": {
                "description": "<p>The values that indicate whether a pin is always required (YES), never required (NO), or OPTIONAL.</p> <ul> <li> <p>If YES, Alexa will always ask for a meeting pin.</p> </li> <li> <p>If NO, Alexa will never ask for a meeting pin.</p> </li> <li> <p>If OPTIONAL, Alexa will ask if you have a meeting pin and if the customer responds with yes, it will ask for the meeting pin.</p> </li> </ul>",
                "properties": {
                    "RequirePin": {
                        "description": "The values that indicate whether the pin is always required.",
                        "enum": [
                            "YES",
                            "NO",
                            "OPTIONAL"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "RequirePin"
                ],
                "type": "object"
            },
            "NameInUseException": {},
            "NewInThisVersionBulletPoints": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "NextToken": {
                "maxLength": 1000,
                "minLength": 1,
                "type": "string"
            },
            "NotFoundException": {},
            "OneClickIdDelay": {
                "maxLength": 2,
                "minLength": 1,
                "type": "string"
            },
            "OneClickPinDelay": {
                "maxLength": 2,
                "minLength": 1,
                "type": "string"
            },
            "OrganizationName": {
                "maxLength": 100,
                "minLength": 1,
                "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
                "type": "string"
            },
            "OutboundPhoneNumber": {
                "pattern": "\\d{10}",
                "type": "string"
            },
            "PSTNDialIn": {
                "description": "The information for public switched telephone network (PSTN) conferencing.",
                "properties": {
                    "CountryCode": {
                        "description": "The zip code.",
                        "pattern": "\\d{1,3}",
                        "type": "string"
                    },
                    "OneClickIdDelay": {
                        "description": "The delay duration before Alexa enters the conference ID with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.",
                        "maxLength": 2,
                        "minLength": 1,
                        "type": "string"
                    },
                    "OneClickPinDelay": {
                        "description": "The delay duration before Alexa enters the conference pin with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.",
                        "maxLength": 2,
                        "minLength": 1,
                        "type": "string"
                    },
                    "PhoneNumber": {
                        "description": "The phone number to call to join the conference.",
                        "pattern": "\\d{10}",
                        "type": "string"
                    }
                },
                "required": [
                    "CountryCode",
                    "PhoneNumber",
                    "OneClickIdDelay",
                    "OneClickPinDelay"
                ],
                "type": "object"
            },
            "PrivacyPolicy": {
                "type": "string"
            },
            "ProductDescription": {
                "type": "string"
            },
            "ProductId": {
                "pattern": "^[a-zA-Z0-9_]{1,256}$",
                "type": "string"
            },
            "Profile": {
                "description": "A room profile with attributes.",
                "properties": {
                    "Address": {
                        "description": "The address of a room profile.",
                        "maxLength": 500,
                        "minLength": 1,
                        "type": "string"
                    },
                    "AddressBookArn": {
                        "description": "The ARN of the address book.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "DistanceUnit": {
                        "description": "The distance unit of a room profile.",
                        "enum": [
                            "METRIC",
                            "IMPERIAL"
                        ],
                        "type": "string"
                    },
                    "IsDefault": {
                        "description": "Retrieves if the profile is default or not.",
                        "type": "boolean"
                    },
                    "MaxVolumeLimit": {
                        "description": "The max volume limit of a room profile.",
                        "type": "integer"
                    },
                    "PSTNEnabled": {
                        "description": "The PSTN setting of a room profile.",
                        "type": "boolean"
                    },
                    "ProfileArn": {
                        "description": "The ARN of a room profile.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "ProfileName": {
                        "description": "The name of a room profile.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "SetupModeDisabled": {
                        "description": "The setup mode of a room profile.",
                        "type": "boolean"
                    },
                    "TemperatureUnit": {
                        "description": "The temperature unit of a room profile.",
                        "enum": [
                            "FAHRENHEIT",
                            "CELSIUS"
                        ],
                        "type": "string"
                    },
                    "Timezone": {
                        "description": "The time zone of a room profile.",
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string"
                    },
                    "WakeWord": {
                        "description": "The wake word of a room profile.",
                        "enum": [
                            "ALEXA",
                            "AMAZON",
                            "ECHO",
                            "COMPUTER"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProfileData": {
                "description": "The data of a room profile.",
                "properties": {
                    "Address": {
                        "description": "The address of a room profile.",
                        "maxLength": 500,
                        "minLength": 1,
                        "type": "string"
                    },
                    "DistanceUnit": {
                        "description": "The distance unit of a room profile.",
                        "enum": [
                            "METRIC",
                            "IMPERIAL"
                        ],
                        "type": "string"
                    },
                    "IsDefault": {
                        "description": "Retrieves if the profile data is default or not.",
                        "type": "boolean"
                    },
                    "ProfileArn": {
                        "description": "The ARN of a room profile.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "ProfileName": {
                        "description": "The name of a room profile.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "TemperatureUnit": {
                        "description": "The temperature unit of a room profile.",
                        "enum": [
                            "FAHRENHEIT",
                            "CELSIUS"
                        ],
                        "type": "string"
                    },
                    "Timezone": {
                        "description": "The timezone of a room profile.",
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string"
                    },
                    "WakeWord": {
                        "description": "The wake word of a room profile.",
                        "enum": [
                            "ALEXA",
                            "AMAZON",
                            "ECHO",
                            "COMPUTER"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProfileDataList": {
                "items": {
                    "description": "The data of a room profile.",
                    "properties": {
                        "Address": {
                            "description": "The address of a room profile.",
                            "maxLength": 500,
                            "minLength": 1,
                            "type": "string"
                        },
                        "DistanceUnit": {
                            "description": "The distance unit of a room profile.",
                            "enum": [
                                "METRIC",
                                "IMPERIAL"
                            ],
                            "type": "string"
                        },
                        "IsDefault": {
                            "description": "Retrieves if the profile data is default or not.",
                            "type": "boolean"
                        },
                        "ProfileArn": {
                            "description": "The ARN of a room profile.",
                            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                            "type": "string"
                        },
                        "ProfileName": {
                            "description": "The name of a room profile.",
                            "maxLength": 100,
                            "minLength": 1,
                            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                            "type": "string"
                        },
                        "TemperatureUnit": {
                            "description": "The temperature unit of a room profile.",
                            "enum": [
                                "FAHRENHEIT",
                                "CELSIUS"
                            ],
                            "type": "string"
                        },
                        "Timezone": {
                            "description": "The timezone of a room profile.",
                            "maxLength": 100,
                            "minLength": 1,
                            "type": "string"
                        },
                        "WakeWord": {
                            "description": "The wake word of a room profile.",
                            "enum": [
                                "ALEXA",
                                "AMAZON",
                                "ECHO",
                                "COMPUTER"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "ProfileName": {
                "maxLength": 100,
                "minLength": 1,
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                "type": "string"
            },
            "ProviderCalendarId": {
                "maxLength": 100,
                "minLength": 0,
                "type": "string"
            },
            "PutConferencePreferenceRequest": {
                "properties": {
                    "ConferencePreference": {
                        "description": "The conference preference of a specific conference provider.",
                        "properties": {
                            "DefaultConferenceProviderArn": {
                                "description": "The ARN of the default conference provider.",
                                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "ConferencePreference"
                ],
                "type": "object"
            },
            "PutConferencePreferenceResponse": {
                "properties": {},
                "type": "object"
            },
            "PutInvitationConfigurationRequest": {
                "properties": {
                    "ContactEmail": {
                        "description": "The email ID of the organization or individual contact that the enrolled user can use. ",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                        "type": "string"
                    },
                    "OrganizationName": {
                        "description": "The name of the organization sending the enrollment invite to a user.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
                        "type": "string"
                    },
                    "PrivateSkillIds": {
                        "description": "The list of private skill IDs that you want to recommend to the user to enable in the invitation.",
                        "items": {
                            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                            "type": "string"
                        },
                        "maxItems": 3,
                        "minItems": 0,
                        "type": "array"
                    }
                },
                "required": [
                    "OrganizationName"
                ],
                "type": "object"
            },
            "PutInvitationConfigurationResponse": {
                "properties": {},
                "type": "object"
            },
            "PutRoomSkillParameterRequest": {
                "properties": {
                    "RoomArn": {
                        "description": "The ARN of the room associated with the room skill parameter. Required.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "RoomSkillParameter": {
                        "description": "The updated room skill parameter. Required.",
                        "properties": {
                            "ParameterKey": {
                                "description": "The parameter key of a room skill parameter. ParameterKey is an enumerated type that only takes “DEFAULT” or “SCOPE” as valid values.",
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            },
                            "ParameterValue": {
                                "description": "The parameter value of a room skill parameter.",
                                "maxLength": 512,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "required": [
                            "ParameterKey",
                            "ParameterValue"
                        ],
                        "type": "object"
                    },
                    "SkillId": {
                        "description": "The ARN of the skill associated with the room skill parameter. Required.",
                        "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                        "type": "string"
                    }
                },
                "required": [
                    "SkillId",
                    "RoomSkillParameter"
                ],
                "type": "object"
            },
            "PutRoomSkillParameterResponse": {
                "properties": {},
                "type": "object"
            },
            "PutSkillAuthorizationRequest": {
                "properties": {
                    "AuthorizationResult": {
                        "description": "The authorization result specific to OAUTH code grant output. \"Code” must be populated in the AuthorizationResult map to establish the authorization.",
                        "items": {
                            "properties": {
                                "key": {
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "value": {
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "RoomArn": {
                        "description": "The room that the skill is authorized for.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "SkillId": {
                        "description": "The unique identifier of a skill.",
                        "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                        "type": "string"
                    }
                },
                "required": [
                    "AuthorizationResult",
                    "SkillId"
                ],
                "type": "object"
            },
            "PutSkillAuthorizationResponse": {
                "properties": {},
                "type": "object"
            },
            "RegisterAVSDeviceRequest": {
                "properties": {
                    "AmazonId": {
                        "description": "The device type ID for your AVS device generated by Amazon when the OEM creates a new product on Amazon's Developer Console.",
                        "pattern": "[a-zA-Z0-9]{1,18}",
                        "type": "string"
                    },
                    "ClientId": {
                        "description": "The client ID of the OEM used for code-based linking authorization on an AVS device.",
                        "pattern": "^\\S\\+\\{1,256\\}$",
                        "type": "string"
                    },
                    "DeviceSerialNumber": {
                        "description": "The key generated by the OEM that uniquely identifies a specified instance of your AVS device.",
                        "pattern": "^[a-zA-Z0-9]{1,50}$",
                        "type": "string"
                    },
                    "ProductId": {
                        "description": "The product ID used to identify your AVS device during authorization.",
                        "pattern": "^[a-zA-Z0-9_]{1,256}$",
                        "type": "string"
                    },
                    "UserCode": {
                        "description": "The code that is obtained after your AVS device has made a POST request to LWA as a part of the Device Authorization Request component of the OAuth code-based linking specification.",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "ClientId",
                    "UserCode",
                    "ProductId",
                    "DeviceSerialNumber",
                    "AmazonId"
                ],
                "type": "object"
            },
            "RegisterAVSDeviceResponse": {
                "properties": {
                    "DeviceArn": {
                        "description": "The ARN of the device.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RejectSkillRequest": {
                "properties": {
                    "SkillId": {
                        "description": "The unique identifier of the skill.",
                        "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                        "type": "string"
                    }
                },
                "required": [
                    "SkillId"
                ],
                "type": "object"
            },
            "RejectSkillResponse": {
                "properties": {},
                "type": "object"
            },
            "ReleaseDate": {
                "type": "string"
            },
            "RequirePin": {
                "enum": [
                    "YES",
                    "NO",
                    "OPTIONAL"
                ],
                "type": "string"
            },
            "ResolveRoomRequest": {
                "properties": {
                    "SkillId": {
                        "description": "The ARN of the skill that was requested. Required.",
                        "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                        "type": "string"
                    },
                    "UserId": {
                        "description": "The ARN of the user. Required.",
                        "pattern": "amzn1\\.[A-Za-z0-9+-\\/=.]{1,300}",
                        "type": "string"
                    }
                },
                "required": [
                    "UserId",
                    "SkillId"
                ],
                "type": "object"
            },
            "ResolveRoomResponse": {
                "properties": {
                    "RoomArn": {
                        "description": "The ARN of the room from which the skill request was invoked.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "RoomName": {
                        "description": "The name of the room from which the skill request was invoked.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "RoomSkillParameters": {
                        "description": "Response to get the room profile request. Required.",
                        "items": {
                            "description": "A skill parameter associated with a room.",
                            "properties": {
                                "ParameterKey": {
                                    "description": "The parameter key of a room skill parameter. ParameterKey is an enumerated type that only takes “DEFAULT” or “SCOPE” as valid values.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "ParameterValue": {
                                    "description": "The parameter value of a room skill parameter.",
                                    "maxLength": 512,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "ParameterKey",
                                "ParameterValue"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ResourceInUseException": {},
            "ReviewKey": {
                "type": "string"
            },
            "ReviewValue": {
                "type": "string"
            },
            "Reviews": {
                "items": {
                    "properties": {
                        "key": {
                            "type": "string"
                        },
                        "value": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "RevokeInvitationRequest": {
                "properties": {
                    "EnrollmentId": {
                        "description": "The ARN of the enrollment invitation to revoke. Required.",
                        "maxLength": 128,
                        "minLength": 0,
                        "type": "string"
                    },
                    "UserArn": {
                        "description": "The ARN of the user for whom to revoke an enrollment invitation. Required.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RevokeInvitationResponse": {
                "properties": {},
                "type": "object"
            },
            "Room": {
                "description": "A room with attributes.",
                "properties": {
                    "Description": {
                        "description": "The description of a room.",
                        "maxLength": 200,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "ProfileArn": {
                        "description": "The profile ARN of a room.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "ProviderCalendarId": {
                        "description": "The provider calendar ARN of a room.",
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string"
                    },
                    "RoomArn": {
                        "description": "The ARN of a room.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "RoomName": {
                        "description": "The name of a room.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RoomData": {
                "description": "The data of a room.",
                "properties": {
                    "Description": {
                        "description": "The description of a room.",
                        "maxLength": 200,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "ProfileArn": {
                        "description": "The profile ARN of a room.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "ProfileName": {
                        "description": "The profile name of a room.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "ProviderCalendarId": {
                        "description": "The provider calendar ARN of a room.",
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string"
                    },
                    "RoomArn": {
                        "description": "The ARN of a room.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "RoomName": {
                        "description": "The name of a room.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RoomDataList": {
                "items": {
                    "description": "The data of a room.",
                    "properties": {
                        "Description": {
                            "description": "The description of a room.",
                            "maxLength": 200,
                            "minLength": 1,
                            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                            "type": "string"
                        },
                        "ProfileArn": {
                            "description": "The profile ARN of a room.",
                            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                            "type": "string"
                        },
                        "ProfileName": {
                            "description": "The profile name of a room.",
                            "maxLength": 100,
                            "minLength": 1,
                            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                            "type": "string"
                        },
                        "ProviderCalendarId": {
                            "description": "The provider calendar ARN of a room.",
                            "maxLength": 100,
                            "minLength": 0,
                            "type": "string"
                        },
                        "RoomArn": {
                            "description": "The ARN of a room.",
                            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                            "type": "string"
                        },
                        "RoomName": {
                            "description": "The name of a room.",
                            "maxLength": 100,
                            "minLength": 1,
                            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "RoomDescription": {
                "maxLength": 200,
                "minLength": 1,
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                "type": "string"
            },
            "RoomName": {
                "maxLength": 100,
                "minLength": 1,
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                "type": "string"
            },
            "RoomSkillParameter": {
                "description": "A skill parameter associated with a room.",
                "properties": {
                    "ParameterKey": {
                        "description": "The parameter key of a room skill parameter. ParameterKey is an enumerated type that only takes “DEFAULT” or “SCOPE” as valid values.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "ParameterValue": {
                        "description": "The parameter value of a room skill parameter.",
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "ParameterKey",
                    "ParameterValue"
                ],
                "type": "object"
            },
            "RoomSkillParameterKey": {
                "maxLength": 256,
                "minLength": 1,
                "type": "string"
            },
            "RoomSkillParameterValue": {
                "maxLength": 512,
                "minLength": 1,
                "type": "string"
            },
            "RoomSkillParameters": {
                "items": {
                    "description": "A skill parameter associated with a room.",
                    "properties": {
                        "ParameterKey": {
                            "description": "The parameter key of a room skill parameter. ParameterKey is an enumerated type that only takes “DEFAULT” or “SCOPE” as valid values.",
                            "maxLength": 256,
                            "minLength": 1,
                            "type": "string"
                        },
                        "ParameterValue": {
                            "description": "The parameter value of a room skill parameter.",
                            "maxLength": 512,
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    "required": [
                        "ParameterKey",
                        "ParameterValue"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "S3KeyPrefix": {
                "maxLength": 100,
                "minLength": 0,
                "pattern": "[A-Za-z0-9!_\\-\\.\\*'()/]*",
                "type": "string"
            },
            "SampleUtterances": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "SearchAddressBooksRequest": {
                "properties": {
                    "Filters": {
                        "description": "The filters to use to list a specified set of address books. The supported filter key is AddressBookName.",
                        "items": {
                            "description": "A filter name and value pair that is used to return a more specific list of results. Filters can be used to match a set of resources by various criteria.",
                            "properties": {
                                "Key": {
                                    "description": "The key of a filter.",
                                    "maxLength": 500,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The values of a filter.",
                                    "items": {
                                        "maxLength": 500,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "maxItems": 5,
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Key",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "maxItems": 25,
                        "type": "array"
                    },
                    "MaxResults": {
                        "description": "The maximum number of results to include in the response. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response only includes results beyond the token, up to the value specified by MaxResults.",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string"
                    },
                    "SortCriteria": {
                        "description": "The sort order to use in listing the specified set of address books. The supported sort key is AddressBookName.",
                        "items": {
                            "description": "An object representing a sort criteria. ",
                            "properties": {
                                "Key": {
                                    "description": "The sort key of a sort object.",
                                    "maxLength": 500,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The sort value of a sort object.",
                                    "enum": [
                                        "ASC",
                                        "DESC"
                                    ],
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Key",
                                "Value"
                            ],
                            "type": "object"
                        },
                        "maxItems": 25,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "SearchAddressBooksResponse": {
                "properties": {
                    "AddressBooks": {
                        "description": "The address books that meet the specified set of filter criteria, in sort order.",
                        "items": {
                            "description": "Information related to an address book.",
                            "properties": {
                                "AddressBookArn": {
                                    "description": "The ARN of the address book.",
                                    "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                    "type": "string"
                                },
                                "Description": {
                                    "description": "The description of the address book.",
                                    "maxLength": 200,
                                    "minLength": 1,
                                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name of the address book.",
                                    "maxLength": 100,
                                    "minLength": 1,
                                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "The token returned to indicate that there is more data available.",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string"
                    },
                    "TotalCount": {
                        "description": "The total number of address books returned.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SearchContactsRequest": {
                "properties": {
                    "Filters": {
                        "description": "The filters to use to list a specified set of address books. The supported filter keys are DisplayName, FirstName, LastName, and AddressBookArns.",
                        "items": {
                            "description": "A filter name and value pair that is used to return a more specific list of results. Filters can be used to match a set of resources by various criteria.",
                            "properties": {
                                "Key": {
                                    "description": "The key of a filter.",
                                    "maxLength": 500,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The values of a filter.",
                                    "items": {
                                        "maxLength": 500,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "maxItems": 5,
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Key",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "maxItems": 25,
                        "type": "array"
                    },
                    "MaxResults": {
                        "description": "The maximum number of results to include in the response. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response only includes results beyond the token, up to the value specified by MaxResults.",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string"
                    },
                    "SortCriteria": {
                        "description": "The sort order to use in listing the specified set of contacts. The supported sort keys are DisplayName, FirstName, and LastName.",
                        "items": {
                            "description": "An object representing a sort criteria. ",
                            "properties": {
                                "Key": {
                                    "description": "The sort key of a sort object.",
                                    "maxLength": 500,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The sort value of a sort object.",
                                    "enum": [
                                        "ASC",
                                        "DESC"
                                    ],
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Key",
                                "Value"
                            ],
                            "type": "object"
                        },
                        "maxItems": 25,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "SearchContactsResponse": {
                "properties": {
                    "Contacts": {
                        "description": "The contacts that meet the specified set of filter criteria, in sort order.",
                        "items": {
                            "description": "Information related to a contact.",
                            "properties": {
                                "ContactArn": {
                                    "description": "The ARN of the contact.",
                                    "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                    "type": "string"
                                },
                                "DisplayName": {
                                    "description": "The name of the contact to display on the console.",
                                    "maxLength": 100,
                                    "minLength": 1,
                                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                    "type": "string"
                                },
                                "FirstName": {
                                    "description": "The first name of the contact, used to call the contact on the device.",
                                    "maxLength": 100,
                                    "minLength": 1,
                                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                    "type": "string"
                                },
                                "LastName": {
                                    "description": "The last name of the contact, used to call the contact on the device.",
                                    "maxLength": 100,
                                    "minLength": 1,
                                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                    "type": "string"
                                },
                                "PhoneNumber": {
                                    "description": "The phone number of the contact.",
                                    "format": "password",
                                    "pattern": "^\\+\\d{8,}$",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "The token returned to indicate that there is more data available.",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string"
                    },
                    "TotalCount": {
                        "description": "The total number of contacts returned.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SearchDevicesRequest": {
                "properties": {
                    "Filters": {
                        "description": "The filters to use to list a specified set of devices. Supported filter keys are DeviceName, DeviceStatus, DeviceStatusDetailCode, RoomName, DeviceType, DeviceSerialNumber, UnassociatedOnly, and ConnectionStatus (ONLINE and OFFLINE).",
                        "items": {
                            "description": "A filter name and value pair that is used to return a more specific list of results. Filters can be used to match a set of resources by various criteria.",
                            "properties": {
                                "Key": {
                                    "description": "The key of a filter.",
                                    "maxLength": 500,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The values of a filter.",
                                    "items": {
                                        "maxLength": 500,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "maxItems": 5,
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Key",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "maxItems": 25,
                        "type": "array"
                    },
                    "MaxResults": {
                        "description": "The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>.",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string"
                    },
                    "SortCriteria": {
                        "description": "The sort order to use in listing the specified set of devices. Supported sort keys are DeviceName, DeviceStatus, RoomName, DeviceType, DeviceSerialNumber, and ConnectionStatus.",
                        "items": {
                            "description": "An object representing a sort criteria. ",
                            "properties": {
                                "Key": {
                                    "description": "The sort key of a sort object.",
                                    "maxLength": 500,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The sort value of a sort object.",
                                    "enum": [
                                        "ASC",
                                        "DESC"
                                    ],
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Key",
                                "Value"
                            ],
                            "type": "object"
                        },
                        "maxItems": 25,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "SearchDevicesResponse": {
                "properties": {
                    "Devices": {
                        "description": "The devices that meet the specified set of filter criteria, in sort order.",
                        "items": {
                            "description": "Device attributes.",
                            "properties": {
                                "DeviceArn": {
                                    "description": "The ARN of a device.",
                                    "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                    "type": "string"
                                },
                                "DeviceName": {
                                    "description": "The name of a device.",
                                    "maxLength": 100,
                                    "minLength": 2,
                                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                    "type": "string"
                                },
                                "DeviceSerialNumber": {
                                    "description": "The serial number of a device.",
                                    "pattern": "[a-zA-Z0-9]{1,200}",
                                    "type": "string"
                                },
                                "DeviceStatus": {
                                    "description": "The status of a device.",
                                    "enum": [
                                        "READY",
                                        "PENDING",
                                        "WAS_OFFLINE",
                                        "DEREGISTERED"
                                    ],
                                    "type": "string"
                                },
                                "DeviceStatusInfo": {
                                    "description": "Detailed information about a device's status.",
                                    "properties": {
                                        "ConnectionStatus": {
                                            "description": "The latest available information about the connection status of a device. ",
                                            "enum": [
                                                "ONLINE",
                                                "OFFLINE"
                                            ],
                                            "type": "string"
                                        },
                                        "DeviceStatusDetails": {
                                            "description": "One or more device status detail descriptions.",
                                            "items": {
                                                "description": "Details of a device’s status.",
                                                "properties": {
                                                    "Code": {
                                                        "description": "The device status detail code.",
                                                        "enum": [
                                                            "DEVICE_SOFTWARE_UPDATE_NEEDED",
                                                            "DEVICE_WAS_OFFLINE"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "DeviceType": {
                                    "description": "The type of a device.",
                                    "pattern": "[a-zA-Z0-9]{1,200}",
                                    "type": "string"
                                },
                                "MacAddress": {
                                    "description": "The MAC address of a device.",
                                    "type": "string"
                                },
                                "RoomArn": {
                                    "description": "The room ARN associated with a device.",
                                    "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                    "type": "string"
                                },
                                "RoomName": {
                                    "description": "The name of the room associated with a device.",
                                    "maxLength": 100,
                                    "minLength": 1,
                                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                    "type": "string"
                                },
                                "SoftwareVersion": {
                                    "description": "The software version of a device.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "The token returned to indicate that there is more data available.",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string"
                    },
                    "TotalCount": {
                        "description": "The total number of devices returned.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SearchProfilesRequest": {
                "properties": {
                    "Filters": {
                        "description": "The filters to use to list a specified set of room profiles. Supported filter keys are ProfileName and Address. Required. ",
                        "items": {
                            "description": "A filter name and value pair that is used to return a more specific list of results. Filters can be used to match a set of resources by various criteria.",
                            "properties": {
                                "Key": {
                                    "description": "The key of a filter.",
                                    "maxLength": 500,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The values of a filter.",
                                    "items": {
                                        "maxLength": 500,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "maxItems": 5,
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Key",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "maxItems": 25,
                        "type": "array"
                    },
                    "MaxResults": {
                        "description": "The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>.",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string"
                    },
                    "SortCriteria": {
                        "description": "The sort order to use in listing the specified set of room profiles. Supported sort keys are ProfileName and Address.",
                        "items": {
                            "description": "An object representing a sort criteria. ",
                            "properties": {
                                "Key": {
                                    "description": "The sort key of a sort object.",
                                    "maxLength": 500,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The sort value of a sort object.",
                                    "enum": [
                                        "ASC",
                                        "DESC"
                                    ],
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Key",
                                "Value"
                            ],
                            "type": "object"
                        },
                        "maxItems": 25,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "SearchProfilesResponse": {
                "properties": {
                    "NextToken": {
                        "description": "The token returned to indicate that there is more data available.",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Profiles": {
                        "description": "The profiles that meet the specified set of filter criteria, in sort order.",
                        "items": {
                            "description": "The data of a room profile.",
                            "properties": {
                                "Address": {
                                    "description": "The address of a room profile.",
                                    "maxLength": 500,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "DistanceUnit": {
                                    "description": "The distance unit of a room profile.",
                                    "enum": [
                                        "METRIC",
                                        "IMPERIAL"
                                    ],
                                    "type": "string"
                                },
                                "IsDefault": {
                                    "description": "Retrieves if the profile data is default or not.",
                                    "type": "boolean"
                                },
                                "ProfileArn": {
                                    "description": "The ARN of a room profile.",
                                    "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                    "type": "string"
                                },
                                "ProfileName": {
                                    "description": "The name of a room profile.",
                                    "maxLength": 100,
                                    "minLength": 1,
                                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                    "type": "string"
                                },
                                "TemperatureUnit": {
                                    "description": "The temperature unit of a room profile.",
                                    "enum": [
                                        "FAHRENHEIT",
                                        "CELSIUS"
                                    ],
                                    "type": "string"
                                },
                                "Timezone": {
                                    "description": "The timezone of a room profile.",
                                    "maxLength": 100,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "WakeWord": {
                                    "description": "The wake word of a room profile.",
                                    "enum": [
                                        "ALEXA",
                                        "AMAZON",
                                        "ECHO",
                                        "COMPUTER"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "TotalCount": {
                        "description": "The total number of room profiles returned.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SearchRoomsRequest": {
                "properties": {
                    "Filters": {
                        "description": "The filters to use to list a specified set of rooms. The supported filter keys are RoomName and ProfileName.",
                        "items": {
                            "description": "A filter name and value pair that is used to return a more specific list of results. Filters can be used to match a set of resources by various criteria.",
                            "properties": {
                                "Key": {
                                    "description": "The key of a filter.",
                                    "maxLength": 500,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The values of a filter.",
                                    "items": {
                                        "maxLength": 500,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "maxItems": 5,
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Key",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "maxItems": 25,
                        "type": "array"
                    },
                    "MaxResults": {
                        "description": "The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved. ",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>.",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string"
                    },
                    "SortCriteria": {
                        "description": "The sort order to use in listing the specified set of rooms. The supported sort keys are RoomName and ProfileName.",
                        "items": {
                            "description": "An object representing a sort criteria. ",
                            "properties": {
                                "Key": {
                                    "description": "The sort key of a sort object.",
                                    "maxLength": 500,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The sort value of a sort object.",
                                    "enum": [
                                        "ASC",
                                        "DESC"
                                    ],
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Key",
                                "Value"
                            ],
                            "type": "object"
                        },
                        "maxItems": 25,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "SearchRoomsResponse": {
                "properties": {
                    "NextToken": {
                        "description": "The token returned to indicate that there is more data available.",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Rooms": {
                        "description": "The rooms that meet the specified set of filter criteria, in sort order.",
                        "items": {
                            "description": "The data of a room.",
                            "properties": {
                                "Description": {
                                    "description": "The description of a room.",
                                    "maxLength": 200,
                                    "minLength": 1,
                                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                    "type": "string"
                                },
                                "ProfileArn": {
                                    "description": "The profile ARN of a room.",
                                    "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                    "type": "string"
                                },
                                "ProfileName": {
                                    "description": "The profile name of a room.",
                                    "maxLength": 100,
                                    "minLength": 1,
                                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                    "type": "string"
                                },
                                "ProviderCalendarId": {
                                    "description": "The provider calendar ARN of a room.",
                                    "maxLength": 100,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "RoomArn": {
                                    "description": "The ARN of a room.",
                                    "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                    "type": "string"
                                },
                                "RoomName": {
                                    "description": "The name of a room.",
                                    "maxLength": 100,
                                    "minLength": 1,
                                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "TotalCount": {
                        "description": "The total number of rooms returned.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SearchSkillGroupsRequest": {
                "properties": {
                    "Filters": {
                        "description": "The filters to use to list a specified set of skill groups. The supported filter key is SkillGroupName. ",
                        "items": {
                            "description": "A filter name and value pair that is used to return a more specific list of results. Filters can be used to match a set of resources by various criteria.",
                            "properties": {
                                "Key": {
                                    "description": "The key of a filter.",
                                    "maxLength": 500,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The values of a filter.",
                                    "items": {
                                        "maxLength": 500,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "maxItems": 5,
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Key",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "maxItems": 25,
                        "type": "array"
                    },
                    "MaxResults": {
                        "description": "The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved. ",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>. Required.",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string"
                    },
                    "SortCriteria": {
                        "description": "The sort order to use in listing the specified set of skill groups. The supported sort key is SkillGroupName. ",
                        "items": {
                            "description": "An object representing a sort criteria. ",
                            "properties": {
                                "Key": {
                                    "description": "The sort key of a sort object.",
                                    "maxLength": 500,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The sort value of a sort object.",
                                    "enum": [
                                        "ASC",
                                        "DESC"
                                    ],
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Key",
                                "Value"
                            ],
                            "type": "object"
                        },
                        "maxItems": 25,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "SearchSkillGroupsResponse": {
                "properties": {
                    "NextToken": {
                        "description": "The token returned to indicate that there is more data available.",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string"
                    },
                    "SkillGroups": {
                        "description": "The skill groups that meet the filter criteria, in sort order.",
                        "items": {
                            "description": "The attributes of a skill group.",
                            "properties": {
                                "Description": {
                                    "description": "The description of a skill group.",
                                    "maxLength": 200,
                                    "minLength": 1,
                                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                    "type": "string"
                                },
                                "SkillGroupArn": {
                                    "description": "The skill group ARN of a skill group.",
                                    "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                    "type": "string"
                                },
                                "SkillGroupName": {
                                    "description": "The skill group name of a skill group.",
                                    "maxLength": 100,
                                    "minLength": 1,
                                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "TotalCount": {
                        "description": "The total number of skill groups returned.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SearchUsersRequest": {
                "properties": {
                    "Filters": {
                        "description": "The filters to use for listing a specific set of users. Required. Supported filter keys are UserId, FirstName, LastName, Email, and EnrollmentStatus.",
                        "items": {
                            "description": "A filter name and value pair that is used to return a more specific list of results. Filters can be used to match a set of resources by various criteria.",
                            "properties": {
                                "Key": {
                                    "description": "The key of a filter.",
                                    "maxLength": 500,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "The values of a filter.",
                                    "items": {
                                        "maxLength": 500,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "maxItems": 5,
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Key",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "maxItems": 25,
                        "type": "array"
                    },
                    "MaxResults": {
                        "description": "The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved. Required.",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>. Required.",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string"
                    },
                    "SortCriteria": {
                        "description": "The sort order to use in listing the filtered set of users. Required. Supported sort keys are UserId, FirstName, LastName, Email, and EnrollmentStatus.",
                        "items": {
                            "description": "An object representing a sort criteria. ",
                            "properties": {
                                "Key": {
                                    "description": "The sort key of a sort object.",
                                    "maxLength": 500,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The sort value of a sort object.",
                                    "enum": [
                                        "ASC",
                                        "DESC"
                                    ],
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Key",
                                "Value"
                            ],
                            "type": "object"
                        },
                        "maxItems": 25,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "SearchUsersResponse": {
                "properties": {
                    "NextToken": {
                        "description": "The token returned to indicate that there is more data available.",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string"
                    },
                    "TotalCount": {
                        "description": "The total number of users returned.",
                        "type": "integer"
                    },
                    "Users": {
                        "description": "The users that meet the specified set of filter criteria, in sort order.",
                        "items": {
                            "description": "Information related to a user.",
                            "properties": {
                                "Email": {
                                    "description": "The email of a user.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                                    "type": "string"
                                },
                                "EnrollmentId": {
                                    "description": "The enrollment ARN of a user.",
                                    "maxLength": 128,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "EnrollmentStatus": {
                                    "description": "The enrollment status of a user.",
                                    "enum": [
                                        "INITIALIZED",
                                        "PENDING",
                                        "REGISTERED",
                                        "DISASSOCIATING",
                                        "DEREGISTERING"
                                    ],
                                    "type": "string"
                                },
                                "FirstName": {
                                    "description": "The first name of a user.",
                                    "maxLength": 30,
                                    "minLength": 0,
                                    "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
                                    "type": "string"
                                },
                                "LastName": {
                                    "description": "The last name of a user.",
                                    "maxLength": 30,
                                    "minLength": 0,
                                    "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
                                    "type": "string"
                                },
                                "UserArn": {
                                    "description": "The ARN of a user.",
                                    "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "SendInvitationRequest": {
                "properties": {
                    "UserArn": {
                        "description": "The ARN of the user to whom to send an invitation. Required.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SendInvitationResponse": {
                "properties": {},
                "type": "object"
            },
            "ShortDescription": {
                "type": "string"
            },
            "ShortSkillIdList": {
                "items": {
                    "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                    "type": "string"
                },
                "maxItems": 3,
                "minItems": 0,
                "type": "array"
            },
            "SkillDetails": {
                "description": "Granular information about the skill.",
                "properties": {
                    "BulletPoints": {
                        "description": "The details about what the skill supports organized as bullet points.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "DeveloperInfo": {
                        "description": "The details about the developer that published the skill.",
                        "properties": {
                            "DeveloperName": {
                                "description": "The name of the developer.",
                                "type": "string"
                            },
                            "Email": {
                                "description": "The email of the developer.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                                "type": "string"
                            },
                            "PrivacyPolicy": {
                                "description": "The URL of the privacy policy.",
                                "type": "string"
                            },
                            "Url": {
                                "description": "The website of the developer.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "EndUserLicenseAgreement": {
                        "description": "The URL of the end user license agreement.",
                        "type": "string"
                    },
                    "GenericKeywords": {
                        "description": "The generic keywords associated with the skill that can be used to find a skill.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "InvocationPhrase": {
                        "description": "The phrase used to trigger the skill.",
                        "type": "string"
                    },
                    "NewInThisVersionBulletPoints": {
                        "description": "The updates added in bullet points.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "ProductDescription": {
                        "description": "The description of the product.",
                        "type": "string"
                    },
                    "ReleaseDate": {
                        "description": "The date when the skill was released.",
                        "type": "string"
                    },
                    "Reviews": {
                        "description": "The list of reviews for the skill, including Key and Value pair.",
                        "items": {
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "value": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "SkillTypes": {
                        "description": "The types of skills.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "SkillGroup": {
                "description": "A skill group with attributes.",
                "properties": {
                    "Description": {
                        "description": "The description of a skill group.",
                        "maxLength": 200,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "SkillGroupArn": {
                        "description": "The ARN of a skill group.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "SkillGroupName": {
                        "description": "The name of a skill group.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SkillGroupData": {
                "description": "The attributes of a skill group.",
                "properties": {
                    "Description": {
                        "description": "The description of a skill group.",
                        "maxLength": 200,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "SkillGroupArn": {
                        "description": "The skill group ARN of a skill group.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "SkillGroupName": {
                        "description": "The skill group name of a skill group.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SkillGroupDataList": {
                "items": {
                    "description": "The attributes of a skill group.",
                    "properties": {
                        "Description": {
                            "description": "The description of a skill group.",
                            "maxLength": 200,
                            "minLength": 1,
                            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                            "type": "string"
                        },
                        "SkillGroupArn": {
                            "description": "The skill group ARN of a skill group.",
                            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                            "type": "string"
                        },
                        "SkillGroupName": {
                            "description": "The skill group name of a skill group.",
                            "maxLength": 100,
                            "minLength": 1,
                            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "SkillGroupDescription": {
                "maxLength": 200,
                "minLength": 1,
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                "type": "string"
            },
            "SkillGroupName": {
                "maxLength": 100,
                "minLength": 1,
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                "type": "string"
            },
            "SkillId": {
                "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                "type": "string"
            },
            "SkillListMaxResults": {
                "maximum": 10,
                "minimum": 1,
                "type": "integer"
            },
            "SkillName": {
                "maxLength": 100,
                "minLength": 1,
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                "type": "string"
            },
            "SkillNotLinkedException": {},
            "SkillStoreType": {
                "type": "string"
            },
            "SkillSummary": {
                "description": "The summary of skills.",
                "properties": {
                    "EnablementType": {
                        "description": "Whether the skill is enabled under the user's account, or if it requires linking to be used.",
                        "enum": [
                            "ENABLED",
                            "PENDING"
                        ],
                        "type": "string"
                    },
                    "SkillId": {
                        "description": "The ARN of the skill summary.",
                        "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                        "type": "string"
                    },
                    "SkillName": {
                        "description": "The name of the skill.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "SkillType": {
                        "description": "Whether the skill is publicly available or is a private skill.",
                        "enum": [
                            "PUBLIC",
                            "PRIVATE"
                        ],
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
                        "type": "string"
                    },
                    "SupportsLinking": {
                        "description": "Linking support for a skill.",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "SkillSummaryList": {
                "items": {
                    "description": "The summary of skills.",
                    "properties": {
                        "EnablementType": {
                            "description": "Whether the skill is enabled under the user's account, or if it requires linking to be used.",
                            "enum": [
                                "ENABLED",
                                "PENDING"
                            ],
                            "type": "string"
                        },
                        "SkillId": {
                            "description": "The ARN of the skill summary.",
                            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                            "type": "string"
                        },
                        "SkillName": {
                            "description": "The name of the skill.",
                            "maxLength": 100,
                            "minLength": 1,
                            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                            "type": "string"
                        },
                        "SkillType": {
                            "description": "Whether the skill is publicly available or is a private skill.",
                            "enum": [
                                "PUBLIC",
                                "PRIVATE"
                            ],
                            "maxLength": 100,
                            "minLength": 1,
                            "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
                            "type": "string"
                        },
                        "SupportsLinking": {
                            "description": "Linking support for a skill.",
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "SkillType": {
                "enum": [
                    "PUBLIC",
                    "PRIVATE"
                ],
                "maxLength": 100,
                "minLength": 1,
                "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
                "type": "string"
            },
            "SkillTypeFilter": {
                "enum": [
                    "PUBLIC",
                    "PRIVATE",
                    "ALL"
                ],
                "type": "string"
            },
            "SkillTypes": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "SkillsStoreSkill": {
                "description": "The detailed information about an Alexa skill.",
                "properties": {
                    "IconUrl": {
                        "description": "The URL where the skill icon resides.",
                        "type": "string"
                    },
                    "SampleUtterances": {
                        "description": "Sample utterances that interact with the skill.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "ShortDescription": {
                        "description": "Short description about the skill.",
                        "type": "string"
                    },
                    "SkillDetails": {
                        "description": "Information about the skill.",
                        "properties": {
                            "BulletPoints": {
                                "description": "The details about what the skill supports organized as bullet points.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "DeveloperInfo": {
                                "description": "The details about the developer that published the skill.",
                                "properties": {
                                    "DeveloperName": {
                                        "description": "The name of the developer.",
                                        "type": "string"
                                    },
                                    "Email": {
                                        "description": "The email of the developer.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                                        "type": "string"
                                    },
                                    "PrivacyPolicy": {
                                        "description": "The URL of the privacy policy.",
                                        "type": "string"
                                    },
                                    "Url": {
                                        "description": "The website of the developer.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "EndUserLicenseAgreement": {
                                "description": "The URL of the end user license agreement.",
                                "type": "string"
                            },
                            "GenericKeywords": {
                                "description": "The generic keywords associated with the skill that can be used to find a skill.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "InvocationPhrase": {
                                "description": "The phrase used to trigger the skill.",
                                "type": "string"
                            },
                            "NewInThisVersionBulletPoints": {
                                "description": "The updates added in bullet points.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "ProductDescription": {
                                "description": "The description of the product.",
                                "type": "string"
                            },
                            "ReleaseDate": {
                                "description": "The date when the skill was released.",
                                "type": "string"
                            },
                            "Reviews": {
                                "description": "The list of reviews for the skill, including Key and Value pair.",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "SkillTypes": {
                                "description": "The types of skills.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    "SkillId": {
                        "description": "The ARN of the skill.",
                        "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                        "type": "string"
                    },
                    "SkillName": {
                        "description": "The name of the skill.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "SupportsLinking": {
                        "description": "Linking support for a skill.",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "SkillsStoreSkillList": {
                "items": {
                    "description": "The detailed information about an Alexa skill.",
                    "properties": {
                        "IconUrl": {
                            "description": "The URL where the skill icon resides.",
                            "type": "string"
                        },
                        "SampleUtterances": {
                            "description": "Sample utterances that interact with the skill.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "ShortDescription": {
                            "description": "Short description about the skill.",
                            "type": "string"
                        },
                        "SkillDetails": {
                            "description": "Information about the skill.",
                            "properties": {
                                "BulletPoints": {
                                    "description": "The details about what the skill supports organized as bullet points.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "DeveloperInfo": {
                                    "description": "The details about the developer that published the skill.",
                                    "properties": {
                                        "DeveloperName": {
                                            "description": "The name of the developer.",
                                            "type": "string"
                                        },
                                        "Email": {
                                            "description": "The email of the developer.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                                            "type": "string"
                                        },
                                        "PrivacyPolicy": {
                                            "description": "The URL of the privacy policy.",
                                            "type": "string"
                                        },
                                        "Url": {
                                            "description": "The website of the developer.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "EndUserLicenseAgreement": {
                                    "description": "The URL of the end user license agreement.",
                                    "type": "string"
                                },
                                "GenericKeywords": {
                                    "description": "The generic keywords associated with the skill that can be used to find a skill.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "InvocationPhrase": {
                                    "description": "The phrase used to trigger the skill.",
                                    "type": "string"
                                },
                                "NewInThisVersionBulletPoints": {
                                    "description": "The updates added in bullet points.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "ProductDescription": {
                                    "description": "The description of the product.",
                                    "type": "string"
                                },
                                "ReleaseDate": {
                                    "description": "The date when the skill was released.",
                                    "type": "string"
                                },
                                "Reviews": {
                                    "description": "The list of reviews for the skill, including Key and Value pair.",
                                    "items": {
                                        "properties": {
                                            "key": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "SkillTypes": {
                                    "description": "The types of skills.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "SkillId": {
                            "description": "The ARN of the skill.",
                            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                            "type": "string"
                        },
                        "SkillName": {
                            "description": "The name of the skill.",
                            "maxLength": 100,
                            "minLength": 1,
                            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                            "type": "string"
                        },
                        "SupportsLinking": {
                            "description": "Linking support for a skill.",
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "SmartHomeAppliance": {
                "description": "A smart home appliance that can connect to a central system. Any domestic device can be a smart appliance. ",
                "properties": {
                    "Description": {
                        "description": "The description of the smart home appliance.",
                        "type": "string"
                    },
                    "FriendlyName": {
                        "description": "The friendly name of the smart home appliance.",
                        "type": "string"
                    },
                    "ManufacturerName": {
                        "description": "The name of the manufacturer of the smart home appliance.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SmartHomeApplianceList": {
                "items": {
                    "description": "A smart home appliance that can connect to a central system. Any domestic device can be a smart appliance. ",
                    "properties": {
                        "Description": {
                            "description": "The description of the smart home appliance.",
                            "type": "string"
                        },
                        "FriendlyName": {
                            "description": "The friendly name of the smart home appliance.",
                            "type": "string"
                        },
                        "ManufacturerName": {
                            "description": "The name of the manufacturer of the smart home appliance.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "SoftwareVersion": {
                "type": "string"
            },
            "Sort": {
                "description": "An object representing a sort criteria. ",
                "properties": {
                    "Key": {
                        "description": "The sort key of a sort object.",
                        "maxLength": 500,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Value": {
                        "description": "The sort value of a sort object.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "Key",
                    "Value"
                ],
                "type": "object"
            },
            "SortKey": {
                "maxLength": 500,
                "minLength": 1,
                "type": "string"
            },
            "SortList": {
                "items": {
                    "description": "An object representing a sort criteria. ",
                    "properties": {
                        "Key": {
                            "description": "The sort key of a sort object.",
                            "maxLength": 500,
                            "minLength": 1,
                            "type": "string"
                        },
                        "Value": {
                            "description": "The sort value of a sort object.",
                            "enum": [
                                "ASC",
                                "DESC"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "Key",
                        "Value"
                    ],
                    "type": "object"
                },
                "maxItems": 25,
                "type": "array"
            },
            "SortValue": {
                "enum": [
                    "ASC",
                    "DESC"
                ],
                "type": "string"
            },
            "StartDeviceSyncRequest": {
                "properties": {
                    "DeviceArn": {
                        "description": "The ARN of the device to sync. Required.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "Features": {
                        "description": "Request structure to start the device sync. Required.",
                        "items": {
                            "enum": [
                                "BLUETOOTH",
                                "VOLUME",
                                "NOTIFICATIONS",
                                "LISTS",
                                "SKILLS",
                                "ALL"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "RoomArn": {
                        "description": "The ARN of the room with which the device to sync is associated. Required.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "required": [
                    "Features"
                ],
                "type": "object"
            },
            "StartDeviceSyncResponse": {
                "properties": {},
                "type": "object"
            },
            "StartSmartHomeApplianceDiscoveryRequest": {
                "properties": {
                    "RoomArn": {
                        "description": "The room where smart home appliance discovery was initiated.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "required": [
                    "RoomArn"
                ],
                "type": "object"
            },
            "StartSmartHomeApplianceDiscoveryResponse": {
                "properties": {},
                "type": "object"
            },
            "Tag": {
                "description": "A key-value pair that can be associated with a resource. ",
                "properties": {
                    "Key": {
                        "description": "The key of a tag. Tag keys are case-sensitive. ",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                        "type": "string"
                    },
                    "Value": {
                        "description": "The value of a tag. Tag values are case-sensitive and can be null.",
                        "maxLength": 256,
                        "minLength": 0,
                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                        "type": "string"
                    }
                },
                "required": [
                    "Key",
                    "Value"
                ],
                "type": "object"
            },
            "TagKey": {
                "maxLength": 128,
                "minLength": 1,
                "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                "type": "string"
            },
            "TagKeyList": {
                "items": {
                    "maxLength": 128,
                    "minLength": 1,
                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                    "type": "string"
                },
                "type": "array"
            },
            "TagList": {
                "items": {
                    "description": "A key-value pair that can be associated with a resource. ",
                    "properties": {
                        "Key": {
                            "description": "The key of a tag. Tag keys are case-sensitive. ",
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                            "type": "string"
                        },
                        "Value": {
                            "description": "The value of a tag. Tag values are case-sensitive and can be null.",
                            "maxLength": 256,
                            "minLength": 0,
                            "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                            "type": "string"
                        }
                    },
                    "required": [
                        "Key",
                        "Value"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "TagResourceRequest": {
                "properties": {
                    "Arn": {
                        "description": "The ARN of the resource to which to add metadata tags. Required. ",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "Tags": {
                        "description": "The tags to be added to the specified resource. Do not provide system tags. Required. ",
                        "items": {
                            "description": "A key-value pair that can be associated with a resource. ",
                            "properties": {
                                "Key": {
                                    "description": "The key of a tag. Tag keys are case-sensitive. ",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The value of a tag. Tag values are case-sensitive and can be null.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Key",
                                "Value"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Arn",
                    "Tags"
                ],
                "type": "object"
            },
            "TagResourceResponse": {
                "properties": {},
                "type": "object"
            },
            "TagValue": {
                "maxLength": 256,
                "minLength": 0,
                "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                "type": "string"
            },
            "TemperatureUnit": {
                "enum": [
                    "FAHRENHEIT",
                    "CELSIUS"
                ],
                "type": "string"
            },
            "Timestamp": {
                "format": "date-time",
                "type": "string"
            },
            "Timezone": {
                "maxLength": 100,
                "minLength": 1,
                "type": "string"
            },
            "TotalCount": {
                "type": "integer"
            },
            "UnauthorizedException": {},
            "UntagResourceRequest": {
                "properties": {
                    "Arn": {
                        "description": "The ARN of the resource from which to remove metadata tags. Required. ",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "TagKeys": {
                        "description": "The tags to be removed from the specified resource. Do not provide system tags. Required. ",
                        "items": {
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Arn",
                    "TagKeys"
                ],
                "type": "object"
            },
            "UntagResourceResponse": {
                "properties": {},
                "type": "object"
            },
            "UpdateAddressBookRequest": {
                "properties": {
                    "AddressBookArn": {
                        "description": "The ARN of the room to update.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "Description": {
                        "description": "The updated description of the room.",
                        "maxLength": 200,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The updated name of the room.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    }
                },
                "required": [
                    "AddressBookArn"
                ],
                "type": "object"
            },
            "UpdateAddressBookResponse": {
                "properties": {},
                "type": "object"
            },
            "UpdateBusinessReportScheduleRequest": {
                "properties": {
                    "Format": {
                        "description": "The format of the generated report (individual CSV files or zipped files of individual files).",
                        "enum": [
                            "CSV",
                            "CSV_ZIP"
                        ],
                        "type": "string"
                    },
                    "Recurrence": {
                        "description": "The recurrence of the reports.",
                        "properties": {
                            "StartDate": {
                                "description": "The start date.",
                                "pattern": "^\\d{4}\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01])$",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "S3BucketName": {
                        "description": "The S3 location of the output reports.",
                        "pattern": "[a-z0-9-\\.]{3,63}",
                        "type": "string"
                    },
                    "S3KeyPrefix": {
                        "description": "The S3 key where the report is delivered.",
                        "maxLength": 100,
                        "minLength": 0,
                        "pattern": "[A-Za-z0-9!_\\-\\.\\*'()/]*",
                        "type": "string"
                    },
                    "ScheduleArn": {
                        "description": "The ARN of the business report schedule.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "ScheduleName": {
                        "description": "The name identifier of the schedule.",
                        "maxLength": 64,
                        "minLength": 0,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    }
                },
                "required": [
                    "ScheduleArn"
                ],
                "type": "object"
            },
            "UpdateBusinessReportScheduleResponse": {
                "properties": {},
                "type": "object"
            },
            "UpdateConferenceProviderRequest": {
                "properties": {
                    "ConferenceProviderArn": {
                        "description": "The ARN of the conference provider.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "ConferenceProviderType": {
                        "description": "The type of the conference provider.",
                        "enum": [
                            "CHIME",
                            "BLUEJEANS",
                            "FUZE",
                            "GOOGLE_HANGOUTS",
                            "POLYCOM",
                            "RINGCENTRAL",
                            "SKYPE_FOR_BUSINESS",
                            "WEBEX",
                            "ZOOM",
                            "CUSTOM"
                        ],
                        "type": "string"
                    },
                    "IPDialIn": {
                        "description": "The IP endpoint and protocol for calling.",
                        "properties": {
                            "CommsProtocol": {
                                "description": "The protocol, including SIP, SIPS, and H323.",
                                "enum": [
                                    "SIP",
                                    "SIPS",
                                    "H323"
                                ],
                                "type": "string"
                            },
                            "Endpoint": {
                                "description": "The IP address.",
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "required": [
                            "Endpoint",
                            "CommsProtocol"
                        ],
                        "type": "object"
                    },
                    "MeetingSetting": {
                        "description": "The meeting settings for the conference provider.",
                        "properties": {
                            "RequirePin": {
                                "description": "The values that indicate whether the pin is always required.",
                                "enum": [
                                    "YES",
                                    "NO",
                                    "OPTIONAL"
                                ],
                                "type": "string"
                            }
                        },
                        "required": [
                            "RequirePin"
                        ],
                        "type": "object"
                    },
                    "PSTNDialIn": {
                        "description": "The information for PSTN conferencing.",
                        "properties": {
                            "CountryCode": {
                                "description": "The zip code.",
                                "pattern": "\\d{1,3}",
                                "type": "string"
                            },
                            "OneClickIdDelay": {
                                "description": "The delay duration before Alexa enters the conference ID with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.",
                                "maxLength": 2,
                                "minLength": 1,
                                "type": "string"
                            },
                            "OneClickPinDelay": {
                                "description": "The delay duration before Alexa enters the conference pin with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.",
                                "maxLength": 2,
                                "minLength": 1,
                                "type": "string"
                            },
                            "PhoneNumber": {
                                "description": "The phone number to call to join the conference.",
                                "pattern": "\\d{10}",
                                "type": "string"
                            }
                        },
                        "required": [
                            "CountryCode",
                            "PhoneNumber",
                            "OneClickIdDelay",
                            "OneClickPinDelay"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "ConferenceProviderArn",
                    "ConferenceProviderType",
                    "MeetingSetting"
                ],
                "type": "object"
            },
            "UpdateConferenceProviderResponse": {
                "properties": {},
                "type": "object"
            },
            "UpdateContactRequest": {
                "properties": {
                    "ContactArn": {
                        "description": "The ARN of the contact to update.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "DisplayName": {
                        "description": "The updated display name of the contact.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "FirstName": {
                        "description": "The updated first name of the contact.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "LastName": {
                        "description": "The updated last name of the contact.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "PhoneNumber": {
                        "description": "The updated phone number of the contact.",
                        "format": "password",
                        "pattern": "^\\+\\d{8,}$",
                        "type": "string"
                    }
                },
                "required": [
                    "ContactArn"
                ],
                "type": "object"
            },
            "UpdateContactResponse": {
                "properties": {},
                "type": "object"
            },
            "UpdateDeviceRequest": {
                "properties": {
                    "DeviceArn": {
                        "description": "The ARN of the device to update. Required.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "DeviceName": {
                        "description": "The updated device name. Required.",
                        "maxLength": 100,
                        "minLength": 2,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateDeviceResponse": {
                "properties": {},
                "type": "object"
            },
            "UpdateProfileRequest": {
                "properties": {
                    "Address": {
                        "description": "The updated address for the room profile.",
                        "maxLength": 500,
                        "minLength": 1,
                        "type": "string"
                    },
                    "DistanceUnit": {
                        "description": "The updated distance unit for the room profile.",
                        "enum": [
                            "METRIC",
                            "IMPERIAL"
                        ],
                        "type": "string"
                    },
                    "IsDefault": {
                        "description": "Sets the profile as default if selected. If this is missing, no update is done to the default status.",
                        "type": "boolean"
                    },
                    "MaxVolumeLimit": {
                        "description": "The updated maximum volume limit for the room profile.",
                        "type": "integer"
                    },
                    "PSTNEnabled": {
                        "description": "Whether the PSTN setting of the room profile is enabled.",
                        "type": "boolean"
                    },
                    "ProfileArn": {
                        "description": "The ARN of the room profile to update. Required.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "ProfileName": {
                        "description": "The updated name for the room profile.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "SetupModeDisabled": {
                        "description": "Whether the setup mode of the profile is enabled.",
                        "type": "boolean"
                    },
                    "TemperatureUnit": {
                        "description": "The updated temperature unit for the room profile.",
                        "enum": [
                            "FAHRENHEIT",
                            "CELSIUS"
                        ],
                        "type": "string"
                    },
                    "Timezone": {
                        "description": "The updated timezone for the room profile.",
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string"
                    },
                    "WakeWord": {
                        "description": "The updated wake word for the room profile.",
                        "enum": [
                            "ALEXA",
                            "AMAZON",
                            "ECHO",
                            "COMPUTER"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateProfileResponse": {
                "properties": {},
                "type": "object"
            },
            "UpdateRoomRequest": {
                "properties": {
                    "Description": {
                        "description": "The updated description for the room.",
                        "maxLength": 200,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "ProfileArn": {
                        "description": "The updated profile ARN for the room.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "ProviderCalendarId": {
                        "description": "The updated provider calendar ARN for the room.",
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string"
                    },
                    "RoomArn": {
                        "description": "The ARN of the room to update. ",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "RoomName": {
                        "description": "The updated name for the room.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateRoomResponse": {
                "properties": {},
                "type": "object"
            },
            "UpdateSkillGroupRequest": {
                "properties": {
                    "Description": {
                        "description": "The updated description for the skill group.",
                        "maxLength": 200,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    },
                    "SkillGroupArn": {
                        "description": "The ARN of the skill group to update. ",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    },
                    "SkillGroupName": {
                        "description": "The updated name for the skill group.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateSkillGroupResponse": {
                "properties": {},
                "type": "object"
            },
            "Url": {
                "type": "string"
            },
            "UserCode": {
                "maxLength": 128,
                "minLength": 1,
                "type": "string"
            },
            "UserData": {
                "description": "Information related to a user.",
                "properties": {
                    "Email": {
                        "description": "The email of a user.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                        "type": "string"
                    },
                    "EnrollmentId": {
                        "description": "The enrollment ARN of a user.",
                        "maxLength": 128,
                        "minLength": 0,
                        "type": "string"
                    },
                    "EnrollmentStatus": {
                        "description": "The enrollment status of a user.",
                        "enum": [
                            "INITIALIZED",
                            "PENDING",
                            "REGISTERED",
                            "DISASSOCIATING",
                            "DEREGISTERING"
                        ],
                        "type": "string"
                    },
                    "FirstName": {
                        "description": "The first name of a user.",
                        "maxLength": 30,
                        "minLength": 0,
                        "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
                        "type": "string"
                    },
                    "LastName": {
                        "description": "The last name of a user.",
                        "maxLength": 30,
                        "minLength": 0,
                        "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
                        "type": "string"
                    },
                    "UserArn": {
                        "description": "The ARN of a user.",
                        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserDataList": {
                "items": {
                    "description": "Information related to a user.",
                    "properties": {
                        "Email": {
                            "description": "The email of a user.",
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                            "type": "string"
                        },
                        "EnrollmentId": {
                            "description": "The enrollment ARN of a user.",
                            "maxLength": 128,
                            "minLength": 0,
                            "type": "string"
                        },
                        "EnrollmentStatus": {
                            "description": "The enrollment status of a user.",
                            "enum": [
                                "INITIALIZED",
                                "PENDING",
                                "REGISTERED",
                                "DISASSOCIATING",
                                "DEREGISTERING"
                            ],
                            "type": "string"
                        },
                        "FirstName": {
                            "description": "The first name of a user.",
                            "maxLength": 30,
                            "minLength": 0,
                            "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
                            "type": "string"
                        },
                        "LastName": {
                            "description": "The last name of a user.",
                            "maxLength": 30,
                            "minLength": 0,
                            "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
                            "type": "string"
                        },
                        "UserArn": {
                            "description": "The ARN of a user.",
                            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "UserId": {
                "pattern": "amzn1\\.[A-Za-z0-9+-\\/=.]{1,300}",
                "type": "string"
            },
            "Utterance": {
                "type": "string"
            },
            "Value": {
                "minLength": 1,
                "type": "string"
            },
            "WakeWord": {
                "enum": [
                    "ALEXA",
                    "AMAZON",
                    "ECHO",
                    "COMPUTER"
                ],
                "type": "string"
            },
            "boolean": {
                "type": "boolean"
            },
            "user_FirstName": {
                "maxLength": 30,
                "minLength": 0,
                "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
                "type": "string"
            },
            "user_LastName": {
                "maxLength": 30,
                "minLength": 0,
                "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
                "type": "string"
            },
            "user_UserId": {
                "maxLength": 128,
                "minLength": 1,
                "pattern": "[a-zA-Z0-9@_+.-]*",
                "type": "string"
            }
        },
        "parameters": {
            "Action": {
                "in": "query",
                "name": "Action",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "Version": {
                "in": "query",
                "name": "Version",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Algorithm": {
                "in": "header",
                "name": "X-Amz-Algorithm",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Content-Sha256": {
                "in": "header",
                "name": "X-Amz-Content-Sha256",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Credential": {
                "in": "header",
                "name": "X-Amz-Credential",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Date": {
                "in": "header",
                "name": "X-Amz-Date",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Security-Token": {
                "in": "header",
                "name": "X-Amz-Security-Token",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Signature": {
                "in": "header",
                "name": "X-Amz-Signature",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-SignedHeaders": {
                "in": "header",
                "name": "X-Amz-SignedHeaders",
                "required": false,
                "schema": {
                    "type": "string"
                }
            }
        },
        "requestBodies": {
            "ApproveSkillBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "SkillId": {
                                    "description": "The unique identifier of the skill.",
                                    "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "SkillId"
                            ],
                            "type": "object"
                        }
                    }
                },
                "required": true
            },
            "GetConferencePreferenceBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {},
                            "type": "object"
                        }
                    }
                },
                "required": true
            }
        },
        "securitySchemes": {
            "hmac": {
                "description": "Amazon Signature authorization v4",
                "in": "header",
                "name": "Authorization",
                "type": "apiKey",
                "x-amazon-apigateway-authtype": "awsSigv4"
            }
        }
    }
}